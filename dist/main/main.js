(()=>{var e={840:(e,t,s)=>{var n,i=s(840);n="undefined"!=typeof window?window:void 0!==i?i:"undefined"!=typeof self?self:{},e.exports=n}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{"use strict";const e=require("electron"),t=require("path"),n={CSP:{development:"default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' http://localhost:3000 ws://localhost:3000; style-src 'self' 'unsafe-inline' http://localhost:3000; img-src 'self' data: blob: http://localhost:3000; font-src 'self' data: http://localhost:3000; connect-src 'self' http://localhost:3000 ws://localhost:3000 wss://localhost:3000; worker-src 'self' blob:; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'",production:"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self'; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'"},webSecurity:{nodeIntegration:!1,contextIsolation:!0,webSecurity:!0,allowRunningInsecureContent:!1,experimentalFeatures:!1,sandbox:!1,disableBlinkFeatures:"Auxclick",spellcheck:!1,nodeIntegrationInSubFrames:!1,nodeIntegrationInWorker:!1,webgl:!0,enableRemoteModule:!1},securityHeaders:{"X-Frame-Options":"DENY","X-XSS-Protection":"1; mode=block","X-Content-Type-Options":"nosniff","Referrer-Policy":"strict-origin-when-cross-origin"},getCurrentCSP(){return this.CSP.production},getAllSecurityHeaders(){return{"Content-Security-Policy":this.getCurrentCSP(),...this.securityHeaders}},isSafeUrl(e){try{const t=new URL(e);return["https:","http:","file:","data:","blob:"].includes(t.protocol)}catch{return!1}}};class i{constructor(){this.windows=new Map}createMainWindow(){const{width:s,height:i}=e.screen.getPrimaryDisplay().workAreaSize,r=new e.BrowserWindow({width:Math.min(1400,.9*s),height:Math.min(900,.9*i),minWidth:1200,minHeight:800,webPreferences:{...n.webSecurity,preload:t.join(__dirname,"./preload.js"),backgroundThrottling:!1,disableDialogs:!1,safeDialogs:!0,safeDialogsMessage:"G-Asset-Forge检测到不安全的对话框尝试"},titleBarStyle:"darwin"===process.platform?"hiddenInset":"hidden",frame:!1,show:!1,icon:"win32"===process.platform?t.join(__dirname,"../../assets/icon.ico"):t.join(__dirname,"../../assets/icon.png"),transparent:!1,thickFrame:!0,acceptFirstMouse:!1,disableAutoHideCursor:!1,enableLargerThanScreen:!1,fullscreen:!1,fullscreenable:!0,hasShadow:!0,maximizable:!0,minimizable:!0,movable:!0,resizable:!0,skipTaskbar:!1,useContentSize:!1});return r.once("ready-to-show",()=>{r.show(),r.center()}),r.on("maximize",()=>{r.webContents.send("window:maximized")}),r.on("unmaximize",()=>{r.webContents.send("window:unmaximized")}),r.on("enter-full-screen",()=>{r.webContents.send("window:enter-full-screen")}),r.on("leave-full-screen",()=>{r.webContents.send("window:leave-full-screen")}),this.windows.set("main",r),r}getWindow(e){return this.windows.get(e)}closeWindow(e){const t=this.windows.get(e);t&&!t.isDestroyed()&&(t.close(),this.windows.delete(e))}closeAllWindows(){this.windows.forEach((e,t)=>{e.isDestroyed()||e.close()}),this.windows.clear()}focusWindow(e){const t=this.windows.get(e);t&&!t.isDestroyed()&&(t.isMinimized()&&t.restore(),t.focus())}}const r=require("fs-extra");class a{constructor(){this.userDataPath=e.app.getPath("userData"),this.sharedDrivePath=this.detectSharedDrive(),this.initializeDirectories()}detectSharedDrive(){const e=["Z:\\","/Volumes/Shared","/mnt/shared"];for(const t of e)try{if(r.existsSync(t))return t}catch(e){}return null}async initializeDirectories(){try{if(await r.ensureDir(t.join(this.userDataPath,"projects")),await r.ensureDir(t.join(this.userDataPath,"assets")),await r.ensureDir(t.join(this.userDataPath,"templates")),await r.ensureDir(t.join(this.userDataPath,"exports")),this.sharedDrivePath)try{await r.ensureDir(t.join(this.sharedDrivePath,"g-asset-forge","shared-assets")),await r.ensureDir(t.join(this.sharedDrivePath,"g-asset-forge","shared-projects"))}catch(e){console.warn("Could not create shared directories:",e)}}catch(e){console.error("Failed to initialize directories:",e)}}async readFile(e){try{const t=this.resolvePath(e);return{success:!0,data:await r.readFile(t,"utf8")}}catch(e){return{success:!1,error:e.message}}}async writeFile(e,s){try{const n=this.resolvePath(e);if(await r.ensureDir(t.dirname(n)),!this.isSharedPath(e)||!this.sharedDrivePath)return await r.writeFile(n,s,"utf8"),{success:!0,path:n,location:"local"};try{return await r.writeFile(n,s,"utf8"),{success:!0,path:n,location:"shared"}}catch(t){const n=this.getLocalFallbackPath(e);return await r.writeFile(n,s,"utf8"),{success:!0,path:n,location:"local",fallbackUsed:!0,originalError:t.message}}}catch(e){return{success:!1,error:e.message}}}async exists(e){try{const t=this.resolvePath(e);return await r.pathExists(t)}catch(e){return!1}}async createDirectory(e){try{const t=this.resolvePath(e);return await r.ensureDir(t),{success:!0,path:t}}catch(e){return{success:!1,error:e.message}}}resolvePath(e){return t.isAbsolute(e)?e:this.isSharedPath(e)&&this.sharedDrivePath?t.join(this.sharedDrivePath,"g-asset-forge",e.replace("shared/","")):t.join(this.userDataPath,e)}isSharedPath(e){return e.startsWith("shared/")||e.includes("/shared/")}getLocalFallbackPath(e){const s=e.replace("shared/","local-fallback/");return t.join(this.userDataPath,s)}getSharedDriveStatus(){return{available:null!==this.sharedDrivePath,path:this.sharedDrivePath}}getUserDataPath(){return this.userDataPath}}class o{constructor(){this.mainWindow=null,this.fileSystemManager=new a,this.handlers=new Map}setupHandlers(t){try{console.log("Setting up IPC handlers..."),this.mainWindow=t,this.registerHandler("fs:readFile",async(e,t)=>await this.fileSystemManager.readFile(t)),this.registerHandler("fs:writeFile",async(e,t,s)=>await this.fileSystemManager.writeFile(t,s)),this.registerHandler("fs:exists",async(e,t)=>await this.fileSystemManager.exists(t)),this.registerHandler("fs:createDirectory",async(e,t)=>await this.fileSystemManager.createDirectory(t)),this.registerHandler("window:minimize",async()=>(this.mainWindow?.minimize(),{success:!0})),this.registerHandler("window:maximize",async()=>(this.mainWindow?.maximize(),{success:!0})),this.registerHandler("window:restore",async()=>(this.mainWindow?.unmaximize(),{success:!0})),this.registerHandler("window:close",async()=>(this.mainWindow?.close(),{success:!0})),this.registerHandler("window:isMaximized",async()=>this.mainWindow?.isMaximized()||!1),this.setupWindowEvents(),this.registerHandler("window:getSize",async()=>{if(this.mainWindow){const[e,t]=this.mainWindow.getSize();return{width:e,height:t}}return{width:0,height:0}}),this.registerHandler("window:setSize",async(e,t,s,n=!0)=>this.mainWindow?(this.mainWindow.setSize(t,s,n),{success:!0}):{success:!1,error:"Main window not available"}),this.registerHandler("window:setResizable",async(e,t)=>this.mainWindow?(this.mainWindow.setResizable(t),{success:!0}):{success:!1,error:"Main window not available"}),this.registerHandler("window:center",async()=>this.mainWindow?(this.mainWindow.center(),{success:!0}):{success:!1,error:"Main window not available"}),this.registerHandler("app:getVersion",async()=>e.app.getVersion()),this.registerHandler("app:getPlatform",async()=>process.platform),this.registerHandler("app:getName",async()=>e.app.getName()),this.registerHandler("app:getPath",async(t,s)=>{try{return e.app.getPath(s)}catch(e){throw new Error(`Invalid path name: ${s}`)}}),this.registerHandler("ipc:healthCheck",async()=>({success:!0,timestamp:Date.now(),message:"IPC communication is working correctly"})),console.log(`IPC handlers registered: ${this.handlers.size} handlers`)}catch(e){throw console.error("Failed to setup IPC handlers:",e),e}}registerHandler(t,s){try{const n=async(...e)=>{try{if(!this.validateArgs(t,e))return{success:!1,error:`Invalid arguments for channel: ${t}`};const n=await s(...e);return n&&"object"==typeof n&&"success"in n?n:{success:!0,data:n}}catch(e){return console.error(`IPC handler error for channel ${t}:`,e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}};e.ipcMain.handle(t,n),this.handlers.set(t,s),console.log(`Registered IPC handler: ${t}`)}catch(e){console.error(`Failed to register handler for channel ${t}:`,e)}}validateArgs(e,t){try{if(!Array.isArray(t)||0===t.length)return!0;switch(e){case"fs:readFile":case"fs:exists":case"fs:createDirectory":case"app:getPath":return t.length>=2&&"string"==typeof t[1]&&t[1].length>0;case"fs:writeFile":return t.length>=3&&"string"==typeof t[1]&&t[1].length>0;default:return!0}}catch(t){return console.error(`Validation error for channel ${e}:`,t),!1}}cleanup(){try{console.log("Cleaning up IPC handlers...");for(const t of this.handlers.keys())e.ipcMain.removeHandler(t),console.log(`Removed IPC handler: ${t}`);this.handlers.clear(),this.mainWindow=null,console.log("IPC handlers cleanup completed")}catch(e){console.error("Error during IPC handlers cleanup:",e)}}getHandlerCount(){return this.handlers.size}hasHandler(e){return this.handlers.has(e)}getChannels(){return Array.from(this.handlers.keys())}setupWindowEvents(){this.mainWindow&&(this.mainWindow.on("maximize",()=>{this.mainWindow?.webContents.send("window:maximized")}),this.mainWindow.on("unmaximize",()=>{this.mainWindow?.webContents.send("window:unmaximized")}),this.mainWindow.on("enter-full-screen",()=>{this.mainWindow?.webContents.send("window:enter-full-screen")}),this.mainWindow.on("leave-full-screen",()=>{this.mainWindow?.webContents.send("window:leave-full-screen")}))}}var l;!function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR"}(l||(l={}));const c=new class{constructor(){this.logLevel=l.INFO}shouldLog(e){return e>=this.logLevel}formatMessage(e,t,...s){const n=`[${(new Date).toISOString()}] [${e}] ${t}`;s.length>0?console.log(n,...s):console.log(n)}debug(e,...t){this.shouldLog(l.DEBUG)&&this.formatMessage("DEBUG",e,...t)}info(e,...t){this.shouldLog(l.INFO)&&this.formatMessage("INFO",e,...t)}warn(e,...t){this.shouldLog(l.WARN)&&this.formatMessage("WARN",e,...t)}error(e,...t){this.shouldLog(l.ERROR)&&this.formatMessage("ERROR",e,...t)}};var d=s(840);void 0===d&&(d=globalThis),new class{constructor(){this.mainWindow=null,this.windowManager=new i,this.ipcHandlers=new o,this.initializeApp()}initializeApp(){e.app.whenReady().then(()=>{this.createMainWindow(),this.setupIpcHandlers(),this.setupMenu(),e.app.on("activate",()=>{0===e.BrowserWindow.getAllWindows().length&&this.createMainWindow()})}),e.app.on("window-all-closed",()=>{this.cleanup(),"darwin"!==process.platform&&e.app.quit()}),e.app.on("before-quit",()=>{this.cleanup()}),e.app.on("web-contents-created",(e,t)=>{t.setWindowOpenHandler(({url:e})=>(c.warn("Window open attempt blocked:",e),{action:"deny"})),t.on("will-navigate",(e,t)=>{new URL(t),c.warn("Navigation blocked:",t),e.preventDefault()}),t.session.webRequest.onHeadersReceived((e,t)=>{const s=n.getAllSecurityHeaders();t({responseHeaders:{...e.responseHeaders,...Object.keys(s).reduce((e,t)=>(e[t]=[s[t]],e),{})}})}),t.session.webRequest.onBeforeRequest((e,t)=>{const s=e.url;if(!n.isSafeUrl(s))return c.warn("Unsafe URL blocked:",s),void t({cancel:!0});t({cancel:!1})})})}createMainWindow(){this.mainWindow=this.windowManager.createMainWindow();const e=t.join(__dirname,"../renderer/index.html");c.info("Loading renderer from:",e),this.mainWindow.loadFile(e),this.mainWindow.on("closed",()=>{this.mainWindow=null})}setupIpcHandlers(){this.ipcHandlers.setupHandlers(this.mainWindow),c.warn("IPC handlers setup completed")}cleanup(){try{c.warn("Starting application cleanup..."),this.ipcHandlers.cleanup(),this.mainWindow&&!this.mainWindow.isDestroyed()&&(this.mainWindow.removeAllListeners(),this.mainWindow=null),c.warn("Application cleanup completed")}catch(e){c.warn("Error during cleanup:",e)}}setupMenu(){const t=[{label:"文件",submenu:[{label:"新建项目",accelerator:"CmdOrCtrl+N",click:()=>{this.mainWindow?.webContents.send("menu:new-project")}},{label:"打开项目",accelerator:"CmdOrCtrl+O",click:()=>{this.mainWindow?.webContents.send("menu:open-project")}},{label:"保存项目",accelerator:"CmdOrCtrl+S",click:()=>{this.mainWindow?.webContents.send("menu:save-project")}},{type:"separator"},{label:"导出",accelerator:"CmdOrCtrl+E",click:()=>{this.mainWindow?.webContents.send("menu:export")}},{type:"separator"},{label:"退出",accelerator:"darwin"===process.platform?"Cmd+Q":"Ctrl+Q",click:()=>{e.app.quit()}}]},{label:"编辑",submenu:[{label:"撤销",accelerator:"CmdOrCtrl+Z",click:()=>{this.mainWindow?.webContents.send("menu:undo")}},{label:"重做",accelerator:"CmdOrCtrl+Shift+Z",click:()=>{this.mainWindow?.webContents.send("menu:redo")}},{type:"separator"},{label:"剪切",accelerator:"CmdOrCtrl+X",click:()=>{this.mainWindow?.webContents.send("menu:cut")}},{label:"复制",accelerator:"CmdOrCtrl+C",click:()=>{this.mainWindow?.webContents.send("menu:copy")}},{label:"粘贴",accelerator:"CmdOrCtrl+V",click:()=>{this.mainWindow?.webContents.send("menu:paste")}}]},{label:"视图",submenu:[{label:"放大",accelerator:"CmdOrCtrl+Plus",click:()=>{this.mainWindow?.webContents.send("menu:zoom-in")}},{label:"缩小",accelerator:"CmdOrCtrl+-",click:()=>{this.mainWindow?.webContents.send("menu:zoom-out")}},{label:"适应屏幕",accelerator:"CmdOrCtrl+0",click:()=>{this.mainWindow?.webContents.send("menu:fit-to-screen")}},{type:"separator"},{label:"切换开发者工具",accelerator:"darwin"===process.platform?"Cmd+Option+I":"Ctrl+Shift+I",click:()=>{this.mainWindow?.webContents.toggleDevTools()}}]}],s=e.Menu.buildFromTemplate(t);e.Menu.setApplicationMenu(s)}}})()})();