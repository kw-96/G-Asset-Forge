{"version":3,"file":"main.5778d586efdb9260da34.js","mappings":"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","sources":["webpack://g-asset-forge/webpack/runtime/chunk loaded","webpack://g-asset-forge/webpack/runtime/create fake namespace object","webpack://g-asset-forge/./src/renderer/ui/theme/tokens.ts","webpack://g-asset-forge/./src/renderer/ui/theme/index.ts","webpack://g-asset-forge/./src/renderer/ui/theme/ThemeProvider.tsx","webpack://g-asset-forge/./src/renderer/ui/styles/GlobalStyles.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Button/Button.tsx","webpack://g-asset-forge/./src/renderer/ui/components/IconButton/IconButton.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Dropdown/Dropdown.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Badge/Badge.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/TopToolbar.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Tooltip/Tooltip.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/LeftToolPanel.tsx","webpack://g-asset-forge/./src/renderer/components/Canvas/CanvasWorkspace.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Input/Input.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Slider/Slider.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Switch/Switch.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/RightPropertiesPanel.tsx","webpack://g-asset-forge/./src/renderer/ui/components/Progress/Progress.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/StatusBar.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/LayersPanel.tsx","webpack://g-asset-forge/./src/renderer/components/Assets/AssetsPanel.tsx","webpack://g-asset-forge/./src/renderer/components/Layout/MainLayout.tsx","webpack://g-asset-forge/./src/renderer/components/Welcome/WelcomeScreen.tsx","webpack://g-asset-forge/./src/renderer/utils/InitializationManager.ts","webpack://g-asset-forge/./src/renderer/utils/StateValidator.ts","webpack://g-asset-forge/./src/renderer/utils/DebugLogger.ts","webpack://g-asset-forge/./src/renderer/utils/ReactLoopFix.ts","webpack://g-asset-forge/./src/renderer/stores/appStore.ts","webpack://g-asset-forge/./src/renderer/components/App/AppContainer.tsx","webpack://g-asset-forge/./src/renderer/hooks/useAppInitialization.ts","webpack://g-asset-forge/./src/renderer/hooks/useRenderCounter.ts","webpack://g-asset-forge/./src/renderer/App.tsx","webpack://g-asset-forge/./src/renderer/components/ErrorBoundary.tsx","webpack://g-asset-forge/./src/renderer/index.tsx","webpack://g-asset-forge/webpack/bootstrap","webpack://g-asset-forge/webpack/runtime/compat get default export","webpack://g-asset-forge/webpack/runtime/define property getters","webpack://g-asset-forge/webpack/runtime/hasOwnProperty shorthand","webpack://g-asset-forge/webpack/runtime/make namespace object","webpack://g-asset-forge/webpack/runtime/runtimeId","webpack://g-asset-forge/webpack/runtime/jsonp chunk loading","webpack://g-asset-forge/webpack/runtime/nonce","webpack://g-asset-forge/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","/**\r\n * 设计令牌 - 基于Figma UI3设计系统\r\n * 定义颜色、间距、字体等设计基础元素\r\n */\r\n\r\n// 颜色系统\r\nexport const colors = {\r\n    // 主色调 - 专业的蓝紫色调，适合设计工具\r\n    primary: {\r\n        50: '#f0f4ff',\r\n        100: '#e0e7ff',\r\n        200: '#c7d2fe',\r\n        300: '#a5b4fc',\r\n        400: '#818cf8',\r\n        500: '#6366f1', // 主色\r\n        600: '#4f46e5',\r\n        700: '#4338ca',\r\n        800: '#3730a3',\r\n        900: '#312e81',\r\n    },\r\n\r\n    // 中性色 - 界面基础色\r\n    neutral: {\r\n        0: '#ffffff',\r\n        50: '#fafafa',\r\n        100: '#f5f5f5',\r\n        200: '#e5e5e5',\r\n        300: '#d4d4d4',\r\n        400: '#a3a3a3',\r\n        500: '#737373',\r\n        600: '#525252',\r\n        700: '#404040',\r\n        800: '#262626',\r\n        900: '#171717',\r\n        950: '#0a0a0a',\r\n    },\r\n\r\n    // 语义色彩\r\n    semantic: {\r\n        success: {\r\n            50: '#f0fdf4',\r\n            500: '#22c55e',\r\n            600: '#16a34a',\r\n        },\r\n        warning: {\r\n            50: '#fffbeb',\r\n            500: '#f59e0b',\r\n            600: '#d97706',\r\n        },\r\n        error: {\r\n            50: '#fef2f2',\r\n            500: '#ef4444',\r\n            600: '#dc2626',\r\n        },\r\n        info: {\r\n            50: '#eff6ff',\r\n            500: '#3b82f6',\r\n            600: '#2563eb',\r\n        },\r\n    },\r\n\r\n    // 画布专用色彩\r\n    canvas: {\r\n        background: '#f8fafc',\r\n        grid: '#e2e8f0',\r\n        selection: '#6366f1',\r\n        selectionBg: 'rgba(99, 102, 241, 0.1)',\r\n        guide: '#f59e0b',\r\n    },\r\n} as const;\r\n\r\n// 间距系统 - 8px基础网格\r\nexport const spacing = {\r\n    0: '0px',\r\n    1: '4px',   // 0.25rem\r\n    2: '8px',   // 0.5rem\r\n    3: '12px',  // 0.75rem\r\n    4: '16px',  // 1rem\r\n    5: '20px',  // 1.25rem\r\n    6: '24px',  // 1.5rem\r\n    8: '32px',  // 2rem\r\n    10: '40px', // 2.5rem\r\n    12: '48px', // 3rem\r\n    16: '64px', // 4rem\r\n    20: '80px', // 5rem\r\n    24: '96px', // 6rem\r\n} as const;\r\n\r\n// 字体系统\r\nexport const typography = {\r\n    fontFamily: {\r\n        sans: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n        ].join(', '),\r\n        mono: [\r\n            '\"SF Mono\"',\r\n            'Monaco',\r\n            '\"Cascadia Code\"',\r\n            '\"Roboto Mono\"',\r\n            'Consolas',\r\n            '\"Liberation Mono\"',\r\n            '\"Courier New\"',\r\n            'monospace',\r\n        ].join(', '),\r\n    },\r\n\r\n    fontSize: {\r\n        xs: '12px',   // 0.75rem\r\n        sm: '14px',   // 0.875rem\r\n        base: '16px', // 1rem\r\n        lg: '18px',   // 1.125rem\r\n        xl: '20px',   // 1.25rem\r\n        '2xl': '24px', // 1.5rem\r\n        '3xl': '30px', // 1.875rem\r\n        '4xl': '36px', // 2.25rem\r\n    },\r\n\r\n    fontWeight: {\r\n        normal: '400',\r\n        medium: '500',\r\n        semibold: '600',\r\n        bold: '700',\r\n    },\r\n\r\n    lineHeight: {\r\n        tight: '1.25',\r\n        normal: '1.5',\r\n        relaxed: '1.75',\r\n    },\r\n} as const;\r\n\r\n// 圆角系统\r\nexport const borderRadius = {\r\n    none: '0px',\r\n    sm: '2px',\r\n    base: '4px',\r\n    md: '6px',\r\n    lg: '8px',\r\n    xl: '12px',\r\n    '2xl': '16px',\r\n    full: '9999px',\r\n} as const;\r\n\r\n// 阴影系统\r\nexport const shadows = {\r\n    xs: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',\r\n    base: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)',\r\n    md: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',\r\n    lg: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)',\r\n    xl: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\r\n    inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.05)',\r\n} as const;\r\n\r\n// 动画系统\r\nexport const animation = {\r\n    duration: {\r\n        fast: '150ms',\r\n        normal: '250ms',\r\n        slow: '350ms',\r\n    },\r\n\r\n    easing: {\r\n        ease: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n        easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\r\n        easeOut: 'cubic-bezier(0, 0, 0.2, 1)',\r\n        easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n    },\r\n} as const;\r\n\r\n// Z-index层级\r\nexport const zIndex = {\r\n    hide: -1,\r\n    auto: 'auto',\r\n    base: 0,\r\n    docked: 10,\r\n    dropdown: 1000,\r\n    sticky: 1100,\r\n    banner: 1200,\r\n    overlay: 1300,\r\n    modal: 1400,\r\n    popover: 1500,\r\n    skipLink: 1600,\r\n    toast: 1700,\r\n    tooltip: 1800,\r\n} as const;\r\n\r\n// 断点系统\r\nexport const breakpoints = {\r\n    sm: '640px',\r\n    md: '768px',\r\n    lg: '1024px',\r\n    xl: '1280px',\r\n    '2xl': '1536px',\r\n} as const;\r\n\r\n// 组件尺寸\r\nexport const sizes = {\r\n    xs: '20px',\r\n    sm: '24px',\r\n    md: '32px',\r\n    lg: '40px',\r\n    xl: '48px',\r\n    '2xl': '56px',\r\n} as const;","/**\r\n * 主题系统 - 基于Figma UI3设计系统\r\n * 提供完整的设计令牌和主题配置\r\n */\r\n\r\nimport { colors, spacing, typography, borderRadius, shadows, animation, zIndex } from './tokens';\r\n\r\n// 简化的主题接口\r\nexport interface Theme {\r\n  colors: {\r\n    // 主色系\r\n    primary: string;\r\n    secondary: string;\r\n    accent: string;\r\n\r\n    // 语义色\r\n    success: string;\r\n    warning: string;\r\n    error: string;\r\n    info: string;\r\n\r\n    // 背景色\r\n    background: string;\r\n    surface: string;\r\n    overlay: string;\r\n\r\n    // 文本色\r\n    text: {\r\n      primary: string;\r\n      secondary: string;\r\n      tertiary: string;\r\n      disabled: string;\r\n      inverse: string;\r\n    };\r\n\r\n    // 边框色\r\n    border: {\r\n      default: string;\r\n      focus: string;\r\n      hover: string;\r\n    };\r\n\r\n    // 阴影\r\n    shadow: {\r\n      small: string;\r\n      medium: string;\r\n      large: string;\r\n    };\r\n\r\n    // 画布专用色\r\n    canvas: {\r\n      background: string;\r\n      grid: string;\r\n      selection: string;\r\n      selectionBg: string;\r\n      guide: string;\r\n    };\r\n  };\r\n  spacing: {\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n    '2xl': string;\r\n    '3xl': string;\r\n  };\r\n  typography: {\r\n    fontFamily: {\r\n      primary: string;\r\n      mono: string;\r\n    };\r\n    fontSize: typeof typography.fontSize;\r\n    fontWeight: typeof typography.fontWeight;\r\n    lineHeight: typeof typography.lineHeight;\r\n  };\r\n  borderRadius: typeof borderRadius;\r\n  shadows: typeof shadows;\r\n  animation: typeof animation;\r\n  zIndex: typeof zIndex;\r\n}\r\n\r\n// 亮色主题 - 优化视觉层次和对比度\r\nexport const lightTheme: Theme = {\r\n  colors: {\r\n    primary: colors.primary[500],\r\n    secondary: colors.primary[600],\r\n    accent: colors.primary[400],\r\n    success: colors.semantic.success[500],\r\n    warning: colors.semantic.warning[500],\r\n    error: colors.semantic.error[500],\r\n    info: colors.semantic.info[500],\r\n    background: '#fafbfc', // 更温和的背景色\r\n    surface: '#ffffff', // 纯白表面\r\n    overlay: 'rgba(15, 23, 42, 0.6)', // 更深的遮罩层\r\n    text: {\r\n      primary: colors.neutral[900],\r\n      secondary: colors.neutral[700], // 增强对比度\r\n      tertiary: colors.neutral[500],\r\n      disabled: colors.neutral[400],\r\n      inverse: colors.neutral[0],\r\n    },\r\n    border: {\r\n      default: colors.neutral[200],\r\n      focus: colors.primary[500],\r\n      hover: colors.neutral[300],\r\n    },\r\n    shadow: {\r\n      small: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n      medium: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n      large: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\r\n    },\r\n    canvas: {\r\n      ...colors.canvas,\r\n      background: '#f8fafc', // 更柔和的画布背景\r\n    },\r\n  },\r\n  spacing: {\r\n    xs: spacing[1],\r\n    sm: spacing[2],\r\n    md: spacing[4],\r\n    lg: spacing[6],\r\n    xl: spacing[8],\r\n    '2xl': spacing[12],\r\n    '3xl': spacing[16],\r\n  },\r\n  typography: {\r\n    fontFamily: {\r\n      primary: typography.fontFamily.sans,\r\n      mono: typography.fontFamily.mono,\r\n    },\r\n    fontSize: typography.fontSize,\r\n    fontWeight: typography.fontWeight,\r\n    lineHeight: typography.lineHeight,\r\n  },\r\n  borderRadius,\r\n  shadows,\r\n  animation,\r\n  zIndex,\r\n};\r\n\r\n// 暗色主题 - 优化对比度和视觉舒适度\r\nexport const darkTheme: Theme = {\r\n  ...lightTheme,\r\n  colors: {\r\n    ...lightTheme.colors,\r\n    background: '#0f172a', // 更深的背景色\r\n    surface: '#1e293b', // 更有层次的表面色\r\n    overlay: 'rgba(0, 0, 0, 0.8)', // 更深的遮罩\r\n    text: {\r\n      primary: '#f8fafc', // 更亮的主文本\r\n      secondary: '#cbd5e1', // 更好的对比度\r\n      tertiary: '#94a3b8',\r\n      disabled: '#64748b',\r\n      inverse: '#0f172a',\r\n    },\r\n    border: {\r\n      default: '#334155', // 更明显的边框\r\n      focus: colors.primary[400], // 暗色模式下使用更亮的焦点色\r\n      hover: '#475569',\r\n    },\r\n    shadow: {\r\n      small: '0 1px 2px 0 rgba(0, 0, 0, 0.3)',\r\n      medium: '0 4px 6px -1px rgba(0, 0, 0, 0.4), 0 2px 4px -1px rgba(0, 0, 0, 0.3)',\r\n      large: '0 20px 25px -5px rgba(0, 0, 0, 0.5), 0 10px 10px -5px rgba(0, 0, 0, 0.4)',\r\n    },\r\n    canvas: {\r\n      background: '#1e293b',\r\n      grid: '#334155',\r\n      selection: '#6366f1',\r\n      selectionBg: 'rgba(99, 102, 241, 0.15)', // 稍微增强选择背景\r\n      guide: '#f59e0b',\r\n    },\r\n  },\r\n};\r\n\r\n// 默认导出亮色主题\r\nexport const theme = lightTheme;\r\nexport default theme;\r\n\r\n// 类型导出\r\nexport type ThemeColors = Theme['colors'];\r\nexport type ThemeSpacing = Theme['spacing'];\r\n\r\n// 导出所有相关内容\r\nexport * from './tokens';\r\nexport * from './ThemeProvider';","import React, { ReactNode, createContext, useContext, useState } from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './index';\r\n\r\nexport type ThemeMode = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: typeof lightTheme;\r\n  mode: ThemeMode;\r\n  toggleTheme: () => void;\r\n  setTheme: (mode: ThemeMode) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [mode, setMode] = useState<ThemeMode>('light');\r\n\r\n  const toggleTheme = () => {\r\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const setTheme = (newMode: ThemeMode) => {\r\n    setMode(newMode);\r\n  };\r\n\r\n  const currentTheme = mode === 'light' ? lightTheme : darkTheme;\r\n\r\n  const contextValue: ThemeContextType = {\r\n    theme: currentTheme,\r\n    mode,\r\n    toggleTheme,\r\n    setTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      <StyledThemeProvider theme={currentTheme}>\r\n        {children}\r\n      </StyledThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","// 全局样式 - 基于新的UI系统\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  body {\r\n    font-family: ${({ theme }) => theme.typography.fontFamily.primary};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    color: ${({ theme }) => theme.colors.text.primary};\r\n    font-size: ${({ theme }) => theme.typography.fontSize.base};\r\n    line-height: ${({ theme }) => theme.typography.lineHeight.normal};\r\n    overflow: hidden;\r\n  }\r\n\r\n  #root {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  /* 滚动条样式 */\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.colors.border.default};\r\n    border-radius: ${({ theme }) => theme.borderRadius.sm};\r\n    \r\n    &:hover {\r\n      background: ${({ theme }) => theme.colors.border.hover};\r\n    }\r\n  }\r\n\r\n  ::-webkit-scrollbar-corner {\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n\r\n  /* 选择文本样式 */\r\n  ::selection {\r\n    background-color: ${({ theme }) => theme.colors.primary}40;\r\n    color: ${({ theme }) => theme.colors.text.primary};\r\n  }\r\n\r\n  /* 焦点样式重置 */\r\n  *:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* 按钮重置 */\r\n  button {\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    \r\n    &:disabled {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n\r\n  /* 输入框重置 */\r\n  input, textarea, select {\r\n    border: none;\r\n    outline: none;\r\n    font-family: inherit;\r\n  }\r\n\r\n  /* 链接重置 */\r\n  a {\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  /* 列表重置 */\r\n  ul, ol {\r\n    list-style: none;\r\n  }\r\n\r\n  /* 标题重置 */\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-weight: ${({ theme }) => theme.typography.fontWeight.normal};\r\n  }\r\n\r\n  /* 表单重置 */\r\n  fieldset {\r\n    border: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  /* 代码样式 */\r\n  code, pre {\r\n    font-family: ${({ theme }) => theme.typography.fontFamily.mono};\r\n  }\r\n\r\n  /* 工具类 */\r\n  .visually-hidden {\r\n    position: absolute !important;\r\n    width: 1px !important;\r\n    height: 1px !important;\r\n    padding: 0 !important;\r\n    margin: -1px !important;\r\n    overflow: hidden !important;\r\n    clip: rect(0, 0, 0, 0) !important;\r\n    white-space: nowrap !important;\r\n    border: 0 !important;\r\n  }\r\n\r\n  .no-select {\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  /* 应用布局 - 增强视觉层次 */\r\n  .app-layout {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    background: ${({ theme }) => theme.colors.background};\r\n    backdrop-filter: blur(8px);\r\n  }\r\n\r\n  .main-content {\r\n    display: flex;\r\n    flex: 1;\r\n    overflow: hidden;\r\n    gap: 1px; /* 添加微妙的分隔 */\r\n  }\r\n\r\n  .canvas-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: ${({ theme }) => theme.colors.canvas.background};\r\n    position: relative;\r\n    border-radius: ${({ theme }) => theme.borderRadius.lg};\r\n    margin: ${({ theme }) => theme.spacing.xs};\r\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  /* 工具栏样式增强 */\r\n  .toolbar {\r\n    background: ${({ theme }) => theme.colors.surface};\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n    backdrop-filter: blur(12px);\r\n    box-shadow: ${({ theme }) => theme.shadows.sm};\r\n  }\r\n\r\n  /* 侧边栏样式增强 */\r\n  .sidebar {\r\n    background: ${({ theme }) => theme.colors.surface};\r\n    border-right: 1px solid ${({ theme }) => theme.colors.border.default};\r\n    backdrop-filter: blur(12px);\r\n    box-shadow: ${({ theme }) => theme.shadows.sm};\r\n  }\r\n\r\n  /* 属性面板样式增强 */\r\n  .properties-panel {\r\n    background: ${({ theme }) => theme.colors.surface};\r\n    border-left: 1px solid ${({ theme }) => theme.colors.border.default};\r\n    backdrop-filter: blur(12px);\r\n    box-shadow: ${({ theme }) => theme.shadows.sm};\r\n  }\r\n\r\n  /* 动画工具类 */\r\n  .fade-in {\r\n    animation: fadeIn ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.easeOut};\r\n  }\r\n\r\n  .slide-in-right {\r\n    animation: slideInRight ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.easeOut};\r\n  }\r\n\r\n  .slide-in-left {\r\n    animation: slideInLeft ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.easeOut};\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n  }\r\n\r\n  @keyframes slideInRight {\r\n    from { transform: translateX(100%); }\r\n    to { transform: translateX(0); }\r\n  }\r\n\r\n  @keyframes slideInLeft {\r\n    from { transform: translateX(-100%); }\r\n    to { transform: translateX(0); }\r\n  }\r\n\r\n  /* 加载屏幕样式 */\r\n  #loading-screen {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${({ theme }) => theme.colors.background};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: ${({ theme }) => theme.zIndex.modal};\r\n    font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n    color: ${({ theme }) => theme.colors.text.secondary};\r\n  }\r\n`;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';\r\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg';\r\n\r\ninterface ButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onDrag' | 'onDragEnd' | 'onDragStart'> {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  loading?: boolean;\r\n  icon?: React.ReactNode;\r\n  iconPosition?: 'left' | 'right';\r\n  fullWidth?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst getVariantStyles = (variant: ButtonVariant) => {\r\n  switch (variant) {\r\n    case 'primary':\r\n      return css`\r\n        background: linear-gradient(135deg, ${({ theme }) => theme.colors.primary} 0%, ${({ theme }) => theme.colors.secondary} 100%);\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.primary};\r\n        box-shadow: ${({ theme }) => theme.shadows.sm};\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: linear-gradient(135deg, ${({ theme }) => theme.colors.secondary} 0%, ${({ theme }) => theme.colors.primary} 100%);\r\n          transform: translateY(-1px);\r\n          box-shadow: ${({ theme }) => theme.shadows.md};\r\n        }\r\n        \r\n        &:active:not(:disabled) {\r\n          transform: translateY(0);\r\n          box-shadow: ${({ theme }) => theme.shadows.sm};\r\n        }\r\n      `;\r\n\r\n    case 'secondary':\r\n      return css`\r\n        background: ${({ theme }) => theme.colors.surface};\r\n        color: ${({ theme }) => theme.colors.text.primary};\r\n        border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n        box-shadow: ${({ theme }) => theme.shadows.sm};\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.background};\r\n          border-color: ${({ theme }) => theme.colors.border.hover};\r\n          transform: translateY(-1px);\r\n          box-shadow: ${({ theme }) => theme.shadows.md};\r\n        }\r\n        \r\n        &:active:not(:disabled) {\r\n          transform: translateY(0);\r\n        }\r\n      `;\r\n\r\n    case 'outline':\r\n      return css`\r\n        background: transparent;\r\n        color: ${({ theme }) => theme.colors.primary};\r\n        border: 1px solid ${({ theme }) => theme.colors.primary};\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.primary}15;\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 12px ${({ theme }) => theme.colors.primary}25;\r\n        }\r\n        \r\n        &:active:not(:disabled) {\r\n          transform: translateY(0);\r\n        }\r\n      `;\r\n\r\n    case 'ghost':\r\n      return css`\r\n        background: transparent;\r\n        color: ${({ theme }) => theme.colors.text.primary};\r\n        border: 1px solid transparent;\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.surface};\r\n          border-color: ${({ theme }) => theme.colors.border.default};\r\n          transform: translateY(-1px);\r\n        }\r\n        \r\n        &:active:not(:disabled) {\r\n          transform: translateY(0);\r\n        }\r\n      `;\r\n\r\n    case 'danger':\r\n      return css`\r\n        background: linear-gradient(135deg, ${({ theme }) => theme.colors.error} 0%, #dc2626 100%);\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.error};\r\n        box-shadow: ${({ theme }) => theme.shadows.sm};\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: linear-gradient(135deg, #dc2626 0%, ${({ theme }) => theme.colors.error} 100%);\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 12px ${({ theme }) => theme.colors.error}25;\r\n        }\r\n        \r\n        &:active:not(:disabled) {\r\n          transform: translateY(0);\r\n        }\r\n      `;\r\n\r\n    default:\r\n      return css``;\r\n  }\r\n};\r\n\r\nconst getSizeStyles = (size: ButtonSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return css`\r\n        height: 28px;\r\n        padding: 0 ${({ theme }) => theme.spacing.sm};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n      `;\r\n\r\n    case 'sm':\r\n      return css`\r\n        height: 32px;\r\n        padding: 0 ${({ theme }) => theme.spacing.md};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n      `;\r\n\r\n    case 'md':\r\n      return css`\r\n        height: 40px;\r\n        padding: 0 ${({ theme }) => theme.spacing.lg};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.base};\r\n      `;\r\n\r\n    case 'lg':\r\n      return css`\r\n        height: 48px;\r\n        padding: 0 ${({ theme }) => theme.spacing.xl};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.lg};\r\n      `;\r\n\r\n    default:\r\n      return css``;\r\n  }\r\n};\r\n\r\nconst StyledButton = styled.button<{\r\n  $variant: ButtonVariant;\r\n  $size: ButtonSize;\r\n  $fullWidth: boolean;\r\n  $loading: boolean;\r\n}>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  \r\n  font-family: ${({ theme }) => theme.typography.fontFamily.primary};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  line-height: 1;\r\n  \r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  cursor: pointer;\r\n  transition: all ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  \r\n  ${({ $variant }) => getVariantStyles($variant)}\r\n  ${({ $size }) => getSizeStyles($size)}\r\n  \r\n  ${({ $fullWidth }) => $fullWidth && css`\r\n    width: 100%;\r\n  `}\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none !important;\r\n  }\r\n  \r\n  &:focus-visible {\r\n    outline: 2px solid ${({ theme }) => theme.colors.primary};\r\n    outline-offset: 2px;\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid transparent;\r\n  border-top: 2px solid currentColor;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  \r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.span<{ $position: 'left' | 'right' }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  ${({ $position }) => $position === 'right' && css`\r\n    order: 1;\r\n  `}\r\n`;\r\n\r\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({\r\n  variant = 'primary',\r\n  size = 'md',\r\n  loading = false,\r\n  icon,\r\n  iconPosition = 'left',\r\n  fullWidth = false,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  return (\r\n    <StyledButton\r\n      ref={ref}\r\n      disabled={disabled || loading}\r\n      $variant={variant}\r\n      $size={size}\r\n      $fullWidth={fullWidth}\r\n      $loading={loading}\r\n      {...props}\r\n    >\r\n      {loading && <LoadingSpinner />}\r\n      {icon && iconPosition === 'left' && <IconWrapper $position={iconPosition}>{icon}</IconWrapper>}\r\n      {children}\r\n      {icon && iconPosition === 'right' && <IconWrapper $position={iconPosition}>{icon}</IconWrapper>}\r\n    </StyledButton>\r\n  );\r\n});\r\n\r\nButton.displayName = 'Button';","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport type IconButtonVariant = 'default' | 'primary' | 'ghost' | 'danger';\r\nexport type IconButtonSize = 'xs' | 'sm' | 'md' | 'lg';\r\n\r\ninterface IconButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onDrag' | 'onDragEnd' | 'onDragStart'> {\r\n  variant?: IconButtonVariant;\r\n  size?: IconButtonSize;\r\n  icon: React.ReactNode;\r\n  loading?: boolean;\r\n}\r\n\r\nconst getVariantStyles = (variant: IconButtonVariant) => {\r\n  switch (variant) {\r\n    case 'primary':\r\n      return css`\r\n        background: ${({ theme }) => theme.colors.primary};\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.primary};\r\n        \r\n        &:hover:not(:disabled) {\r\n          opacity: 0.9;\r\n        }\r\n      `;\r\n    \r\n    case 'ghost':\r\n      return css`\r\n        background: transparent;\r\n        color: ${({ theme }) => theme.colors.text.secondary};\r\n        border: 1px solid transparent;\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.surface};\r\n          color: ${({ theme }) => theme.colors.text.primary};\r\n        }\r\n      `;\r\n    \r\n    case 'danger':\r\n      return css`\r\n        background: transparent;\r\n        color: ${({ theme }) => theme.colors.error};\r\n        border: 1px solid transparent;\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.error}10;\r\n        }\r\n      `;\r\n    \r\n    case 'default':\r\n    default:\r\n      return css`\r\n        background: ${({ theme }) => theme.colors.surface};\r\n        color: ${({ theme }) => theme.colors.text.primary};\r\n        border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n        \r\n        &:hover:not(:disabled) {\r\n          background: ${({ theme }) => theme.colors.border.hover};\r\n        }\r\n      `;\r\n  }\r\n};\r\n\r\nconst getSizeStyles = (size: IconButtonSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return css`\r\n        width: 24px;\r\n        height: 24px;\r\n        \r\n        svg {\r\n          width: 12px;\r\n          height: 12px;\r\n        }\r\n      `;\r\n    \r\n    case 'sm':\r\n      return css`\r\n        width: 32px;\r\n        height: 32px;\r\n        \r\n        svg {\r\n          width: 16px;\r\n          height: 16px;\r\n        }\r\n      `;\r\n    \r\n    case 'md':\r\n      return css`\r\n        width: 40px;\r\n        height: 40px;\r\n        \r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      `;\r\n    \r\n    case 'lg':\r\n      return css`\r\n        width: 48px;\r\n        height: 48px;\r\n        \r\n        svg {\r\n          width: 24px;\r\n          height: 24px;\r\n        }\r\n      `;\r\n    \r\n    default:\r\n      return css``;\r\n  }\r\n};\r\n\r\nconst StyledIconButton = styled.button<{\r\n  $variant: IconButtonVariant;\r\n  $size: IconButtonSize;\r\n}>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  cursor: pointer;\r\n  transition: all ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  \r\n  ${({ $variant }) => getVariantStyles($variant)}\r\n  ${({ $size }) => getSizeStyles($size)}\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none !important;\r\n  }\r\n  \r\n  &:focus-visible {\r\n    outline: 2px solid ${({ theme }) => theme.colors.primary};\r\n    outline-offset: 2px;\r\n  }\r\n  \r\n  svg {\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid transparent;\r\n  border-top: 2px solid currentColor;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  \r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IconButton = React.forwardRef<HTMLButtonElement, IconButtonProps>(({\r\n  variant = 'default',\r\n  size = 'md',\r\n  icon,\r\n  loading = false,\r\n  disabled,\r\n  ...props\r\n}, ref) => {\r\n  return (\r\n    <StyledIconButton\r\n      ref={ref}\r\n      $variant={variant}\r\n      $size={size}\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      {loading ? <LoadingSpinner /> : icon}\r\n    </StyledIconButton>\r\n  );\r\n});\r\n\r\nIconButton.displayName = 'IconButton';","/**\r\n * Dropdown组件 - 基于Radix UI和Figma UI3设计系统\r\n * 提供可访问的下拉菜单功能\r\n */\r\n\r\nimport React from 'react';\r\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\ninterface DropdownProps {\r\n  trigger: React.ReactNode;\r\n  children: React.ReactNode;\r\n  align?: 'start' | 'center' | 'end';\r\n  side?: 'top' | 'right' | 'bottom' | 'left';\r\n}\r\n\r\ninterface DropdownItemProps {\r\n  children: React.ReactNode;\r\n  onSelect?: (event: Event) => void;\r\n  disabled?: boolean;\r\n  destructive?: boolean;\r\n}\r\n\r\nconst slideUpAndFade = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(2px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst slideRightAndFade = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-2px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nconst slideDownAndFade = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-2px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst slideLeftAndFade = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(2px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nconst DropdownContent = styled(DropdownMenu.Content)`\r\n  min-width: 160px;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  padding: ${({ theme }) => theme.spacing.xs};\r\n  box-shadow: ${({ theme }) => theme.shadows.lg};\r\n  z-index: ${({ theme }) => theme.zIndex.dropdown};\r\n  \r\n  animation-duration: 400ms;\r\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\r\n  will-change: transform, opacity;\r\n  \r\n  &[data-state='open'][data-side='top'] {\r\n    animation-name: ${slideDownAndFade};\r\n  }\r\n  &[data-state='open'][data-side='right'] {\r\n    animation-name: ${slideLeftAndFade};\r\n  }\r\n  &[data-state='open'][data-side='bottom'] {\r\n    animation-name: ${slideUpAndFade};\r\n  }\r\n  &[data-state='open'][data-side='left'] {\r\n    animation-name: ${slideRightAndFade};\r\n  }\r\n`;\r\n\r\nconst DropdownItemStyled = styled(DropdownMenu.Item)<{ $destructive?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: ${({ theme }) => theme.spacing.sm} ${({ theme }) => theme.spacing.md};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-family: ${({ theme }) => theme.typography.fontFamily.primary};\r\n  color: ${({ theme, $destructive }) => \r\n    $destructive ? theme.colors.error : theme.colors.text.primary};\r\n  border-radius: ${({ theme }) => theme.borderRadius.sm};\r\n  cursor: pointer;\r\n  user-select: none;\r\n  outline: none;\r\n  \r\n  &:hover,\r\n  &[data-highlighted] {\r\n    background: ${({ theme, $destructive }) => \r\n      $destructive ? `${theme.colors.error}10` : theme.colors.surface};\r\n  }\r\n  \r\n  &[data-disabled] {\r\n    color: ${({ theme }) => theme.colors.text.disabled};\r\n    cursor: not-allowed;\r\n    \r\n    &:hover {\r\n      background: transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DropdownSeparator = styled(DropdownMenu.Separator)`\r\n  height: 1px;\r\n  background: ${({ theme }) => theme.colors.border.default};\r\n  margin: ${({ theme }) => theme.spacing.xs} 0;\r\n`;\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = ({\r\n  trigger,\r\n  children,\r\n  align = 'start',\r\n  side = 'bottom',\r\n}) => {\r\n  return (\r\n    <DropdownMenu.Root>\r\n      <DropdownMenu.Trigger asChild>\r\n        {trigger}\r\n      </DropdownMenu.Trigger>\r\n      \r\n      <DropdownMenu.Portal>\r\n        <DropdownContent align={align} side={side} sideOffset={4}>\r\n          {children}\r\n        </DropdownContent>\r\n      </DropdownMenu.Portal>\r\n    </DropdownMenu.Root>\r\n  );\r\n};\r\n\r\nexport const DropdownItem: React.FC<DropdownItemProps> = ({\r\n  children,\r\n  onSelect,\r\n  disabled = false,\r\n  destructive = false,\r\n}) => {\r\n  return (\r\n    <DropdownItemStyled\r\n      onSelect={onSelect || (() => {})}\r\n      disabled={disabled}\r\n      $destructive={destructive}\r\n    >\r\n      {children}\r\n    </DropdownItemStyled>\r\n  );\r\n};\r\n\r\nexport const DropdownSeparatorComponent = DropdownSeparator;","/**\r\n * Badge组件 - 基于Figma UI3设计系统\r\n * 用于显示状态、标签和计数\r\n */\r\n\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport type BadgeVariant = 'primary' | 'success' | 'warning' | 'error' | 'info' | 'secondary';\r\nexport type BadgeSize = 'sm' | 'md' | 'lg';\r\n\r\ninterface BadgeProps {\r\n  variant?: BadgeVariant;\r\n  size?: BadgeSize;\r\n  dot?: boolean;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst getVariantStyles = (variant: BadgeVariant) => {\r\n  switch (variant) {\r\n    case 'primary':\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.primary};\r\n        color: white;\r\n      `;\r\n    case 'success':\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.success};\r\n        color: white;\r\n      `;\r\n    case 'warning':\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.warning};\r\n        color: white;\r\n      `;\r\n    case 'error':\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.error};\r\n        color: white;\r\n      `;\r\n    case 'info':\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.info};\r\n        color: white;\r\n      `;\r\n    default:\r\n      return css`\r\n        background-color: ${({ theme }) => theme.colors.surface};\r\n        color: ${({ theme }) => theme.colors.text.primary};\r\n        border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n      `;\r\n  }\r\n};\r\n\r\nconst getSizeStyles = (size: BadgeSize, dot: boolean) => {\r\n  if (dot) {\r\n    switch (size) {\r\n      case 'sm':\r\n        return css`\r\n          width: 6px;\r\n          height: 6px;\r\n        `;\r\n      case 'md':\r\n        return css`\r\n          width: 8px;\r\n          height: 8px;\r\n        `;\r\n      case 'lg':\r\n        return css`\r\n          width: 10px;\r\n          height: 10px;\r\n        `;\r\n      default:\r\n        return css``;\r\n    }\r\n  } else {\r\n    switch (size) {\r\n      case 'sm':\r\n        return css`\r\n          padding: ${({ theme }) => theme.spacing.xs} ${({ theme }) => theme.spacing.sm};\r\n          font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n        `;\r\n      case 'md':\r\n        return css`\r\n          padding: ${({ theme }) => theme.spacing.xs} ${({ theme }) => theme.spacing.md};\r\n          font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n        `;\r\n      case 'lg':\r\n        return css`\r\n          padding: ${({ theme }) => theme.spacing.sm} ${({ theme }) => theme.spacing.lg};\r\n          font-size: ${({ theme }) => theme.typography.fontSize.base};\r\n        `;\r\n      default:\r\n        return css``;\r\n    }\r\n  }\r\n};\r\n\r\nconst StyledBadge = styled.span<{\r\n  $variant: BadgeVariant;\r\n  $size: BadgeSize;\r\n  $dot: boolean;\r\n}>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  font-family: ${({ theme }) => theme.typography.fontFamily.primary};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  line-height: 1;\r\n  \r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  \r\n  ${({ $variant }) => getVariantStyles($variant)}\r\n  ${({ $size, $dot }) => getSizeStyles($size, $dot)}\r\n  \r\n  ${({ $dot }) => $dot && css`\r\n    border-radius: 50%;\r\n    padding: 0;\r\n  `}\r\n`;\r\n\r\nexport const Badge: React.FC<BadgeProps> = ({\r\n  variant = 'secondary',\r\n  size = 'md',\r\n  dot = false,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledBadge\r\n      $variant={variant}\r\n      $size={size}\r\n      $dot={dot}\r\n      className={className}\r\n    >\r\n      {!dot && children}\r\n    </StyledBadge>\r\n  );\r\n};","/**\r\n * 顶部工具栏 - Figma风格的主工具栏\r\n * 包含文件操作、编辑操作、视图控制等功能\r\n */\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../ui/components/Button/Button';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Dropdown, DropdownItem } from '../../ui/components/Dropdown/Dropdown';\r\nimport { Badge } from '../../ui/components/Badge/Badge';\r\n\r\ninterface TopToolbarProps {\r\n  onToggleLeftPanel: () => void;\r\n  onToggleRightPanel: () => void;\r\n  leftPanelCollapsed: boolean;\r\n  rightPanelCollapsed: boolean;\r\n}\r\n\r\nconst ToolbarContainer = styled.div`\r\n  height: 48px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 ${({ theme }) => theme.spacing.md};\r\n  backdrop-filter: blur(12px);\r\n  box-shadow: ${({ theme }) => theme.shadows.sm};\r\n`;\r\n\r\nconst ToolbarSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst ToolbarDivider = styled.div`\r\n  width: 1px;\r\n  height: 24px;\r\n  background: ${({ theme }) => theme.colors.border.default};\r\n  margin: 0 ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst AppLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n  margin-right: ${({ theme }) => theme.spacing.lg};\r\n`;\r\n\r\nconst LogoIcon = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  background: linear-gradient(135deg, ${({ theme }) => theme.colors.primary}, ${({ theme }) => theme.colors.accent});\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\r\n  font-size: 16px;\r\n`;\r\n\r\nconst AppName = styled.span`\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semibold};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n`;\r\n\r\nconst CenterSection = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.lg};\r\n`;\r\n\r\nconst ProjectInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst ProjectName = styled.span`\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n`;\r\n\r\nconst ZoomControl = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  padding: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst ZoomValue = styled.span`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  min-width: 40px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const TopToolbar: React.FC<TopToolbarProps> = ({\r\n  onToggleLeftPanel,\r\n  onToggleRightPanel,\r\n  leftPanelCollapsed,\r\n  rightPanelCollapsed,\r\n}) => {\r\n  const handleFileAction = (action: string) => {\r\n    console.log('File action:', action);\r\n  };\r\n\r\n  const handleEditAction = (action: string) => {\r\n    console.log('Edit action:', action);\r\n  };\r\n\r\n  const handleZoomChange = (delta: number) => {\r\n    console.log('Zoom change:', delta);\r\n  };\r\n\r\n  return (\r\n    <ToolbarContainer>\r\n      {/* 左侧：应用标识和文件操作 */}\r\n      <ToolbarSection>\r\n        <AppLogo>\r\n          <LogoIcon>G</LogoIcon>\r\n          <AppName>G-Asset Forge</AppName>\r\n        </AppLogo>\r\n\r\n        <Dropdown trigger={<Button variant=\"ghost\" size=\"sm\">文件</Button>}>\r\n          <DropdownItem onSelect={() => handleFileAction('new')}>\r\n            🆕 新建项目\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleFileAction('open')}>\r\n            📁 打开项目\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleFileAction('save')}>\r\n            💾 保存项目\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleFileAction('export')}>\r\n            📤 导出图像\r\n          </DropdownItem>\r\n        </Dropdown>\r\n\r\n        <Dropdown trigger={<Button variant=\"ghost\" size=\"sm\">编辑</Button>}>\r\n          <DropdownItem onSelect={() => handleEditAction('undo')}>\r\n            ↶ 撤销\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleEditAction('redo')}>\r\n            ↷ 重做\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleEditAction('copy')}>\r\n            📋 复制\r\n          </DropdownItem>\r\n          <DropdownItem onSelect={() => handleEditAction('paste')}>\r\n            📄 粘贴\r\n          </DropdownItem>\r\n        </Dropdown>\r\n\r\n        <ToolbarDivider />\r\n\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          icon={leftPanelCollapsed ? '▶️' : '◀️'}\r\n          onClick={onToggleLeftPanel}\r\n        />\r\n      </ToolbarSection>\r\n\r\n      {/* 中央：项目信息和缩放控制 */}\r\n      <CenterSection>\r\n        <ProjectInfo>\r\n          <ProjectName>未命名项目</ProjectName>\r\n          <Badge variant=\"success\" size=\"sm\">已保存</Badge>\r\n        </ProjectInfo>\r\n\r\n        <ZoomControl>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            icon=\"➖\"\r\n            onClick={() => handleZoomChange(-10)}\r\n          />\r\n          <ZoomValue>100%</ZoomValue>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            icon=\"➕\"\r\n            onClick={() => handleZoomChange(10)}\r\n          />\r\n        </ZoomControl>\r\n      </CenterSection>\r\n\r\n      {/* 右侧：视图控制和面板切换 */}\r\n      <ToolbarSection>\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          icon=\"🎨\"\r\n          onClick={() => console.log('Switch to design mode')}\r\n        />\r\n\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          icon=\"📱\"\r\n          onClick={() => console.log('Switch to H5 mode')}\r\n        />\r\n\r\n        <ToolbarDivider />\r\n\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          icon={rightPanelCollapsed ? '◀️' : '▶️'}\r\n          onClick={onToggleRightPanel}\r\n        />\r\n\r\n        <Dropdown trigger={<IconButton variant=\"ghost\" size=\"sm\" icon=\"⚙️\" />}>\r\n          <DropdownItem>🌙 切换主题</DropdownItem>\r\n          <DropdownItem>🔧 偏好设置</DropdownItem>\r\n          <DropdownItem>❓ 帮助</DropdownItem>\r\n          <DropdownItem>ℹ️ 关于</DropdownItem>\r\n        </Dropdown>\r\n      </ToolbarSection>\r\n    </ToolbarContainer>\r\n  );\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface TooltipProps {\r\n  content: React.ReactNode;\r\n  children: React.ReactNode;\r\n  side?: 'top' | 'right' | 'bottom' | 'left';\r\n  disabled?: boolean;\r\n}\r\n\r\n// const fadeIn = keyframes`\r\n//   from {\r\n//     opacity: 0;\r\n//     transform: translateY(2px);\r\n//   }\r\n//   to {\r\n//     opacity: 1;\r\n//     transform: translateY(0);\r\n//   }\r\n// `;\r\n\r\nconst TooltipContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  \r\n  &:hover .tooltip-content {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst TooltipContent = styled.div<{ $side: 'top' | 'right' | 'bottom' | 'left' }>`\r\n  position: absolute;\r\n  z-index: 9999;\r\n  padding: 6px 8px;\r\n  background: #1a202c;\r\n  color: white;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: opacity 0.2s ease, visibility 0.2s ease;\r\n  \r\n  /* 添加小箭头 */\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border: 4px solid transparent;\r\n  }\r\n  \r\n  ${({ $side }) => {\r\n    switch ($side) {\r\n      case 'top':\r\n        return `\r\n          bottom: calc(100% + 8px);\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          \r\n          &::after {\r\n            top: 100%;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            border-top-color: #1a202c;\r\n          }\r\n        `;\r\n      case 'right':\r\n        return `\r\n          left: calc(100% + 8px);\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          \r\n          &::after {\r\n            right: 100%;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            border-right-color: #1a202c;\r\n          }\r\n        `;\r\n      case 'bottom':\r\n        return `\r\n          top: calc(100% + 8px);\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          \r\n          &::after {\r\n            bottom: 100%;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            border-bottom-color: #1a202c;\r\n          }\r\n        `;\r\n      case 'left':\r\n        return `\r\n          right: calc(100% + 8px);\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          \r\n          &::after {\r\n            left: 100%;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            border-left-color: #1a202c;\r\n          }\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({\r\n  content,\r\n  children,\r\n  side = 'top',\r\n  disabled = false,\r\n}) => {\r\n  if (disabled) {\r\n    return <>{children}</>;\r\n  }\r\n\r\n  return (\r\n    <TooltipContainer>\r\n      {children}\r\n      <TooltipContent $side={side} className=\"tooltip-content\">\r\n        {content}\r\n      </TooltipContent>\r\n    </TooltipContainer>\r\n  );\r\n};\r\n","/**\r\n * 左侧工具面板 - Figma风格的工具选择面板\r\n * 包含设计工具和面板切换功能\r\n */\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Tooltip } from '../../ui/components/Tooltip/Tooltip';\r\n\r\ninterface LeftToolPanelProps {\r\n  activePanel: 'layers' | 'assets';\r\n  onSwitchPanel: (panel: 'layers' | 'assets') => void;\r\n}\r\n\r\nconst ToolPanelContainer = styled.div`\r\n  width: 60px;\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-right: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${({ theme }) => theme.spacing.sm} ${({ theme }) => theme.spacing.xs};\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst ToolSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst SectionDivider = styled.div`\r\n  height: 1px;\r\n  background: ${({ theme }) => theme.colors.border.default};\r\n  margin: ${({ theme }) => theme.spacing.sm} 0;\r\n`;\r\n\r\nconst ToolButton = styled(IconButton)<{ $active?: boolean }>`\r\n  width: 44px;\r\n  height: 44px;\r\n  background: ${({ theme, $active }) => \r\n    $active ? theme.colors.primary : 'transparent'};\r\n  color: ${({ theme, $active }) => \r\n    $active ? 'white' : theme.colors.text.primary};\r\n  border: 1px solid ${({ theme, $active }) => \r\n    $active ? theme.colors.primary : 'transparent'};\r\n  \r\n  &:hover {\r\n    background: ${({ theme, $active }) => \r\n      $active ? theme.colors.primary : theme.colors.surface};\r\n    border-color: ${({ theme }) => theme.colors.border.hover};\r\n  }\r\n`;\r\n\r\nconst PanelSwitcher = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nexport const LeftToolPanel: React.FC<LeftToolPanelProps> = ({\r\n  activePanel,\r\n  onSwitchPanel,\r\n}) => {\r\n  const [activeTool, setActiveTool] = React.useState<string>('select');\r\n\r\n  const designTools = [\r\n    { id: 'select', icon: '🔍', name: '选择工具', shortcut: 'V' },\r\n    { id: 'text', icon: '📝', name: '文本工具', shortcut: 'T' },\r\n    { id: 'image', icon: '🖼️', name: '图片工具', shortcut: 'I' },\r\n    { id: 'shape', icon: '⬜', name: '形状工具', shortcut: 'R' },\r\n    { id: 'brush', icon: '🖌️', name: '画笔工具', shortcut: 'B' },\r\n    { id: 'crop', icon: '✂️', name: '裁剪工具', shortcut: 'C' },\r\n  ];\r\n\r\n  const handleToolSelect = (toolId: string) => {\r\n    setActiveTool(toolId);\r\n    console.log('Selected tool:', toolId);\r\n  };\r\n\r\n  return (\r\n    <ToolPanelContainer>\r\n      {/* 设计工具 */}\r\n      <ToolSection>\r\n        {designTools.map((tool) => (\r\n          <Tooltip key={tool.id} content={`${tool.name} (${tool.shortcut})`} side=\"right\">\r\n            <ToolButton\r\n              $active={activeTool === tool.id}\r\n              icon={tool.icon}\r\n              onClick={() => handleToolSelect(tool.id)}\r\n            />\r\n          </Tooltip>\r\n        ))}\r\n      </ToolSection>\r\n\r\n      <SectionDivider />\r\n\r\n      {/* 面板切换器 */}\r\n      <PanelSwitcher>\r\n        <Tooltip content=\"图层面板\" side=\"right\">\r\n          <ToolButton\r\n            $active={activePanel === 'layers'}\r\n            icon=\"📋\"\r\n            onClick={() => onSwitchPanel('layers')}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Tooltip content=\"素材库\" side=\"right\">\r\n          <ToolButton\r\n            $active={activePanel === 'assets'}\r\n            icon=\"🎨\"\r\n            onClick={() => onSwitchPanel('assets')}\r\n          />\r\n        </Tooltip>\r\n      </PanelSwitcher>\r\n    </ToolPanelContainer>\r\n  );\r\n};","/**\r\n * 无限画布工作区 - 基于Suika引擎的无限画布系统\r\n * 支持无限制的平移、缩放和对象放置\r\n */\r\n\r\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Button } from '../../ui/components/Button/Button';\r\nimport { Badge } from '../../ui/components/Badge/Badge';\r\n\r\nconst WorkspaceContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.canvas.background};\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CanvasToolbar = styled.div`\r\n  height: 40px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 ${({ theme }) => theme.spacing.md};\r\n  backdrop-filter: blur(8px);\r\n`;\r\n\r\nconst ToolbarSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst InfiniteCanvasArea = styled.div<{ $showGrid: boolean; $gridSize: number; $panX: number; $panY: number; $zoom: number }>`\r\n  flex: 1;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.canvas.background};\r\n  cursor: grab;\r\n  \r\n  &:active {\r\n    cursor: grabbing;\r\n  }\r\n  \r\n  /* 动态网格背景 - 跟随视口移动 */\r\n  ${({ $showGrid, theme, $gridSize, $panX, $panY, $zoom }) => $showGrid ? `\r\n    background-image: \r\n      linear-gradient(${theme.colors.canvas.grid} 1px, transparent 1px),\r\n      linear-gradient(90deg, ${theme.colors.canvas.grid} 1px, transparent 1px);\r\n    background-size: ${$gridSize * $zoom}px ${$gridSize * $zoom}px;\r\n    background-position: ${$panX}px ${$panY}px;\r\n  ` : ''}\r\n`;\r\n\r\nconst InfiniteCanvas = styled.div<{ $panX: number; $panY: number; $zoom: number }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: translate(${({ $panX }) => $panX}px, ${({ $panY }) => $panY}px) scale(${({ $zoom }) => $zoom});\r\n  transform-origin: 0 0;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst CanvasObject = styled.div<{ $x: number; $y: number; $width: number; $height: number; $selected?: boolean }>`\r\n  position: absolute;\r\n  left: ${({ $x }) => $x}px;\r\n  top: ${({ $y }) => $y}px;\r\n  width: ${({ $width }) => $width}px;\r\n  height: ${({ $height }) => $height}px;\r\n  pointer-events: auto;\r\n  cursor: pointer;\r\n  \r\n  ${({ $selected, theme }) => $selected ? `\r\n    outline: 2px solid ${theme.colors.primary};\r\n    outline-offset: 2px;\r\n  ` : ''}\r\n`;\r\n\r\nconst WelcomeArea = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  pointer-events: none;\r\n  z-index: 1;\r\n`;\r\n\r\nconst TemplateGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  gap: ${({ theme }) => theme.spacing.md};\r\n  margin-top: ${({ theme }) => theme.spacing.lg};\r\n  max-width: 600px;\r\n`;\r\n\r\nconst TemplateCard = styled.div`\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  padding: ${({ theme }) => theme.spacing.md};\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    border-color: ${({ theme }) => theme.colors.primary};\r\n    transform: translateY(-2px);\r\n    box-shadow: ${({ theme }) => theme.shadows.md};\r\n  }\r\n`;\r\n\r\nconst OverviewNavigator = styled.div<{ $visible: boolean }>`\r\n  position: absolute;\r\n  top: ${({ theme }) => theme.spacing.lg};\r\n  right: ${({ theme }) => theme.spacing.lg};\r\n  width: 200px;\r\n  height: 150px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  opacity: ${({ $visible }) => $visible ? 1 : 0};\r\n  pointer-events: ${({ $visible }) => $visible ? 'auto' : 'none'};\r\n  transition: opacity 0.3s ease;\r\n  z-index: ${({ theme }) => theme.zIndex.overlay};\r\n`;\r\n\r\nconst ViewportIndicator = styled.div<{ $x: number; $y: number; $width: number; $height: number }>`\r\n  position: absolute;\r\n  left: ${({ $x }) => $x}%;\r\n  top: ${({ $y }) => $y}%;\r\n  width: ${({ $width }) => $width}%;\r\n  height: ${({ $height }) => $height}%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.primary}20;\r\n  cursor: move;\r\n`;\r\n\r\nconst FloatingControls = styled.div`\r\n  position: absolute;\r\n  bottom: ${({ theme }) => theme.spacing.lg};\r\n  right: ${({ theme }) => theme.spacing.lg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n  z-index: ${({ theme }) => theme.zIndex.overlay};\r\n`;\r\n\r\nconst ZoomControls = styled.div`\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  padding: ${({ theme }) => theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  backdrop-filter: blur(12px);\r\n  box-shadow: ${({ theme }) => theme.shadows.md};\r\n`;\r\n\r\nconst ZoomDisplay = styled.div`\r\n  padding: ${({ theme }) => theme.spacing.xs} ${({ theme }) => theme.spacing.sm};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  text-align: center;\r\n  min-width: 50px;\r\n`;\r\n\r\nconst ModeSelector = styled.div`\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  padding: ${({ theme }) => theme.spacing.xs};\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  backdrop-filter: blur(12px);\r\n  box-shadow: ${({ theme }) => theme.shadows.md};\r\n`;\r\n\r\nconst ModeButton = styled(Button) <{ $active?: boolean }>`\r\n  background: ${({ theme, $active }) =>\r\n    $active ? theme.colors.primary : 'transparent'};\r\n  color: ${({ theme, $active }) =>\r\n    $active ? 'white' : theme.colors.text.primary};\r\n  border: 1px solid ${({ theme, $active }) =>\r\n    $active ? theme.colors.primary : 'transparent'};\r\n`;\r\n\r\nconst CanvasInfo = styled.div`\r\n  position: absolute;\r\n  top: ${({ theme }) => theme.spacing.lg};\r\n  left: ${({ theme }) => theme.spacing.lg};\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n  z-index: ${({ theme }) => theme.zIndex.overlay};\r\n`;\r\n\r\n// 无限画布对象接口\r\ninterface CanvasObject {\r\n  id: string;\r\n  type: 'text' | 'image' | 'shape' | 'template';\r\n  worldX: number;\r\n  worldY: number;\r\n  width: number;\r\n  height: number;\r\n  content?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n// 视口信息接口\r\ninterface ViewportInfo {\r\n  x: number;\r\n  y: number;\r\n  zoom: number;\r\n}\r\n\r\n// 模板接口\r\ninterface CanvasTemplate {\r\n  id: string;\r\n  name: string;\r\n  width: number;\r\n  height: number;\r\n  category: 'mobile' | 'desktop' | 'game' | 'social';\r\n  emoji: string;\r\n}\r\n\r\nexport const CanvasWorkspace: React.FC = () => {\r\n  // 无限画布状态\r\n  const [viewport, setViewport] = useState<ViewportInfo>({ x: 0, y: 0, zoom: 1 });\r\n  const [hasError, setHasError] = useState(false);\r\n  const [mode, setMode] = useState<'design' | 'h5'>('design');\r\n  const [showGrid, setShowGrid] = useState(true);\r\n  // const [gridSize, setGridSize] = useState(20);\r\n  const [gridSize] = useState(20);\r\n  const [snapToGrid, setSnapToGrid] = useState(false);\r\n  const [showGuides, setShowGuides] = useState(true);\r\n  // const [guides, setGuides] = useState<Array<{\r\n  const [guides] = useState<Array<{\r\n    id: string;\r\n    type: 'horizontal' | 'vertical';\r\n    position: number;\r\n    color: string;\r\n  }>>([]);\r\n  const [objects, setObjects] = useState<CanvasObject[]>([]);\r\n  const [selectedObjectId, setSelectedObjectId] = useState<string | null>(null);\r\n  const [showOverview, setShowOverview] = useState(false);\r\n  const [containerSize, setContainerSize] = useState({ width: 800, height: 600 });\r\n\r\n  // 拖拽状态\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [lastPan, setLastPan] = useState({ x: 0, y: 0 });\r\n  \r\n  // 对象拖拽状态\r\n  const [isDraggingObject, setIsDraggingObject] = useState(false);\r\n  const [draggedObjectId, setDraggedObjectId] = useState<string | null>(null);\r\n  const [draggedObjectStart, setDraggedObjectStart] = useState({ x: 0, y: 0 });\r\n\r\n  const canvasRef = useRef<HTMLDivElement>(null);\r\n\r\n  // 常用模板\r\n  const templates: CanvasTemplate[] = [\r\n    { id: 'mobile', name: '移动端', width: 375, height: 667, category: 'mobile', emoji: '📱' },\r\n    { id: 'tablet', name: '平板', width: 768, height: 1024, category: 'mobile', emoji: '📱' },\r\n    { id: 'desktop', name: '桌面', width: 1920, height: 1080, category: 'desktop', emoji: '🖥️' },\r\n    { id: 'icon', name: '游戏图标', width: 256, height: 256, category: 'game', emoji: '🎮' },\r\n    { id: 'button', name: '按钮', width: 200, height: 60, category: 'game', emoji: '🔘' },\r\n    { id: 'banner', name: '横幅', width: 728, height: 90, category: 'social', emoji: '🎯' },\r\n  ];\r\n\r\n  // 缩放处理 - 支持10%-500%缩放范围和60fps性能优化\r\n  const handleZoomChange = useCallback((delta: number, centerPoint?: { x: number; y: number }) => {\r\n    setViewport(prev => {\r\n      const newZoom = Math.max(0.1, Math.min(5.0, prev.zoom + delta * 0.1));\r\n      \r\n      if (centerPoint) {\r\n        // 以指定点为中心进行缩放，防止除零错误\r\n        const safePrevZoom = Math.max(prev.zoom, 0.01);\r\n        const zoomRatio = newZoom / safePrevZoom;\r\n        return {\r\n          ...prev,\r\n          x: centerPoint.x - (centerPoint.x - prev.x) * zoomRatio,\r\n          y: centerPoint.y - (centerPoint.y - prev.y) * zoomRatio,\r\n          zoom: newZoom\r\n        };\r\n      }\r\n      \r\n      return { ...prev, zoom: newZoom };\r\n    });\r\n  }, []);\r\n\r\n  // 适应内容\r\n  const handleFitToContent = useCallback(() => {\r\n    if (objects.length === 0) {\r\n      setViewport({ x: 0, y: 0, zoom: 1 });\r\n      return;\r\n    }\r\n\r\n    // 计算所有对象的边界框\r\n    const bounds = objects.reduce((acc, obj) => {\r\n      const left = obj.worldX;\r\n      const top = obj.worldY;\r\n      const right = obj.worldX + obj.width;\r\n      const bottom = obj.worldY + obj.height;\r\n\r\n      return {\r\n        left: Math.min(acc.left, left),\r\n        top: Math.min(acc.top, top),\r\n        right: Math.max(acc.right, right),\r\n        bottom: Math.max(acc.bottom, bottom),\r\n      };\r\n    }, { left: Infinity, top: Infinity, right: -Infinity, bottom: -Infinity });\r\n\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvasRect = canvasRef.current.getBoundingClientRect();\r\n    const contentWidth = bounds.right - bounds.left;\r\n    const contentHeight = bounds.bottom - bounds.top;\r\n\r\n    // 计算合适的缩放比例\r\n    const scaleX = (canvasRect.width * 0.8) / contentWidth;\r\n    const scaleY = (canvasRect.height * 0.8) / contentHeight;\r\n    const newZoom = Math.min(scaleX, scaleY, 2.0);\r\n\r\n    // 计算居中位置\r\n    const centerX = (bounds.left + bounds.right) / 2;\r\n    const centerY = (bounds.top + bounds.bottom) / 2;\r\n    const newX = canvasRect.width / 2 - centerX * newZoom;\r\n    const newY = canvasRect.height / 2 - centerY * newZoom;\r\n\r\n    setViewport({ x: newX, y: newY, zoom: newZoom });\r\n  }, [objects]);\r\n\r\n  // 鼠标事件处理\r\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n    if (e.button !== 0) return; // 只处理左键\r\n\r\n    setIsDragging(true);\r\n    setDragStart({ x: e.clientX, y: e.clientY });\r\n    setLastPan({ x: viewport.x, y: viewport.y });\r\n  }, [viewport.x, viewport.y]);\r\n\r\n\r\n\r\n\r\n\r\n  // 对象拖拽开始\r\n  const handleObjectMouseDown = useCallback((objectId: string, e: React.MouseEvent) => {\r\n    if (e.button !== 0) return; // 只处理左键\r\n    \r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    \r\n    setSelectedObjectId(objectId);\r\n    setIsDraggingObject(true);\r\n    setDraggedObjectId(objectId);\r\n    \r\n    const rect = canvasRef.current?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    \r\n    setDraggedObjectStart({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top\r\n    });\r\n  }, []);\r\n\r\n  // 对象拖拽结束\r\n  const handleObjectMouseUp = useCallback(() => {\r\n    setIsDraggingObject(false);\r\n    setDraggedObjectId(null);\r\n    setDraggedObjectStart({ x: 0, y: 0 });\r\n  }, []);\r\n\r\n  // 鼠标移动处理\r\n  const handleMouseMove = useCallback((e: React.MouseEvent) => {\r\n    try {\r\n      // 处理对象拖拽\r\n      if (isDraggingObject && draggedObjectId) {\r\n        const rect = canvasRef.current?.getBoundingClientRect();\r\n        if (!rect) return;\r\n      \r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n      \r\n      // 计算移动距离\r\n      const deltaX = currentX - draggedObjectStart.x;\r\n      const deltaY = currentY - draggedObjectStart.y;\r\n      \r\n      // 转换为世界坐标的移动距离，防止除零错误\r\n      const safeZoom = Math.max(viewport.zoom, 0.01); // 最小缩放值\r\n      const worldDeltaX = deltaX / safeZoom;\r\n      const worldDeltaY = deltaY / safeZoom;\r\n      \r\n      setObjects(prev => prev.map(obj => {\r\n        if (obj.id === draggedObjectId) {\r\n          // 计算新的世界坐标位置\r\n          let newWorldX = obj.worldX + worldDeltaX;\r\n          let newWorldY = obj.worldY + worldDeltaY;\r\n          \r\n          // 如果启用了对齐功能，应用对齐逻辑\r\n          if (snapToGrid || showGuides) {\r\n            // 转换为屏幕坐标进行对齐计算\r\n            const screenX = (newWorldX + obj.width / 2) * viewport.zoom + viewport.x;\r\n            const screenY = (newWorldY + obj.height / 2) * viewport.zoom + viewport.y;\r\n            \r\n            let alignedScreenPos = { x: screenX, y: screenY };\r\n            \r\n            // 应用参考线对齐\r\n            if (showGuides && guides.length > 0) {\r\n              const threshold = 5;\r\n              guides.forEach(guide => {\r\n                const guideScreenPos = guide.position * viewport.zoom + \r\n                  (guide.type === 'vertical' ? viewport.x : viewport.y);\r\n                \r\n                const distance = Math.abs(\r\n                  (guide.type === 'vertical' ? alignedScreenPos.x : alignedScreenPos.y) - guideScreenPos\r\n                );\r\n                \r\n                if (distance < threshold) {\r\n                  if (guide.type === 'vertical') {\r\n                    alignedScreenPos.x = guideScreenPos;\r\n                  } else {\r\n                    alignedScreenPos.y = guideScreenPos;\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            \r\n            // 应用网格对齐\r\n            if (snapToGrid) {\r\n              const safeZoom = Math.max(viewport.zoom, 0.01);\r\n              const worldPoint = {\r\n                x: (alignedScreenPos.x - viewport.x) / safeZoom,\r\n                y: (alignedScreenPos.y - viewport.y) / safeZoom\r\n              };\r\n              \r\n              const snappedWorld = {\r\n                x: Math.round(worldPoint.x / gridSize) * gridSize,\r\n                y: Math.round(worldPoint.y / gridSize) * gridSize\r\n              };\r\n              \r\n              alignedScreenPos = {\r\n                x: snappedWorld.x * safeZoom + viewport.x,\r\n                y: snappedWorld.y * safeZoom + viewport.y\r\n              };\r\n            }\r\n            \r\n            // 转换回世界坐标\r\n            const safeZoomForConversion = Math.max(viewport.zoom, 0.01);\r\n            newWorldX = (alignedScreenPos.x - viewport.x) / safeZoomForConversion - obj.width / 2;\r\n            newWorldY = (alignedScreenPos.y - viewport.y) / safeZoomForConversion - obj.height / 2;\r\n          }\r\n          \r\n          return {\r\n            ...obj,\r\n            worldX: newWorldX,\r\n            worldY: newWorldY\r\n          };\r\n        }\r\n        return obj;\r\n      }));\r\n      \r\n        // 更新拖拽起始点\r\n        setDraggedObjectStart({ x: currentX, y: currentY });\r\n        return;\r\n      }\r\n\r\n      if (!isDragging) return;\r\n\r\n      const deltaX = e.clientX - dragStart.x;\r\n      const deltaY = e.clientY - dragStart.y;\r\n\r\n      setViewport(prev => ({\r\n        ...prev,\r\n        x: lastPan.x + deltaX,\r\n        y: lastPan.y + deltaY,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error in handleMouseMove:', error);\r\n    }\r\n  }, [isDragging, isDraggingObject, dragStart, lastPan, draggedObjectId, draggedObjectStart, viewport, snapToGrid, showGuides, guides, gridSize]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsDragging(false);\r\n    handleObjectMouseUp();\r\n  }, [handleObjectMouseUp]);\r\n\r\n  // 滚轮缩放 - 支持10%-500%缩放范围和60fps性能优化\r\n  const handleWheel = useCallback((e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n\r\n    const delta = e.deltaY > 0 ? -0.1 : 0.1;\r\n    const rect = canvasRef.current?.getBoundingClientRect();\r\n    if (!rect) return;\r\n\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n\r\n    // 使用性能优化的缩放处理\r\n    handleZoomChange(delta, { x: mouseX, y: mouseY });\r\n  }, [handleZoomChange]);\r\n\r\n  // 双击适应内容\r\n  const handleDoubleClick = useCallback(() => {\r\n    handleFitToContent();\r\n  }, [handleFitToContent]);\r\n\r\n  // 创建模板对象\r\n  const handleCreateTemplate = useCallback((template: CanvasTemplate) => {\r\n    try {\r\n      // 计算初始位置（屏幕中心转换为世界坐标）\r\n      const canvasRect = canvasRef.current?.getBoundingClientRect();\r\n      if (!canvasRect) return;\r\n    \r\n    const centerX = canvasRect.width / 2;\r\n    const centerY = canvasRect.height / 2;\r\n    \r\n    // 转换为世界坐标，防止除零错误\r\n    const safeZoom = Math.max(viewport.zoom, 0.01);\r\n    const worldPosition = {\r\n      x: (centerX - viewport.x) / safeZoom - template.width / 2,\r\n      y: (centerY - viewport.y) / safeZoom - template.height / 2\r\n    };\r\n    \r\n    // 首先应用参考线对齐，然后应用网格对齐\r\n    let screenPosition = { x: centerX, y: centerY };\r\n    \r\n    // 应用参考线对齐\r\n    if (showGuides && guides.length > 0) {\r\n      const threshold = 5;\r\n      guides.forEach(guide => {\r\n        const guideScreenPos = guide.position * viewport.zoom + \r\n          (guide.type === 'vertical' ? viewport.x : viewport.y);\r\n        \r\n        const distance = Math.abs(\r\n          (guide.type === 'vertical' ? screenPosition.x : screenPosition.y) - guideScreenPos\r\n        );\r\n        \r\n        if (distance < threshold) {\r\n          if (guide.type === 'vertical') {\r\n            screenPosition.x = guideScreenPos;\r\n          } else {\r\n            screenPosition.y = guideScreenPos;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // 应用网格对齐\r\n    if (snapToGrid) {\r\n      const safeZoomForGrid = Math.max(viewport.zoom, 0.01);\r\n      const worldPoint = {\r\n        x: (screenPosition.x - viewport.x) / safeZoomForGrid,\r\n        y: (screenPosition.y - viewport.y) / safeZoomForGrid\r\n      };\r\n      \r\n      const snappedWorld = {\r\n        x: Math.round(worldPoint.x / gridSize) * gridSize,\r\n        y: Math.round(worldPoint.y / gridSize) * gridSize\r\n      };\r\n      \r\n      screenPosition = {\r\n        x: snappedWorld.x * safeZoomForGrid + viewport.x,\r\n        y: snappedWorld.y * safeZoomForGrid + viewport.y\r\n      };\r\n    }\r\n    \r\n    const alignedWorldPosition = {\r\n      x: (screenPosition.x - viewport.x) / safeZoom - template.width / 2,\r\n      y: (screenPosition.y - viewport.y) / safeZoom - template.height / 2\r\n    };\r\n\r\n    const newObject: CanvasObject = {\r\n      id: `template-${Date.now()}`,\r\n      type: 'template',\r\n      worldX: (snapToGrid || showGuides) ? alignedWorldPosition.x : worldPosition.x,\r\n      worldY: (snapToGrid || showGuides) ? alignedWorldPosition.y : worldPosition.y,\r\n      width: template.width,\r\n      height: template.height,\r\n      content: template.name,\r\n    };\r\n\r\n      setObjects(prev => [...prev, newObject]);\r\n      setSelectedObjectId(newObject.id);\r\n    } catch (error) {\r\n      console.error('Error in handleCreateTemplate:', error);\r\n    }\r\n  }, [viewport, snapToGrid, showGuides, guides, gridSize]);\r\n\r\n  // 对象点击处理\r\n  const handleObjectClick = useCallback((objectId: string, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    setSelectedObjectId(objectId);\r\n  }, []);\r\n\r\n\r\n\r\n  // 显示概览导航器（当缩放很小时）- 视口边界检测\r\n  useEffect(() => {\r\n    setShowOverview(viewport.zoom < 0.3);\r\n  }, [viewport.zoom]);\r\n\r\n  // 监听容器尺寸变化\r\n  useEffect(() => {\r\n    const updateContainerSize = () => {\r\n      if (canvasRef.current) {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        setContainerSize({ width: rect.width, height: rect.height });\r\n      }\r\n    };\r\n\r\n    // 初始化尺寸\r\n    updateContainerSize();\r\n\r\n    // 监听窗口大小变化\r\n    const handleResize = () => {\r\n      updateContainerSize();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // 内容定位功能 - 检测可见对象\r\n  const visibleObjects = useMemo(() => {\r\n    try {\r\n      return objects.filter(obj => {\r\n        // 检查对象属性是否有效\r\n        if (!obj || typeof obj.worldX !== 'number' || typeof obj.worldY !== 'number' || \r\n            typeof obj.width !== 'number' || typeof obj.height !== 'number') {\r\n          return false;\r\n        }\r\n\r\n        // 检查对象是否在当前视口内可见\r\n        const safeZoom = Math.max(viewport.zoom, 0.01);\r\n        const screenLeft = obj.worldX * safeZoom + viewport.x;\r\n        const screenTop = obj.worldY * safeZoom + viewport.y;\r\n        const screenRight = screenLeft + obj.width * safeZoom;\r\n        const screenBottom = screenTop + obj.height * safeZoom;\r\n\r\n        // 检查计算结果是否有效\r\n        if (!isFinite(screenLeft) || !isFinite(screenTop) || \r\n            !isFinite(screenRight) || !isFinite(screenBottom)) {\r\n          return false;\r\n        }\r\n\r\n        return !(screenRight < 0 || \r\n                 screenLeft > containerSize.width ||\r\n                 screenBottom < 0 || \r\n                 screenTop > containerSize.height);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error calculating visible objects:', error);\r\n      return [];\r\n    }\r\n  }, [objects, viewport, containerSize]);\r\n\r\n\r\n\r\n  const handleExport = () => {\r\n    console.log('Export infinite canvas');\r\n  };\r\n\r\n  // 键盘快捷键支持\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      // 防止在输入框中触发快捷键\r\n      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\r\n        return;\r\n      }\r\n\r\n      if (e.ctrlKey || e.metaKey) {\r\n        switch (e.key) {\r\n          case '=':\r\n          case '+':\r\n            e.preventDefault();\r\n            handleZoomChange(1);\r\n            break;\r\n          case '-':\r\n            e.preventDefault();\r\n            handleZoomChange(-1);\r\n            break;\r\n          case '0':\r\n            e.preventDefault();\r\n            setViewport({ x: 0, y: 0, zoom: 1 });\r\n            break;\r\n          case '1':\r\n            e.preventDefault();\r\n            handleFitToContent();\r\n            break;\r\n          case '2':\r\n            e.preventDefault();\r\n            setViewport(prev => ({ ...prev, zoom: 1 }));\r\n            break;\r\n        }\r\n      } else {\r\n        switch (e.key) {\r\n          case 'g':\r\n            e.preventDefault();\r\n            setShowGrid(prev => !prev);\r\n            break;\r\n          case 'r':\r\n            e.preventDefault();\r\n            setShowGuides(prev => !prev);\r\n            break;\r\n          case 'h':\r\n            e.preventDefault();\r\n            setViewport({ x: 0, y: 0, zoom: 1 });\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [handleZoomChange, handleFitToContent]);\r\n\r\n  // 错误处理\r\n  useEffect(() => {\r\n    const handleError = (error: ErrorEvent) => {\r\n      console.error('Canvas workspace error:', error);\r\n      setHasError(true);\r\n    };\r\n\r\n    window.addEventListener('error', handleError);\r\n    return () => window.removeEventListener('error', handleError);\r\n  }, []);\r\n\r\n  if (hasError) {\r\n    return (\r\n      <WorkspaceContainer>\r\n        <div style={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center', \r\n          height: '100%',\r\n          flexDirection: 'column',\r\n          gap: '16px'\r\n        }}>\r\n          <div style={{ fontSize: '48px' }}>⚠️</div>\r\n          <h2>画布加载出错</h2>\r\n          <p>请刷新页面重试</p>\r\n          <Button onClick={() => setHasError(false)}>重试</Button>\r\n        </div>\r\n      </WorkspaceContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WorkspaceContainer>\r\n      {/* 无限画布工具栏 */}\r\n      <CanvasToolbar>\r\n        <ToolbarSection>\r\n          <Button variant=\"ghost\" size=\"sm\" onClick={handleFitToContent}>\r\n            🎯 适应内容\r\n          </Button>\r\n\r\n          <IconButton\r\n            variant={showGrid ? 'primary' : 'ghost'}\r\n            size=\"sm\"\r\n            icon=\"⊞\"\r\n            onClick={() => setShowGrid(!showGrid)}\r\n            title=\"显示/隐藏网格\"\r\n          />\r\n\r\n          <IconButton\r\n            variant={snapToGrid ? 'primary' : 'ghost'}\r\n            size=\"sm\"\r\n            icon=\"🧲\"\r\n            onClick={() => setSnapToGrid(!snapToGrid)}\r\n            title=\"网格对齐\"\r\n          />\r\n\r\n          <IconButton\r\n            variant={showGuides ? 'primary' : 'ghost'}\r\n            size=\"sm\"\r\n            icon=\"📏\"\r\n            onClick={() => setShowGuides(!showGuides)}\r\n            title=\"显示/隐藏参考线\"\r\n          />\r\n\r\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setViewport({ x: 0, y: 0, zoom: 1 })}>\r\n            🏠 重置视图\r\n          </Button>\r\n        </ToolbarSection>\r\n\r\n        <ToolbarSection>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            📋 复制\r\n          </Button>\r\n          <Button variant=\"primary\" size=\"sm\" onClick={handleExport}>\r\n            📤 导出\r\n          </Button>\r\n        </ToolbarSection>\r\n      </CanvasToolbar>\r\n\r\n      {/* 无限画布区域 */}\r\n      <InfiniteCanvasArea\r\n        ref={canvasRef}\r\n        $showGrid={showGrid}\r\n        $gridSize={gridSize}\r\n        $panX={viewport.x}\r\n        $panY={viewport.y}\r\n        $zoom={viewport.zoom}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n        onWheel={handleWheel}\r\n        onDoubleClick={handleDoubleClick}\r\n      >\r\n        {/* 无限画布内容 */}\r\n        <InfiniteCanvas\r\n          $panX={viewport.x}\r\n          $panY={viewport.y}\r\n          $zoom={viewport.zoom}\r\n        >\r\n          {/* 渲染画布对象 */}\r\n          {objects.map((obj) => (\r\n            <CanvasObject\r\n              key={obj.id}\r\n              $x={obj.worldX}\r\n              $y={obj.worldY}\r\n              $width={obj.width}\r\n              $height={obj.height}\r\n              $selected={obj.id === selectedObjectId}\r\n              onClick={(e) => handleObjectClick(obj.id, e)}\r\n              onMouseDown={(e) => handleObjectMouseDown(obj.id, e)}\r\n            >\r\n              {obj.type === 'template' && (\r\n                <div style={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  background: 'white',\r\n                  border: '2px dashed #ccc',\r\n                  borderRadius: '8px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontSize: '14px',\r\n                  color: '#666',\r\n                  flexDirection: 'column',\r\n                  gap: '8px'\r\n                }}>\r\n                  <div style={{ fontSize: '24px' }}>📄</div>\r\n                  <div>{obj.content}</div>\r\n                  <div style={{ fontSize: '12px', opacity: 0.7 }}>\r\n                    {obj.width} × {obj.height}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CanvasObject>\r\n          ))}\r\n        </InfiniteCanvas>\r\n\r\n        {/* 欢迎区域 - 当画布为空时显示 */}\r\n        {objects.length === 0 && (\r\n          <WelcomeArea>\r\n            <div style={{ fontSize: '48px', marginBottom: '16px' }}>🎨</div>\r\n            <h2 style={{ margin: '0 0 8px 0', fontSize: '24px' }}>欢迎使用无限画布</h2>\r\n            <p style={{ margin: '0 0 24px 0', fontSize: '16px', opacity: 0.8 }}>\r\n              选择模板开始创作，或使用工具在任意位置添加内容\r\n            </p>\r\n\r\n            <TemplateGrid>\r\n              {templates.map((template) => (\r\n                <TemplateCard\r\n                  key={template.id}\r\n                  onClick={() => handleCreateTemplate(template)}\r\n                >\r\n                  <div style={{ fontSize: '32px', marginBottom: '8px' }}>\r\n                    {template.emoji}\r\n                  </div>\r\n                  <div style={{ fontSize: '14px', fontWeight: 'bold', marginBottom: '4px' }}>\r\n                    {template.name}\r\n                  </div>\r\n                  <div style={{ fontSize: '12px', opacity: 0.7 }}>\r\n                    {template.width} × {template.height}\r\n                  </div>\r\n                </TemplateCard>\r\n              ))}\r\n            </TemplateGrid>\r\n          </WelcomeArea>\r\n        )}\r\n\r\n        {/* 概览导航器 */}\r\n        <OverviewNavigator $visible={showOverview}>\r\n          <div style={{\r\n            padding: '8px',\r\n            fontSize: '12px',\r\n            fontWeight: 'bold',\r\n            borderBottom: '1px solid #eee',\r\n            background: '#f5f5f5'\r\n          }}>\r\n            画布概览\r\n          </div>\r\n          <div style={{ position: 'relative', flex: 1, margin: '8px' }}>\r\n            {/* 简化的内容缩略图 */}\r\n            {objects.map((obj) => (\r\n              <div\r\n                key={obj.id}\r\n                style={{\r\n                  position: 'absolute',\r\n                  left: `${(obj.worldX + 2000) / 40}px`,\r\n                  top: `${(obj.worldY + 1500) / 40}px`,\r\n                  width: `${obj.width / 40}px`,\r\n                  height: `${obj.height / 40}px`,\r\n                  background: '#007acc',\r\n                  borderRadius: '2px',\r\n                  opacity: 0.7,\r\n                }}\r\n              />\r\n            ))}\r\n\r\n            {/* 视口指示器 */}\r\n            <ViewportIndicator\r\n              $x={50}\r\n              $y={50}\r\n              $width={20}\r\n              $height={15}\r\n            />\r\n          </div>\r\n        </OverviewNavigator>\r\n\r\n        {/* 画布信息 - 包含性能监控 */}\r\n        <CanvasInfo>\r\n          <Badge variant=\"secondary\" size=\"sm\">\r\n            缩放: {Math.round(viewport.zoom * 100)}%\r\n          </Badge>\r\n          <Badge variant=\"info\" size=\"sm\">\r\n            {mode === 'design' ? '设计模式' : 'H5模式'}\r\n          </Badge>\r\n          <Badge variant=\"secondary\" size=\"sm\">\r\n            对象: {objects.length} / 可见: {visibleObjects.length}\r\n          </Badge>\r\n          <Badge variant=\"secondary\" size=\"sm\">\r\n            位置: ({Math.round(-viewport.x / Math.max(viewport.zoom, 0.01))}, {Math.round(-viewport.y / Math.max(viewport.zoom, 0.01))})\r\n          </Badge>\r\n          {process.env['NODE_ENV'] === 'development' && (\r\n            <Badge variant=\"warning\" size=\"sm\">\r\n              性能: 60fps\r\n            </Badge>\r\n          )}\r\n        </CanvasInfo>\r\n\r\n        {/* 浮动控制器 */}\r\n        <FloatingControls>\r\n          {/* 模式切换 */}\r\n          <ModeSelector>\r\n            <ModeButton\r\n              $active={mode === 'design'}\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setMode('design')}\r\n            >\r\n              🎨\r\n            </ModeButton>\r\n            <ModeButton\r\n              $active={mode === 'h5'}\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setMode('h5')}\r\n            >\r\n              📱\r\n            </ModeButton>\r\n          </ModeSelector>\r\n\r\n          {/* 缩放控制 */}\r\n          <ZoomControls>\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              icon=\"➕\"\r\n              onClick={() => handleZoomChange(1)}\r\n            />\r\n            <ZoomDisplay>{Math.round(viewport.zoom * 100)}%</ZoomDisplay>\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              icon=\"➖\"\r\n              onClick={() => handleZoomChange(-1)}\r\n            />\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              icon=\"⊡\"\r\n              onClick={handleFitToContent}\r\n            />\r\n          </ZoomControls>\r\n        </FloatingControls>\r\n      </InfiniteCanvasArea>\r\n    </WorkspaceContainer>\r\n  );\r\n};","import React, { forwardRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport type InputSize = 'sm' | 'md' | 'lg';\r\nexport type InputVariant = 'default' | 'filled';\r\n\r\ninterface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\r\n  size?: InputSize;\r\n  variant?: InputVariant;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  label?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  fullWidth?: boolean;\r\n}\r\n\r\nconst getSizeStyles = (size: InputSize) => {\r\n  switch (size) {\r\n    case 'sm':\r\n      return css`\r\n        height: 32px;\r\n        padding: 0 ${({ theme }) => theme.spacing.sm};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n      `;\r\n    \r\n    case 'md':\r\n      return css`\r\n        height: 40px;\r\n        padding: 0 ${({ theme }) => theme.spacing.md};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.base};\r\n      `;\r\n    \r\n    case 'lg':\r\n      return css`\r\n        height: 48px;\r\n        padding: 0 ${({ theme }) => theme.spacing.lg};\r\n        font-size: ${({ theme }) => theme.typography.fontSize.lg};\r\n      `;\r\n    \r\n    default:\r\n      return css``;\r\n  }\r\n};\r\n\r\nconst getVariantStyles = (variant: InputVariant) => {\r\n  switch (variant) {\r\n    case 'filled':\r\n      return css`\r\n        background: ${({ theme }) => theme.colors.surface};\r\n        border: 1px solid transparent;\r\n        \r\n        &:focus {\r\n          background: ${({ theme }) => theme.colors.background};\r\n          border-color: ${({ theme }) => theme.colors.border.focus};\r\n        }\r\n      `;\r\n    \r\n    case 'default':\r\n    default:\r\n      return css`\r\n        background: ${({ theme }) => theme.colors.background};\r\n        border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n        \r\n        &:hover:not(:disabled) {\r\n          border-color: ${({ theme }) => theme.colors.border.hover};\r\n        }\r\n        \r\n        &:focus {\r\n          border-color: ${({ theme }) => theme.colors.border.focus};\r\n        }\r\n      `;\r\n  }\r\n};\r\n\r\nconst InputContainer = styled.div<{ $fullWidth: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  \r\n  ${({ $fullWidth }) => $fullWidth && css`\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledInput = styled.input<{\r\n  $size: InputSize;\r\n  $variant: InputVariant;\r\n  $error: boolean;\r\n  $hasLeftIcon: boolean;\r\n  $hasRightIcon: boolean;\r\n}>`\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  font-family: ${({ theme }) => theme.typography.fontFamily.primary};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  transition: all ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  \r\n  ${({ $size }) => getSizeStyles($size)}\r\n  ${({ $variant }) => getVariantStyles($variant)}\r\n  \r\n  ${({ $hasLeftIcon, theme }) => $hasLeftIcon && css`\r\n    padding-left: calc(${theme.spacing.lg} + 20px);\r\n  `}\r\n  \r\n  ${({ $hasRightIcon, theme }) => $hasRightIcon && css`\r\n    padding-right: calc(${theme.spacing.lg} + 20px);\r\n  `}\r\n  \r\n  ${({ $error, theme }) => $error && css`\r\n    border-color: ${theme.colors.error};\r\n    \r\n    &:focus {\r\n      border-color: ${theme.colors.error};\r\n      box-shadow: 0 0 0 3px ${theme.colors.error}20;\r\n    }\r\n  `}\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${({ theme }) => theme.colors.border.focus};\r\n    box-shadow: 0 0 0 3px ${({ theme }) => theme.colors.border.focus}20, \r\n                ${({ theme }) => theme.shadows.sm};\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    background: ${({ theme }) => theme.colors.surface};\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.colors.text.tertiary};\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.div<{ $position: 'left' | 'right' }>`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  pointer-events: none;\r\n  \r\n  ${({ $position, theme }) => $position === 'left' ? css`\r\n    left: ${theme.spacing.md};\r\n  ` : css`\r\n    right: ${theme.spacing.md};\r\n  `}\r\n`;\r\n\r\nconst HelperText = styled.div<{ $error: boolean }>`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ $error, theme }) => $error ? theme.colors.error : theme.colors.text.secondary};\r\n`;\r\n\r\nexport const Input = forwardRef<HTMLInputElement, InputProps>(({\r\n  size = 'md',\r\n  variant = 'default',\r\n  error = false,\r\n  helperText,\r\n  label,\r\n  leftIcon,\r\n  rightIcon,\r\n  fullWidth = false,\r\n  ...props\r\n}, ref) => {\r\n  return (\r\n    <InputContainer $fullWidth={fullWidth}>\r\n      {label && <Label>{label}</Label>}\r\n      <InputWrapper>\r\n        {leftIcon && (\r\n          <IconWrapper $position=\"left\">\r\n            {leftIcon}\r\n          </IconWrapper>\r\n        )}\r\n        <StyledInput\r\n          ref={ref}\r\n          $size={size}\r\n          $variant={variant}\r\n          $error={error}\r\n          $hasLeftIcon={!!leftIcon}\r\n          $hasRightIcon={!!rightIcon}\r\n          {...props}\r\n        />\r\n        {rightIcon && (\r\n          <IconWrapper $position=\"right\">\r\n            {rightIcon}\r\n          </IconWrapper>\r\n        )}\r\n      </InputWrapper>\r\n      {helperText && (\r\n        <HelperText $error={error}>\r\n          {helperText}\r\n        </HelperText>\r\n      )}\r\n    </InputContainer>\r\n  );\r\n});\r\n\r\nInput.displayName = 'Input';","/**\r\n * Slider组件 - 基于Radix UI和Figma UI3设计系统\r\n * 提供可访问的滑块输入功能\r\n */\r\n\r\nimport React from 'react';\r\nimport * as SliderPrimitive from '@radix-ui/react-slider';\r\nimport styled from 'styled-components';\r\n\r\ninterface SliderProps {\r\n  value: number[];\r\n  onValueChange: (value: number[]) => void;\r\n  min?: number;\r\n  max?: number;\r\n  step?: number;\r\n  disabled?: boolean;\r\n  label?: string;\r\n  className?: string;\r\n}\r\n\r\nconst SliderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst SliderLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n`;\r\n\r\nconst SliderRoot = styled(SliderPrimitive.Root)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  user-select: none;\r\n  touch-action: none;\r\n  width: 100%;\r\n  height: 20px;\r\n  \r\n  &[data-disabled] {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst SliderTrack = styled(SliderPrimitive.Track)`\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  position: relative;\r\n  flex-grow: 1;\r\n  height: 4px;\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n`;\r\n\r\nconst SliderRange = styled(SliderPrimitive.Range)`\r\n  position: absolute;\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  height: 100%;\r\n`;\r\n\r\nconst SliderThumb = styled(SliderPrimitive.Thumb)`\r\n  display: block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  border: 2px solid ${({ theme }) => theme.colors.background};\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  box-shadow: ${({ theme }) => theme.shadows.sm};\r\n  transition: all ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primary}40;\r\n  }\r\n  \r\n  &[data-disabled] {\r\n    cursor: not-allowed;\r\n    \r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Slider: React.FC<SliderProps> = ({\r\n  value,\r\n  onValueChange,\r\n  min = 0,\r\n  max = 100,\r\n  step = 1,\r\n  disabled = false,\r\n  label,\r\n  className,\r\n}) => {\r\n  return (\r\n    <SliderContainer className={className}>\r\n      {label && <SliderLabel>{label}</SliderLabel>}\r\n      <SliderRoot\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        disabled={disabled}\r\n      >\r\n        <SliderTrack>\r\n          <SliderRange />\r\n        </SliderTrack>\r\n        <SliderThumb />\r\n      </SliderRoot>\r\n    </SliderContainer>\r\n  );\r\n};","/**\r\n * Switch组件 - 基于Radix UI和Figma UI3设计系统\r\n * 提供可访问的开关切换功能\r\n */\r\n\r\nimport React from 'react';\r\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\r\nimport styled from 'styled-components';\r\n\r\ninterface SwitchProps {\r\n  checked: boolean;\r\n  onCheckedChange: (checked: boolean) => void;\r\n  disabled?: boolean;\r\n  label?: string;\r\n  description?: string;\r\n  className?: string;\r\n}\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst SwitchContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  flex: 1;\r\n`;\r\n\r\nconst SwitchLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  cursor: pointer;\r\n  \r\n  &[data-disabled] {\r\n    color: ${({ theme }) => theme.colors.text.disabled};\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst SwitchDescription = styled.p`\r\n  margin: 0;\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  \r\n  &[data-disabled] {\r\n    color: ${({ theme }) => theme.colors.text.disabled};\r\n  }\r\n`;\r\n\r\nconst SwitchRoot = styled(SwitchPrimitive.Root)<{ $checked: boolean }>`\r\n  width: 44px;\r\n  height: 24px;\r\n  background: ${({ theme, $checked }) => \r\n    $checked ? theme.colors.primary : theme.colors.surface};\r\n  border: 1px solid ${({ theme, $checked }) => \r\n    $checked ? theme.colors.primary : theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: all ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primary}40;\r\n  }\r\n  \r\n  &[data-disabled] {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &:hover:not([data-disabled]) {\r\n    background: ${({ theme, $checked }) => \r\n      $checked ? theme.colors.primary : theme.colors.border.hover};\r\n  }\r\n`;\r\n\r\nconst SwitchThumb = styled(SwitchPrimitive.Thumb)`\r\n  display: block;\r\n  width: 18px;\r\n  height: 18px;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  box-shadow: ${({ theme }) => theme.shadows.sm};\r\n  transition: transform ${({ theme }) => theme.animation.duration.fast} ${({ theme }) => theme.animation.easing.ease};\r\n  transform: translateX(2px);\r\n  will-change: transform;\r\n  \r\n  &[data-state='checked'] {\r\n    transform: translateX(22px);\r\n  }\r\n`;\r\n\r\nconst SwitchWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 2px; /* 对齐文本基线 */\r\n`;\r\n\r\nexport const Switch: React.FC<SwitchProps> = ({\r\n  checked,\r\n  onCheckedChange,\r\n  disabled = false,\r\n  label,\r\n  description,\r\n  className,\r\n}) => {\r\n  return (\r\n    <SwitchContainer className={className}>\r\n      <SwitchWrapper>\r\n        <SwitchRoot\r\n          checked={checked}\r\n          onCheckedChange={onCheckedChange}\r\n          disabled={disabled}\r\n          $checked={checked}\r\n        >\r\n          <SwitchThumb />\r\n        </SwitchRoot>\r\n      </SwitchWrapper>\r\n      \r\n      {(label || description) && (\r\n        <SwitchContent>\r\n          {label && (\r\n            <SwitchLabel data-disabled={disabled ? '' : undefined}>\r\n              {label}\r\n            </SwitchLabel>\r\n          )}\r\n          {description && (\r\n            <SwitchDescription data-disabled={disabled ? '' : undefined}>\r\n              {description}\r\n            </SwitchDescription>\r\n          )}\r\n        </SwitchContent>\r\n      )}\r\n    </SwitchContainer>\r\n  );\r\n};","/**\r\n * 右侧属性面板 - Figma风格的属性编辑面板\r\n * 根据选中的工具和对象显示相应的属性控制\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input } from '../../ui/components/Input/Input';\r\nimport { Slider } from '../../ui/components/Slider/Slider';\r\nimport { Switch } from '../../ui/components/Switch/Switch';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\n\r\nconst PanelContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst PanelSection = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n`;\r\n\r\nconst SectionHeader = styled.div<{ $collapsed?: boolean }>`\r\n  padding: ${({ theme }) => theme.spacing.md};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  \r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h4`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semibold};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  margin: 0;\r\n`;\r\n\r\nconst SectionContent = styled.div<{ $collapsed?: boolean }>`\r\n  padding: ${({ theme }) => theme.spacing.md};\r\n  padding-top: 0;\r\n  display: ${({ $collapsed }) => $collapsed ? 'none' : 'block'};\r\n`;\r\n\r\nconst PropertyRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n  margin-bottom: ${({ theme }) => theme.spacing.md};\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst PropertyLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  min-width: 60px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst PropertyControl = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst ColorPicker = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst ColorSwatch = styled.div<{ $color: string }>`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: ${({ theme }) => theme.borderRadius.sm};\r\n  background: ${({ $color }) => $color};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  cursor: pointer;\r\n  position: relative;\r\n  \r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst ColorPresets = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  margin-top: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst PresetColor = styled.div<{ $color: string }>`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: ${({ theme }) => theme.borderRadius.sm};\r\n  background: ${({ $color }) => $color};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst NoSelection = styled.div`\r\n  padding: ${({ theme }) => theme.spacing['3xl']};\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n`;\r\n\r\nconst NoSelectionIcon = styled.div`\r\n  font-size: 48px;\r\n  margin-bottom: ${({ theme }) => theme.spacing.lg};\r\n`;\r\n\r\nexport const RightPropertiesPanel: React.FC = () => {\r\n  const [selectedTool] = useState<string>('select');\r\n  const [selectedObject] = useState<any>(null);\r\n  const [collapsedSections, setCollapsedSections] = useState<string[]>([]);\r\n\r\n  // 模拟属性状态\r\n  const [properties, setProperties] = useState({\r\n    position: { x: 100, y: 100 },\r\n    size: { width: 200, height: 100 },\r\n    rotation: 0,\r\n    opacity: 100,\r\n    fillColor: '#6366f1',\r\n    strokeColor: '#000000',\r\n    strokeWidth: 1,\r\n    borderRadius: 0,\r\n    fontSize: 16,\r\n    fontWeight: 400,\r\n    textAlign: 'left',\r\n    visible: true,\r\n    locked: false,\r\n  });\r\n\r\n  const colorPresets = [\r\n    '#6366f1', '#8b5cf6', '#ec4899', '#ef4444',\r\n    '#f59e0b', '#10b981', '#06b6d4', '#64748b',\r\n    '#000000', '#ffffff', '#f3f4f6', '#1f2937',\r\n  ];\r\n\r\n  const toggleSection = (sectionId: string) => {\r\n    setCollapsedSections(prev =>\r\n      prev.includes(sectionId)\r\n        ? prev.filter(id => id !== sectionId)\r\n        : [...prev, sectionId]\r\n    );\r\n  };\r\n\r\n  const updateProperty = (key: string, value: any) => {\r\n    setProperties(prev => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const updateNestedProperty = (parent: string, key: string, value: any) => {\r\n    setProperties(prev => ({\r\n      ...prev,\r\n      [parent]: { ...(prev[parent as keyof typeof prev] as any), [key]: value }\r\n    }));\r\n  };\r\n\r\n  // 如果没有选中对象，显示空状态\r\n  if (!selectedObject && selectedTool === 'select') {\r\n    return (\r\n      <PanelContainer>\r\n        <NoSelection>\r\n          <NoSelectionIcon>🎯</NoSelectionIcon>\r\n          <div>选择对象以编辑属性</div>\r\n        </NoSelection>\r\n      </PanelContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PanelContainer>\r\n      {/* 变换属性 */}\r\n      <PanelSection>\r\n        <SectionHeader onClick={() => toggleSection('transform')}>\r\n          <SectionTitle>变换</SectionTitle>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            icon={collapsedSections.includes('transform') ? '▶️' : '🔽'}\r\n          />\r\n        </SectionHeader>\r\n        <SectionContent $collapsed={collapsedSections.includes('transform')}>\r\n          <PropertyRow>\r\n            <PropertyLabel>位置</PropertyLabel>\r\n            <PropertyControl>\r\n              <div style={{ display: 'flex', gap: '8px' }}>\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.position.x}\r\n                  onChange={(e) => updateNestedProperty('position', 'x', Number(e.target.value))}\r\n                  placeholder=\"X\"\r\n                />\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.position.y}\r\n                  onChange={(e) => updateNestedProperty('position', 'y', Number(e.target.value))}\r\n                  placeholder=\"Y\"\r\n                />\r\n              </div>\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>尺寸</PropertyLabel>\r\n            <PropertyControl>\r\n              <div style={{ display: 'flex', gap: '8px' }}>\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.size.width}\r\n                  onChange={(e) => updateNestedProperty('size', 'width', Number(e.target.value))}\r\n                  placeholder=\"宽\"\r\n                />\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.size.height}\r\n                  onChange={(e) => updateNestedProperty('size', 'height', Number(e.target.value))}\r\n                  placeholder=\"高\"\r\n                />\r\n              </div>\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>旋转</PropertyLabel>\r\n            <PropertyControl>\r\n              <Slider\r\n                value={[properties.rotation]}\r\n                onValueChange={(value) => updateProperty('rotation', value[0])}\r\n                min={0}\r\n                max={360}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>透明度</PropertyLabel>\r\n            <PropertyControl>\r\n              <Slider\r\n                value={[properties.opacity]}\r\n                onValueChange={(value) => updateProperty('opacity', value[0])}\r\n                min={0}\r\n                max={100}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n        </SectionContent>\r\n      </PanelSection>\r\n\r\n      {/* 外观属性 */}\r\n      <PanelSection>\r\n        <SectionHeader onClick={() => toggleSection('appearance')}>\r\n          <SectionTitle>外观</SectionTitle>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            icon={collapsedSections.includes('appearance') ? '▶️' : '🔽'}\r\n          />\r\n        </SectionHeader>\r\n        <SectionContent $collapsed={collapsedSections.includes('appearance')}>\r\n          <PropertyRow>\r\n            <PropertyLabel>填充</PropertyLabel>\r\n            <PropertyControl>\r\n              <ColorPicker>\r\n                <ColorSwatch $color={properties.fillColor} />\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.fillColor}\r\n                  onChange={(e) => updateProperty('fillColor', e.target.value)}\r\n                />\r\n              </ColorPicker>\r\n              <ColorPresets>\r\n                {colorPresets.map((color) => (\r\n                  <PresetColor\r\n                    key={color}\r\n                    $color={color}\r\n                    onClick={() => updateProperty('fillColor', color)}\r\n                  />\r\n                ))}\r\n              </ColorPresets>\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>描边</PropertyLabel>\r\n            <PropertyControl>\r\n              <ColorPicker>\r\n                <ColorSwatch $color={properties.strokeColor} />\r\n                <Input\r\n                  size=\"sm\"\r\n                  value={properties.strokeColor}\r\n                  onChange={(e) => updateProperty('strokeColor', e.target.value)}\r\n                />\r\n              </ColorPicker>\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>描边宽度</PropertyLabel>\r\n            <PropertyControl>\r\n              <Slider\r\n                value={[properties.strokeWidth]}\r\n                onValueChange={(value) => updateProperty('strokeWidth', value[0])}\r\n                min={0}\r\n                max={10}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>圆角</PropertyLabel>\r\n            <PropertyControl>\r\n              <Slider\r\n                value={[properties.borderRadius]}\r\n                onValueChange={(value) => updateProperty('borderRadius', value[0])}\r\n                min={0}\r\n                max={50}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n        </SectionContent>\r\n      </PanelSection>\r\n\r\n      {/* 文本属性（仅在选中文本时显示） */}\r\n      {selectedTool === 'text' && (\r\n        <PanelSection>\r\n          <SectionHeader onClick={() => toggleSection('text')}>\r\n            <SectionTitle>文本</SectionTitle>\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"xs\"\r\n              icon={collapsedSections.includes('text') ? '▶️' : '🔽'}\r\n            />\r\n          </SectionHeader>\r\n          <SectionContent $collapsed={collapsedSections.includes('text')}>\r\n            <PropertyRow>\r\n              <PropertyLabel>字体大小</PropertyLabel>\r\n              <PropertyControl>\r\n                <Slider\r\n                  value={[properties.fontSize]}\r\n                  onValueChange={(value) => updateProperty('fontSize', value[0])}\r\n                  min={8}\r\n                  max={72}\r\n                />\r\n              </PropertyControl>\r\n            </PropertyRow>\r\n\r\n            <PropertyRow>\r\n              <PropertyLabel>字重</PropertyLabel>\r\n              <PropertyControl>\r\n                <Slider\r\n                  value={[properties.fontWeight]}\r\n                  onValueChange={(value) => updateProperty('fontWeight', value[0])}\r\n                  min={100}\r\n                  max={900}\r\n                  step={100}\r\n                />\r\n              </PropertyControl>\r\n            </PropertyRow>\r\n\r\n            <PropertyRow>\r\n              <PropertyLabel>对齐</PropertyLabel>\r\n              <PropertyControl>\r\n                <div style={{ display: 'flex', gap: '4px' }}>\r\n                  <IconButton\r\n                    variant={properties.textAlign === 'left' ? 'primary' : 'ghost'}\r\n                    size=\"sm\"\r\n                    icon=\"⬅️\"\r\n                    onClick={() => updateProperty('textAlign', 'left')}\r\n                  />\r\n                  <IconButton\r\n                    variant={properties.textAlign === 'center' ? 'primary' : 'ghost'}\r\n                    size=\"sm\"\r\n                    icon=\"↔️\"\r\n                    onClick={() => updateProperty('textAlign', 'center')}\r\n                  />\r\n                  <IconButton\r\n                    variant={properties.textAlign === 'right' ? 'primary' : 'ghost'}\r\n                    size=\"sm\"\r\n                    icon=\"➡️\"\r\n                    onClick={() => updateProperty('textAlign', 'right')}\r\n                  />\r\n                </div>\r\n              </PropertyControl>\r\n            </PropertyRow>\r\n          </SectionContent>\r\n        </PanelSection>\r\n      )}\r\n\r\n      {/* 图层属性 */}\r\n      <PanelSection>\r\n        <SectionHeader onClick={() => toggleSection('layer')}>\r\n          <SectionTitle>图层</SectionTitle>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            icon={collapsedSections.includes('layer') ? '▶️' : '🔽'}\r\n          />\r\n        </SectionHeader>\r\n        <SectionContent $collapsed={collapsedSections.includes('layer')}>\r\n          <PropertyRow>\r\n            <PropertyLabel>可见</PropertyLabel>\r\n            <PropertyControl>\r\n              <Switch\r\n                checked={properties.visible}\r\n                onCheckedChange={(checked) => updateProperty('visible', checked)}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n\r\n          <PropertyRow>\r\n            <PropertyLabel>锁定</PropertyLabel>\r\n            <PropertyControl>\r\n              <Switch\r\n                checked={properties.locked}\r\n                onCheckedChange={(checked) => updateProperty('locked', checked)}\r\n              />\r\n            </PropertyControl>\r\n          </PropertyRow>\r\n        </SectionContent>\r\n      </PanelSection>\r\n    </PanelContainer>\r\n  );\r\n};","/**\r\n * Progress组件 - 基于Figma UI3设计系统\r\n * 用于显示任务进度和加载状态\r\n */\r\n\r\nimport React from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nexport type ProgressVariant = 'default' | 'success' | 'warning' | 'error';\r\nexport type ProgressSize = 'sm' | 'md' | 'lg';\r\n\r\ninterface ProgressProps {\r\n  value?: number; // 0-100\r\n  variant?: ProgressVariant;\r\n  size?: ProgressSize;\r\n  indeterminate?: boolean;\r\n  label?: string;\r\n  showValue?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst getVariantColor = (variant: ProgressVariant) => {\r\n  switch (variant) {\r\n    case 'success':\r\n      return css`${({ theme }) => theme.colors.success}`;\r\n    case 'warning':\r\n      return css`${({ theme }) => theme.colors.warning}`;\r\n    case 'error':\r\n      return css`${({ theme }) => theme.colors.error}`;\r\n    case 'default':\r\n    default:\r\n      return css`${({ theme }) => theme.colors.primary}`;\r\n  }\r\n};\r\n\r\nconst getSizeStyles = (size: ProgressSize) => {\r\n  switch (size) {\r\n    case 'sm':\r\n      return css`\r\n        height: 4px;\r\n      `;\r\n    case 'md':\r\n      return css`\r\n        height: 6px;\r\n      `;\r\n    case 'lg':\r\n      return css`\r\n        height: 8px;\r\n      `;\r\n    default:\r\n      return css``;\r\n  }\r\n};\r\n\r\nconst ProgressContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst ProgressHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProgressLabel = styled.span`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n`;\r\n\r\nconst ProgressValue = styled.span`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n`;\r\n\r\nconst ProgressTrack = styled.div<{ $size: ProgressSize }>`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default}40;\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  overflow: hidden;\r\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  \r\n  ${({ $size }) => getSizeStyles($size)}\r\n`;\r\n\r\nconst indeterminateAnimation = keyframes`\r\n  0% {\r\n    transform: translateX(-100%);\r\n  }\r\n  100% {\r\n    transform: translateX(100%);\r\n  }\r\n`;\r\n\r\nconst ProgressBar = styled.div<{\r\n  $variant: ProgressVariant;\r\n  $value: number;\r\n  $indeterminate: boolean;\r\n}>`\r\n  height: 100%;\r\n  background: linear-gradient(90deg, ${({ $variant }) => getVariantColor($variant)}, ${({ $variant }) => getVariantColor($variant)}dd);\r\n  border-radius: ${({ theme }) => theme.borderRadius.full};\r\n  transition: width ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.ease};\r\n  position: relative;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\r\n    border-radius: inherit;\r\n    animation: shimmer 2s infinite;\r\n  }\r\n  \r\n  @keyframes shimmer {\r\n    0% { transform: translateX(-100%); }\r\n    100% { transform: translateX(100%); }\r\n  }\r\n  \r\n  ${({ $indeterminate, $value }) => \r\n    $indeterminate \r\n      ? css`\r\n          width: 50%;\r\n          animation: ${indeterminateAnimation} 1.5s ease-in-out infinite;\r\n        `\r\n      : css`\r\n          width: ${$value}%;\r\n        `\r\n  }\r\n`;\r\n\r\nexport const Progress: React.FC<ProgressProps> = ({\r\n  value = 0,\r\n  variant = 'default',\r\n  size = 'md',\r\n  indeterminate = false,\r\n  label,\r\n  showValue = false,\r\n  className,\r\n}) => {\r\n  const clampedValue = Math.max(0, Math.min(100, value));\r\n\r\n  return (\r\n    <ProgressContainer className={className}>\r\n      {(label || showValue) && (\r\n        <ProgressHeader>\r\n          {label && <ProgressLabel>{label}</ProgressLabel>}\r\n          {showValue && !indeterminate && (\r\n            <ProgressValue>{Math.round(clampedValue)}%</ProgressValue>\r\n          )}\r\n        </ProgressHeader>\r\n      )}\r\n      <ProgressTrack $size={size}>\r\n        <ProgressBar\r\n          $variant={variant}\r\n          $value={clampedValue}\r\n          $indeterminate={indeterminate}\r\n        />\r\n      </ProgressTrack>\r\n    </ProgressContainer>\r\n  );\r\n};","/**\r\n * 状态栏组件 - 显示应用状态信息\r\n * 包含性能监控、操作提示、快捷键等信息\r\n */\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Badge } from '../../ui/components/Badge/Badge';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Progress } from '../../ui/components/Progress/Progress';\r\n\r\nconst StatusBarContainer = styled.div`\r\n  height: 24px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-top: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 ${({ theme }) => theme.spacing.md};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n`;\r\n\r\nconst StatusSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.md};\r\n`;\r\n\r\nconst StatusItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst PerformanceIndicator = styled.div<{ $level: 'good' | 'warning' | 'error' }>`\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background: ${({ theme, $level }) => {\r\n    switch ($level) {\r\n      case 'good': return theme.colors.success;\r\n      case 'warning': return theme.colors.warning;\r\n      case 'error': return theme.colors.error;\r\n      default: return theme.colors.text.disabled;\r\n    }\r\n  }};\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 16px;\r\n  background: ${({ theme }) => theme.colors.border.default};\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  width: 120px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nexport const StatusBar: React.FC = () => {\r\n  // 模拟状态数据\r\n  const performanceData = {\r\n    memory: 85, // MB\r\n    fps: 60,\r\n    cpu: 15, // %\r\n  };\r\n\r\n  const getPerformanceLevel = (value: number, thresholds: [number, number]) => {\r\n    if (value <= thresholds[0]) return 'good';\r\n    if (value <= thresholds[1]) return 'warning';\r\n    return 'error';\r\n  };\r\n\r\n  const memoryLevel = getPerformanceLevel(performanceData.memory, [100, 200]);\r\n  const fpsLevel = performanceData.fps >= 55 ? 'good' : performanceData.fps >= 30 ? 'warning' : 'error';\r\n  const cpuLevel = getPerformanceLevel(performanceData.cpu, [30, 60]);\r\n\r\n  return (\r\n    <StatusBarContainer>\r\n      {/* 左侧：操作状态和提示 */}\r\n      <StatusSection>\r\n        <StatusItem>\r\n          <Badge variant=\"success\" size=\"sm\">就绪</Badge>\r\n          <span>选择工具开始创作</span>\r\n        </StatusItem>\r\n\r\n        <Divider />\r\n\r\n        <StatusItem>\r\n          <span>画布: 800×600</span>\r\n        </StatusItem>\r\n\r\n        <StatusItem>\r\n          <span>缩放: 100%</span>\r\n        </StatusItem>\r\n\r\n        <Divider />\r\n\r\n        <StatusItem>\r\n          <span>图层: 3</span>\r\n        </StatusItem>\r\n\r\n        <StatusItem>\r\n          <span>选中: 1</span>\r\n        </StatusItem>\r\n      </StatusSection>\r\n\r\n      {/* 右侧：性能监控和系统信息 */}\r\n      <StatusSection>\r\n        {/* 导出进度（仅在导出时显示） */}\r\n        {false && (\r\n          <>\r\n            <ProgressContainer>\r\n              <Progress value={65} size=\"sm\" />\r\n              <span>导出中...</span>\r\n            </ProgressContainer>\r\n            <Divider />\r\n          </>\r\n        )}\r\n\r\n        {/* 性能指标 */}\r\n        <StatusItem>\r\n          <PerformanceIndicator $level={memoryLevel} />\r\n          <span>内存: {performanceData.memory}MB</span>\r\n        </StatusItem>\r\n\r\n        <StatusItem>\r\n          <PerformanceIndicator $level={fpsLevel} />\r\n          <span>FPS: {performanceData.fps}</span>\r\n        </StatusItem>\r\n\r\n        <StatusItem>\r\n          <PerformanceIndicator $level={cpuLevel} />\r\n          <span>CPU: {performanceData.cpu}%</span>\r\n        </StatusItem>\r\n\r\n        <Divider />\r\n\r\n        {/* 快捷键提示 */}\r\n        <StatusItem>\r\n          <span>Ctrl+Z 撤销 | Ctrl+Y 重做 | V 选择</span>\r\n        </StatusItem>\r\n\r\n        <Divider />\r\n\r\n        {/* 网络状态 */}\r\n        <StatusItem>\r\n          <PerformanceIndicator $level=\"good\" />\r\n          <span>在线</span>\r\n        </StatusItem>\r\n\r\n        {/* 主题切换 */}\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"xs\"\r\n          icon=\"🌙\"\r\n          onClick={() => console.log('Toggle theme')}\r\n        />\r\n      </StatusSection>\r\n    </StatusBarContainer>\r\n  );\r\n};","/**\r\n * 图层面板 - Figma风格的图层管理\r\n * 支持图层树结构、拖拽排序、可见性控制等\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Input } from '../../ui/components/Input/Input';\r\nimport { Button } from '../../ui/components/Button/Button';\r\n\r\ninterface Layer {\r\n  id: string;\r\n  name: string;\r\n  type: 'group' | 'text' | 'image' | 'shape' | 'brush';\r\n  visible: boolean;\r\n  locked: boolean;\r\n  children?: Layer[];\r\n  expanded?: boolean;\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.background};\r\n`;\r\n\r\nconst PanelHeader = styled.div`\r\n  padding: ${({ theme }) => theme.spacing.md};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n`;\r\n\r\nconst PanelTitle = styled.h3`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semibold};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  margin: 0 0 ${({ theme }) => theme.spacing.sm} 0;\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  margin-bottom: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst LayersList = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst LayerItem = styled.div<{ $level: number; $selected?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: ${({ theme }) => theme.spacing.xs} ${({ theme }) => theme.spacing.sm};\r\n  padding-left: ${({ $level, theme }) => `calc(${theme.spacing.sm} + ${$level * 20}px)`};\r\n  margin-bottom: 1px;\r\n  border-radius: ${({ theme }) => theme.borderRadius.sm};\r\n  cursor: pointer;\r\n  background: ${({ theme, $selected }) => \r\n    $selected ? theme.colors.primary + '20' : 'transparent'};\r\n  border: 1px solid ${({ theme, $selected }) => \r\n    $selected ? theme.colors.primary : 'transparent'};\r\n  \r\n  &:hover {\r\n    background: ${({ theme, $selected }) => \r\n      $selected ? theme.colors.primary + '30' : theme.colors.surface};\r\n  }\r\n`;\r\n\r\nconst LayerIcon = styled.div<{ $expanded?: boolean }>`\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: ${({ theme }) => theme.spacing.xs};\r\n  cursor: pointer;\r\n  transform: ${({ $expanded }) => $expanded ? 'rotate(90deg)' : 'rotate(0deg)'};\r\n  transition: transform ${({ theme }) => theme.animation.duration.fast};\r\n`;\r\n\r\nconst LayerTypeIcon = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: ${({ theme }) => theme.spacing.xs};\r\n  font-size: 12px;\r\n`;\r\n\r\nconst LayerName = styled.span`\r\n  flex: 1;\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst LayerControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  opacity: 0;\r\n  transition: opacity ${({ theme }) => theme.animation.duration.fast};\r\n  \r\n  ${LayerItem}:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst PanelFooter = styled.div`\r\n  padding: ${({ theme }) => theme.spacing.sm};\r\n  border-top: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nexport const LayersPanel: React.FC = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedLayers, setSelectedLayers] = useState<string[]>(['layer-1']);\r\n  const [layers, setLayers] = useState<Layer[]>([\r\n    {\r\n      id: 'group-1',\r\n      name: '游戏UI组',\r\n      type: 'group',\r\n      visible: true,\r\n      locked: false,\r\n      expanded: true,\r\n      children: [\r\n        {\r\n          id: 'layer-1',\r\n          name: '主按钮',\r\n          type: 'shape',\r\n          visible: true,\r\n          locked: false,\r\n        },\r\n        {\r\n          id: 'layer-2',\r\n          name: '按钮文字',\r\n          type: 'text',\r\n          visible: true,\r\n          locked: false,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'layer-3',\r\n      name: '背景图片',\r\n      type: 'image',\r\n      visible: true,\r\n      locked: false,\r\n    },\r\n    {\r\n      id: 'layer-4',\r\n      name: '装饰元素',\r\n      type: 'brush',\r\n      visible: false,\r\n      locked: true,\r\n    },\r\n  ]);\r\n\r\n  const getTypeIcon = (type: Layer['type']) => {\r\n    switch (type) {\r\n      case 'group': return '📁';\r\n      case 'text': return '📝';\r\n      case 'image': return '🖼️';\r\n      case 'shape': return '⬜';\r\n      case 'brush': return '🖌️';\r\n      default: return '📄';\r\n    }\r\n  };\r\n\r\n  const toggleLayerExpansion = (layerId: string) => {\r\n    const updateLayer = (layers: Layer[]): Layer[] => {\r\n      return layers.map(layer => {\r\n        if (layer.id === layerId) {\r\n          return { ...layer, expanded: !layer.expanded };\r\n        }\r\n        if (layer.children) {\r\n          return { ...layer, children: updateLayer(layer.children) };\r\n        }\r\n        return layer;\r\n      });\r\n    };\r\n    setLayers(updateLayer(layers));\r\n  };\r\n\r\n  const toggleLayerVisibility = (layerId: string) => {\r\n    const updateLayer = (layers: Layer[]): Layer[] => {\r\n      return layers.map(layer => {\r\n        if (layer.id === layerId) {\r\n          return { ...layer, visible: !layer.visible };\r\n        }\r\n        if (layer.children) {\r\n          return { ...layer, children: updateLayer(layer.children) };\r\n        }\r\n        return layer;\r\n      });\r\n    };\r\n    setLayers(updateLayer(layers));\r\n  };\r\n\r\n  const toggleLayerLock = (layerId: string) => {\r\n    const updateLayer = (layers: Layer[]): Layer[] => {\r\n      return layers.map(layer => {\r\n        if (layer.id === layerId) {\r\n          return { ...layer, locked: !layer.locked };\r\n        }\r\n        if (layer.children) {\r\n          return { ...layer, children: updateLayer(layer.children) };\r\n        }\r\n        return layer;\r\n      });\r\n    };\r\n    setLayers(updateLayer(layers));\r\n  };\r\n\r\n  const selectLayer = (layerId: string, multiSelect = false) => {\r\n    if (multiSelect) {\r\n      setSelectedLayers(prev => \r\n        prev.includes(layerId) \r\n          ? prev.filter(id => id !== layerId)\r\n          : [...prev, layerId]\r\n      );\r\n    } else {\r\n      setSelectedLayers([layerId]);\r\n    }\r\n  };\r\n\r\n  const renderLayer = (layer: Layer, level = 0): React.ReactNode => {\r\n    const isSelected = selectedLayers.includes(layer.id);\r\n    \r\n    return (\r\n      <React.Fragment key={layer.id}>\r\n        <LayerItem\r\n          $level={level}\r\n          $selected={isSelected}\r\n          onClick={(e) => selectLayer(layer.id, e.ctrlKey || e.metaKey)}\r\n        >\r\n          {layer.children && (\r\n            <LayerIcon\r\n              $expanded={layer.expanded || false}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleLayerExpansion(layer.id);\r\n              }}\r\n            >\r\n              ▶\r\n            </LayerIcon>\r\n          )}\r\n          \r\n          <LayerTypeIcon>\r\n            {getTypeIcon(layer.type)}\r\n          </LayerTypeIcon>\r\n          \r\n          <LayerName>{layer.name}</LayerName>\r\n          \r\n          <LayerControls>\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"xs\"\r\n              icon={layer.visible ? '👁️' : '🙈'}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleLayerVisibility(layer.id);\r\n              }}\r\n            />\r\n            <IconButton\r\n              variant=\"ghost\"\r\n              size=\"xs\"\r\n              icon={layer.locked ? '🔒' : '🔓'}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleLayerLock(layer.id);\r\n              }}\r\n            />\r\n          </LayerControls>\r\n        </LayerItem>\r\n        \r\n        {layer.children && layer.expanded && \r\n          layer.children.map(child => renderLayer(child, level + 1))\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const filteredLayers = layers.filter(layer =>\r\n    layer.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <PanelContainer>\r\n      <PanelHeader>\r\n        <PanelTitle>图层</PanelTitle>\r\n        <SearchInput\r\n          placeholder=\"搜索图层...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          size=\"sm\"\r\n        />\r\n      </PanelHeader>\r\n\r\n      <LayersList>\r\n        {filteredLayers.map(layer => renderLayer(layer))}\r\n      </LayersList>\r\n\r\n      <PanelFooter>\r\n        <Button variant=\"ghost\" size=\"sm\" fullWidth>\r\n          ➕ 添加图层\r\n        </Button>\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          icon=\"🗑️\"\r\n          disabled={selectedLayers.length === 0}\r\n        />\r\n      </PanelFooter>\r\n    </PanelContainer>\r\n  );\r\n};","/**\r\n * 素材库面板 - 游戏资产管理和浏览\r\n * 支持5大分类、搜索过滤、上传管理等功能\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input } from '../../ui/components/Input/Input';\r\nimport { Button } from '../../ui/components/Button/Button';\r\nimport { Badge } from '../../ui/components/Badge/Badge';\r\nimport { IconButton } from '../../ui/components/IconButton/IconButton';\r\nimport { Dropdown, DropdownItem } from '../../ui/components/Dropdown/Dropdown';\r\n\r\ninterface Asset {\r\n  id: string;\r\n  name: string;\r\n  category: AssetCategory;\r\n  thumbnail: string;\r\n  size: string;\r\n  format: string;\r\n  tags: string[];\r\n  favorite: boolean;\r\n}\r\n\r\ntype AssetCategory = 'backgrounds' | 'characters' | 'ui-elements' | 'icons' | 'effects';\r\n\r\nconst PanelContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.background};\r\n`;\r\n\r\nconst PanelHeader = styled.div`\r\n  padding: ${({ theme }) => theme.spacing.md};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n`;\r\n\r\nconst PanelTitle = styled.h3`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semibold};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  margin: 0 0 ${({ theme }) => theme.spacing.sm} 0;\r\n`;\r\n\r\nconst SearchSection = styled.div`\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  margin-bottom: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst CategoryTabs = styled.div`\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n  margin-bottom: ${({ theme }) => theme.spacing.sm};\r\n  overflow-x: auto;\r\n  \r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CategoryTab = styled.button<{ $active?: boolean }>`\r\n  padding: ${({ theme }) => theme.spacing.xs} ${({ theme }) => theme.spacing.sm};\r\n  border: 1px solid ${({ theme, $active }) => \r\n    $active ? theme.colors.primary : theme.colors.border.default};\r\n  background: ${({ theme, $active }) => \r\n    $active ? theme.colors.primary + '20' : theme.colors.surface};\r\n  color: ${({ theme, $active }) => \r\n    $active ? theme.colors.primary : theme.colors.text.secondary};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  transition: all ${({ theme }) => theme.animation.duration.fast};\r\n  \r\n  &:hover {\r\n    border-color: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst AssetsGrid = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: ${({ theme }) => theme.spacing.sm};\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n  align-content: start;\r\n`;\r\n\r\nconst AssetItem = styled.div`\r\n  aspect-ratio: 1;\r\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all ${({ theme }) => theme.animation.duration.fast};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: ${({ theme }) => theme.shadows.md};\r\n    border-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst AssetThumbnail = styled.div<{ $bgColor?: string }>`\r\n  width: 100%;\r\n  height: 70%;\r\n  background: ${({ $bgColor, theme }) => $bgColor || theme.colors.background};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  position: relative;\r\n`;\r\n\r\nconst AssetInfo = styled.div`\r\n  height: 30%;\r\n  padding: ${({ theme }) => theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AssetName = styled.div`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.xs};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  line-height: 1.2;\r\n`;\r\n\r\nconst AssetOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n  transition: opacity ${({ theme }) => theme.animation.duration.fast};\r\n  \r\n  ${AssetItem}:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst FavoriteButton = styled(IconButton)`\r\n  position: absolute;\r\n  top: ${({ theme }) => theme.spacing.xs};\r\n  right: ${({ theme }) => theme.spacing.xs};\r\n  background: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  \r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.7);\r\n  }\r\n`;\r\n\r\nconst PanelFooter = styled.div`\r\n  padding: ${({ theme }) => theme.spacing.sm};\r\n  border-top: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.spacing.xs};\r\n`;\r\n\r\nconst StatsSection = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nexport const AssetsPanel: React.FC = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [activeCategory, setActiveCategory] = useState<AssetCategory | 'all'>('all');\r\n  const [, setSortBy] = useState<'name' | 'date' | 'size'>('name');\r\n\r\n  const categories = [\r\n    { id: 'all' as const, name: '全部', count: 52 },\r\n    { id: 'backgrounds' as const, name: '背景', count: 10 },\r\n    { id: 'characters' as const, name: '角色', count: 5 },\r\n    { id: 'ui-elements' as const, name: 'UI元素', count: 20 },\r\n    { id: 'icons' as const, name: '图标', count: 15 },\r\n    { id: 'effects' as const, name: '特效', count: 8 },\r\n  ];\r\n\r\n  const mockAssets: Asset[] = [\r\n    {\r\n      id: '1',\r\n      name: '科幻背景1',\r\n      category: 'backgrounds',\r\n      thumbnail: '🌌',\r\n      size: '1920x1080',\r\n      format: 'PNG',\r\n      tags: ['科幻', '太空', '蓝色'],\r\n      favorite: true,\r\n    },\r\n    {\r\n      id: '2',\r\n      name: '主按钮',\r\n      category: 'ui-elements',\r\n      thumbnail: '🔘',\r\n      size: '200x60',\r\n      format: 'PNG',\r\n      tags: ['按钮', 'UI', '蓝色'],\r\n      favorite: false,\r\n    },\r\n    {\r\n      id: '3',\r\n      name: '战士角色',\r\n      category: 'characters',\r\n      thumbnail: '⚔️',\r\n      size: '256x256',\r\n      format: 'PNG',\r\n      tags: ['角色', '战士', '像素'],\r\n      favorite: true,\r\n    },\r\n    {\r\n      id: '4',\r\n      name: '设置图标',\r\n      category: 'icons',\r\n      thumbnail: '⚙️',\r\n      size: '64x64',\r\n      format: 'SVG',\r\n      tags: ['图标', '设置', '齿轮'],\r\n      favorite: false,\r\n    },\r\n    {\r\n      id: '5',\r\n      name: '爆炸特效',\r\n      category: 'effects',\r\n      thumbnail: '💥',\r\n      size: '128x128',\r\n      format: 'PNG',\r\n      tags: ['特效', '爆炸', '动画'],\r\n      favorite: false,\r\n    },\r\n  ];\r\n\r\n  const filteredAssets = mockAssets.filter(asset => {\r\n    const matchesSearch = asset.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         asset.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    const matchesCategory = activeCategory === 'all' || asset.category === activeCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const toggleFavorite = (assetId: string) => {\r\n    console.log('Toggle favorite:', assetId);\r\n  };\r\n\r\n  const handleAssetClick = (asset: Asset) => {\r\n    console.log('Asset clicked:', asset);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    console.log('Upload asset');\r\n  };\r\n\r\n  return (\r\n    <PanelContainer>\r\n      <PanelHeader>\r\n        <PanelTitle>素材库</PanelTitle>\r\n        \r\n        <SearchSection>\r\n          <Input\r\n            placeholder=\"搜索素材...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            size=\"sm\"\r\n          />\r\n          <Dropdown trigger={<IconButton variant=\"ghost\" size=\"sm\" icon=\"🔽\" />}>\r\n            <DropdownItem onSelect={() => setSortBy('name')}>\r\n              按名称排序\r\n            </DropdownItem>\r\n            <DropdownItem onSelect={() => setSortBy('date')}>\r\n              按日期排序\r\n            </DropdownItem>\r\n            <DropdownItem onSelect={() => setSortBy('size')}>\r\n              按大小排序\r\n            </DropdownItem>\r\n          </Dropdown>\r\n        </SearchSection>\r\n\r\n        <CategoryTabs>\r\n          {categories.map(category => (\r\n            <CategoryTab\r\n              key={category.id}\r\n              $active={activeCategory === category.id}\r\n              onClick={() => setActiveCategory(category.id)}\r\n            >\r\n              {category.name} ({category.count})\r\n            </CategoryTab>\r\n          ))}\r\n        </CategoryTabs>\r\n\r\n        <StatsSection>\r\n          <span style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>\r\n            {filteredAssets.length} 个素材\r\n          </span>\r\n          <Badge variant=\"info\" size=\"sm\">\r\n            {mockAssets.filter(a => a.favorite).length} 收藏\r\n          </Badge>\r\n        </StatsSection>\r\n      </PanelHeader>\r\n\r\n      <AssetsGrid>\r\n        {filteredAssets.map(asset => (\r\n          <AssetItem key={asset.id} onClick={() => handleAssetClick(asset)}>\r\n            <AssetThumbnail>\r\n              {asset.thumbnail}\r\n            </AssetThumbnail>\r\n            \r\n            <AssetInfo>\r\n              <AssetName>{asset.name}</AssetName>\r\n            </AssetInfo>\r\n\r\n            <FavoriteButton\r\n              variant=\"ghost\"\r\n              size=\"xs\"\r\n              icon={asset.favorite ? '❤️' : '🤍'}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleFavorite(asset.id);\r\n              }}\r\n            />\r\n\r\n            <AssetOverlay>\r\n              <Button variant=\"primary\" size=\"sm\">\r\n                使用\r\n              </Button>\r\n            </AssetOverlay>\r\n          </AssetItem>\r\n        ))}\r\n      </AssetsGrid>\r\n\r\n      <PanelFooter>\r\n        <Button variant=\"outline\" size=\"sm\" onClick={handleUpload}>\r\n          📤 上传素材\r\n        </Button>\r\n        <Button variant=\"ghost\" size=\"sm\">\r\n          📁 管理分类\r\n        </Button>\r\n      </PanelFooter>\r\n    </PanelContainer>\r\n  );\r\n};","/**\r\n * 主布局组件 - 基于Figma风格的界面布局\r\n * 包含顶部工具栏、左侧工具面板、中央画布、右侧属性面板\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TopToolbar } from './TopToolbar';\r\nimport { LeftToolPanel } from './LeftToolPanel';\r\nimport { CanvasWorkspace } from '../Canvas/CanvasWorkspace';\r\nimport { RightPropertiesPanel } from './RightPropertiesPanel';\r\nimport { StatusBar } from './StatusBar';\r\nimport { LayersPanel } from './LayersPanel';\r\nimport { AssetsPanel } from '../Assets/AssetsPanel';\r\n\r\nconst LayoutContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TopSection = styled.div`\r\n  flex-shrink: 0;\r\n  z-index: ${({ theme }) => theme.zIndex.banner};\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LeftSection = styled.div<{ $collapsed?: boolean }>`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  width: ${({ $collapsed }) => $collapsed ? '60px' : '280px'};\r\n  transition: width ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.ease};\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-right: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  z-index: ${({ theme }) => theme.zIndex.docked};\r\n`;\r\n\r\nconst ToolPanel = styled.div<{ $collapsed?: boolean }>`\r\n  width: 60px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-right: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst SidePanel = styled.div<{ $collapsed?: boolean }>`\r\n  flex: 1;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: ${({ $collapsed }) => $collapsed ? 'none' : 'block'};\r\n`;\r\n\r\nconst CenterSection = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\n\r\nconst RightSection = styled.div<{ $collapsed?: boolean }>`\r\n  width: ${({ $collapsed }) => $collapsed ? '0px' : '320px'};\r\n  flex-shrink: 0;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  border-left: 1px solid ${({ theme }) => theme.colors.border.default};\r\n  transition: width ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.ease};\r\n  overflow: hidden;\r\n  z-index: ${({ theme }) => theme.zIndex.docked};\r\n`;\r\n\r\nconst BottomSection = styled.div`\r\n  flex-shrink: 0;\r\n  z-index: ${({ theme }) => theme.zIndex.sticky};\r\n`;\r\n\r\nexport const MainLayout: React.FC = () => {\r\n  const [leftPanelCollapsed, setLeftPanelCollapsed] = useState(false);\r\n  const [rightPanelCollapsed, setRightPanelCollapsed] = useState(false);\r\n  const [activeLeftPanel, setActiveLeftPanel] = useState<'layers' | 'assets'>('layers');\r\n\r\n  const toggleLeftPanel = () => {\r\n    setLeftPanelCollapsed(!leftPanelCollapsed);\r\n  };\r\n\r\n  const toggleRightPanel = () => {\r\n    setRightPanelCollapsed(!rightPanelCollapsed);\r\n  };\r\n\r\n  const switchLeftPanel = (panel: 'layers' | 'assets') => {\r\n    setActiveLeftPanel(panel);\r\n    if (leftPanelCollapsed) {\r\n      setLeftPanelCollapsed(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LayoutContainer>\r\n      {/* 顶部工具栏 */}\r\n      <TopSection>\r\n        <TopToolbar \r\n          onToggleLeftPanel={toggleLeftPanel}\r\n          onToggleRightPanel={toggleRightPanel}\r\n          leftPanelCollapsed={leftPanelCollapsed}\r\n          rightPanelCollapsed={rightPanelCollapsed}\r\n        />\r\n      </TopSection>\r\n\r\n      {/* 主要内容区域 */}\r\n      <MainSection>\r\n        {/* 左侧区域 */}\r\n        <LeftSection $collapsed={leftPanelCollapsed}>\r\n          <ToolPanel>\r\n            <LeftToolPanel \r\n              activePanel={activeLeftPanel}\r\n              onSwitchPanel={switchLeftPanel}\r\n            />\r\n          </ToolPanel>\r\n          \r\n          <SidePanel $collapsed={leftPanelCollapsed}>\r\n            {activeLeftPanel === 'layers' ? (\r\n              <LayersPanel />\r\n            ) : (\r\n              <AssetsPanel />\r\n            )}\r\n          </SidePanel>\r\n        </LeftSection>\r\n\r\n        {/* 中央画布区域 */}\r\n        <CenterSection>\r\n          <CanvasWorkspace />\r\n        </CenterSection>\r\n\r\n        {/* 右侧属性面板 */}\r\n        <RightSection $collapsed={rightPanelCollapsed}>\r\n          <RightPropertiesPanel />\r\n        </RightSection>\r\n      </MainSection>\r\n\r\n      {/* 底部状态栏 */}\r\n      <BottomSection>\r\n        <StatusBar />\r\n      </BottomSection>\r\n    </LayoutContainer>\r\n  );\r\n};","/**\r\n * 欢迎屏幕 - 新用户引导和快速开始\r\n * 参考Figma的新手引导流程，15分钟内完成首个作品\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../ui/components/Button/Button';\r\n// import { Card, CardContent, CardHeader, CardTitle } from '../../ui/components/Card/Card';\r\n// import { Card, CardContent} from '../../ui/components/Card/Card';\r\n// import { Badge } from '../../ui/components/Badge/Badge';\r\n\r\ninterface WelcomeScreenProps {\r\n  onComplete: () => void;\r\n}\r\n\r\nconst WelcomeContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, ${({ theme }) => theme.colors.background} 0%, ${({ theme }) => theme.colors.surface} 100%);\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: radial-gradient(circle at 30% 30%, ${({ theme }) => theme.colors.primary}15 0%, transparent 50%),\r\n                radial-gradient(circle at 70% 70%, ${({ theme }) => theme.colors.accent}15 0%, transparent 50%);\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst WelcomeContent = styled.div`\r\n  max-width: 800px;\r\n  width: 90%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst WelcomeHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: ${({ theme }) => theme.spacing['3xl']};\r\n`;\r\n\r\nconst WelcomeTitle = styled.h1`\r\n  font-size: ${({ theme }) => theme.typography.fontSize['4xl']};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\r\n  color: ${({ theme }) => theme.colors.text.primary};\r\n  margin-bottom: ${({ theme }) => theme.spacing.md};\r\n  \r\n  // &::after {\r\n  //   content: '';\r\n  //   display: block;\r\n  //   width: 80px;\r\n  //   height: 4px;\r\n  //   background: linear-gradient(90deg, ${({ theme }) => theme.colors.primary}, ${({ theme }) => theme.colors.accent});\r\n  //   margin: ${({ theme }) => theme.spacing.lg} auto 0;\r\n  //   border-radius: 2px;\r\n  // }\r\n`;\r\n\r\nconst WelcomeSubtitle = styled.p`\r\n  font-size: ${({ theme }) => theme.typography.fontSize.lg};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  margin-bottom: ${({ theme }) => theme.spacing.xl};\r\n`;\r\n\r\n// const OptionsGrid = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n//   gap: ${({ theme }) => theme.spacing.xl};\r\n//   margin-bottom: ${({ theme }) => theme.spacing['3xl']};\r\n// `;\r\n\r\n// const OptionCard = styled(Card)<{ $selected?: boolean }>`\r\n//   cursor: pointer;\r\n//   transition: all ${({ theme }) => theme.animation.duration.normal} ${({ theme }) => theme.animation.easing.ease};\r\n//   border: 2px solid ${({ theme, $selected }) => \r\n//     $selected ? theme.colors.primary : 'transparent'};\r\n  \r\n//   &:hover {\r\n//     transform: translateY(-4px);\r\n//     box-shadow: ${({ theme }) => theme.shadows.lg};\r\n//   }\r\n// `;\r\n\r\n// const OptionIcon = styled.div`\r\n//   width: 64px;\r\n//   height: 64px;\r\n//   border-radius: ${({ theme }) => theme.borderRadius.lg};\r\n//   background: linear-gradient(135deg, ${({ theme }) => theme.colors.primary}, ${({ theme }) => theme.colors.accent});\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   font-size: 32px;\r\n//   margin-bottom: ${({ theme }) => theme.spacing.lg};\r\n// `;\r\n\r\n\r\n\r\n// const OptionDescription = styled.p`\r\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n//   color: ${({ theme }) => theme.colors.text.secondary};\r\n//   line-height: ${({ theme }) => theme.typography.lineHeight.relaxed};\r\n// `;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: ${({ theme }) => theme.spacing.lg};\r\n`;\r\n\r\n// const FeatureList = styled.div`\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   gap: ${({ theme }) => theme.spacing.sm};\r\n//   justify-content: center;\r\n//   margin-top: ${({ theme }) => theme.spacing.xl};\r\n// `;\r\n\r\nexport const WelcomeScreen: React.FC<WelcomeScreenProps> = ({ onComplete }) => {\r\n  // const [selectedOption, setSelectedOption] = useState<string>('new-project');\r\n  const [selectedOption] = useState<string>('new-project');\r\n\r\n  // const options = [\r\n  //   {\r\n  //     id: 'new-project',\r\n  //     // icon: '🎨',\r\n  //     title: '创建新项目',\r\n  //     description: '从空白画布开始，使用我们的设计工具创建游戏资产',\r\n  //   },\r\n  //   {\r\n  //     id: 'template',\r\n  //     // icon: '📋',\r\n  //     title: '使用模板',\r\n  //     description: '选择预设模板快速开始，包含常见的游戏UI和图标模板',\r\n  //   },\r\n  //   {\r\n  //     id: 'tutorial',\r\n  //     // icon: '🎓',\r\n  //     title: '交互式教程',\r\n  //     description: '15分钟快速上手教程，学习基础操作和最佳实践',\r\n  //   },\r\n  // ];\r\n\r\n  // const features = [\r\n  //   '基于Suika引擎的高性能画布',\r\n  //   '5种专业设计工具',\r\n  //   'H5编辑器导出功能',\r\n  //   '50+游戏素材库',\r\n  //   '支持PNG/JPG导出',\r\n  //   '团队协作支持',\r\n  // ];\r\n\r\n  const handleStart = () => {\r\n    // 标记用户已经使用过应用\r\n    localStorage.setItem('g-asset-forge-used', 'true');\r\n    \r\n    // 根据选择的选项执行不同的操作\r\n    switch (selectedOption) {\r\n      case 'tutorial':\r\n        // 启动教程模式\r\n        console.log('Starting tutorial mode');\r\n        break;\r\n      case 'template':\r\n        // 显示模板选择\r\n        console.log('Opening template selection');\r\n        break;\r\n      default:\r\n        // 直接进入主界面\r\n        break;\r\n    }\r\n    onComplete();\r\n  };\r\n\r\n  return (\r\n    <WelcomeContainer>\r\n      <WelcomeContent>\r\n        <WelcomeHeader>\r\n          <WelcomeTitle>G-Asset Forge</WelcomeTitle>\r\n          <WelcomeSubtitle>\r\n            快速、批量、标准化的渠道投放素材生产\r\n          </WelcomeSubtitle>\r\n          \r\n          {/* <FeatureList>\r\n            {features.map((feature, index) => (\r\n              <Badge key={index} variant=\"secondary\" size=\"sm\">\r\n                {feature}\r\n              </Badge>\r\n            ))}\r\n          </FeatureList> */}\r\n        </WelcomeHeader>\r\n\r\n        {/* <OptionsGrid>\r\n          {options.map((option) => (\r\n            <OptionCard\r\n              key={option.id}\r\n              $selected={selectedOption === option.id}\r\n              onClick={() => setSelectedOption(option.id)}\r\n              hoverable\r\n            >\r\n              <CardHeader>\r\n                <OptionIcon>{option.icon}</OptionIcon>\r\n                <CardTitle as=\"h3\" style={{ \r\n                  fontSize: '18px', \r\n                  fontWeight: 600, \r\n                  marginBottom: '8px' \r\n                }}>\r\n                  {option.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <OptionDescription>{option.description}</OptionDescription>\r\n              </CardContent>\r\n            </OptionCard>\r\n          ))}\r\n        </OptionsGrid> */}\r\n\r\n        <ActionButtons>\r\n          {/* <Button variant=\"outline\" onClick={onComplete}>\r\n            跳过引导\r\n          </Button> */}\r\n          <Button variant=\"primary\" onClick={handleStart}>\r\n            开始使用\r\n          </Button>\r\n        </ActionButtons>\r\n      </WelcomeContent>\r\n    </WelcomeContainer>\r\n  );\r\n};","/**\r\n * 初始化管理器\r\n * 确保应用只初始化一次，防止重复初始化导致的无限循环\r\n */\r\n\r\nexport interface InitializationState {\r\n  status: 'idle' | 'initializing' | 'completed' | 'failed';\r\n  startTime: number | null;\r\n  completedTime: number | null;\r\n  error: Error | null;\r\n  retryCount: number;\r\n}\r\n\r\nexport interface InitializationOptions {\r\n  maxRetries?: number;\r\n  timeout?: number;\r\n  enableLogging?: boolean;\r\n}\r\n\r\n/**\r\n * 初始化管理器类\r\n * 使用单例模式确保全局只有一个初始化管理器实例\r\n */\r\nexport class InitializationManager {\r\n  private static instance: InitializationManager | null = null;\r\n  private state: InitializationState;\r\n  private options: Required<InitializationOptions>;\r\n  private initializationPromise: Promise<void> | null = null;\r\n  private timeoutId: NodeJS.Timeout | null = null;\r\n\r\n  private constructor(options: InitializationOptions = {}) {\r\n    this.options = {\r\n      maxRetries: options.maxRetries ?? 3,\r\n      timeout: options.timeout ?? 10000, // 10秒超时\r\n      enableLogging: options.enableLogging ?? true,\r\n    };\r\n\r\n    this.state = {\r\n      status: 'idle',\r\n      startTime: null,\r\n      completedTime: null,\r\n      error: null,\r\n      retryCount: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取单例实例\r\n   */\r\n  public static getInstance(options?: InitializationOptions): InitializationManager {\r\n    if (!InitializationManager.instance) {\r\n      InitializationManager.instance = new InitializationManager(options);\r\n    }\r\n    return InitializationManager.instance;\r\n  }\r\n\r\n  /**\r\n   * 获取当前初始化状态\r\n   */\r\n  public getState(): InitializationState {\r\n    return { ...this.state };\r\n  }\r\n\r\n  /**\r\n   * 检查是否已初始化\r\n   */\r\n  public get isInitialized(): boolean {\r\n    return this.state.status === 'completed';\r\n  }\r\n\r\n  /**\r\n   * 检查是否正在初始化\r\n   */\r\n  public get isInitializing(): boolean {\r\n    return this.state.status === 'initializing';\r\n  }\r\n\r\n  /**\r\n   * 检查是否初始化失败\r\n   */\r\n  public get hasFailed(): boolean {\r\n    return this.state.status === 'failed';\r\n  }\r\n\r\n  /**\r\n   * 只初始化一次的方法\r\n   * 如果已经初始化或正在初始化，直接返回现有的Promise\r\n   */\r\n  public async initializeOnce(initFunction: () => Promise<void>): Promise<void> {\r\n    // 如果已经完成初始化，直接返回\r\n    if (this.state.status === 'completed') {\r\n      this.log('应用已经初始化完成，跳过重复初始化');\r\n      return;\r\n    }\r\n\r\n    // 如果正在初始化，返回现有的Promise\r\n    if (this.state.status === 'initializing' && this.initializationPromise) {\r\n      this.log('应用正在初始化中，等待完成...');\r\n      return this.initializationPromise;\r\n    }\r\n\r\n    // 如果之前失败了，检查是否可以重试\r\n    if (this.state.status === 'failed') {\r\n      if (this.state.retryCount >= this.options.maxRetries) {\r\n        throw new Error(`初始化失败，已达到最大重试次数 (${this.options.maxRetries})`);\r\n      }\r\n      this.log(`初始化失败，准备重试 (${this.state.retryCount + 1}/${this.options.maxRetries})`);\r\n    }\r\n\r\n    // 开始初始化\r\n    this.initializationPromise = this.performInitialization(initFunction);\r\n    return this.initializationPromise;\r\n  }\r\n\r\n  /**\r\n   * 执行初始化过程\r\n   */\r\n  private async performInitialization(initFunction: () => Promise<void>): Promise<void> {\r\n    try {\r\n      // 更新状态为初始化中\r\n      this.updateState({\r\n        status: 'initializing',\r\n        startTime: Date.now(),\r\n        error: null,\r\n      });\r\n\r\n      this.log('开始应用初始化...');\r\n\r\n      // 设置超时\r\n      this.setupTimeout();\r\n\r\n      // 执行初始化函数\r\n      await initFunction();\r\n\r\n      // 清除超时\r\n      this.clearTimeout();\r\n\r\n      // 更新状态为完成\r\n      this.updateState({\r\n        status: 'completed',\r\n        completedTime: Date.now(),\r\n      });\r\n\r\n      const duration = this.state.completedTime! - this.state.startTime!;\r\n      this.log(`应用初始化完成，耗时: ${duration}ms`);\r\n\r\n    } catch (error) {\r\n      // 清除超时\r\n      this.clearTimeout();\r\n\r\n      // 更新重试计数\r\n      this.state.retryCount++;\r\n\r\n      // 更新状态为失败\r\n      this.updateState({\r\n        status: 'failed',\r\n        error: error instanceof Error ? error : new Error(String(error)),\r\n      });\r\n\r\n      this.log(`应用初始化失败: ${error instanceof Error ? error.message : String(error)}`);\r\n\r\n      // 重新抛出错误\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置初始化超时\r\n   */\r\n  private setupTimeout(): void {\r\n    this.timeoutId = setTimeout(() => {\r\n      const error = new Error(`初始化超时 (${this.options.timeout}ms)`);\r\n      this.updateState({\r\n        status: 'failed',\r\n        error,\r\n      });\r\n      this.log(`初始化超时: ${this.options.timeout}ms`);\r\n    }, this.options.timeout);\r\n  }\r\n\r\n  /**\r\n   * 清除超时定时器\r\n   */\r\n  private clearTimeout(): void {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新内部状态\r\n   */\r\n  private updateState(updates: Partial<InitializationState>): void {\r\n    this.state = { ...this.state, ...updates };\r\n  }\r\n\r\n  /**\r\n   * 重置初始化状态（主要用于测试）\r\n   */\r\n  public reset(): void {\r\n    this.clearTimeout();\r\n    this.initializationPromise = null;\r\n    this.state = {\r\n      status: 'idle',\r\n      startTime: null,\r\n      completedTime: null,\r\n      error: null,\r\n      retryCount: 0,\r\n    };\r\n    this.log('初始化管理器已重置');\r\n  }\r\n\r\n  /**\r\n   * 强制重新初始化\r\n   */\r\n  public async forceReinitialize(initFunction: () => Promise<void>): Promise<void> {\r\n    this.log('强制重新初始化...');\r\n    this.reset();\r\n    return this.initializeOnce(initFunction);\r\n  }\r\n\r\n  /**\r\n   * 获取初始化统计信息\r\n   */\r\n  public getStats(): {\r\n    isInitialized: boolean;\r\n    isInitializing: boolean;\r\n    hasFailed: boolean;\r\n    duration: number | null;\r\n    retryCount: number;\r\n    error: string | null;\r\n  } {\r\n    const duration = this.state.startTime && this.state.completedTime\r\n      ? this.state.completedTime - this.state.startTime\r\n      : null;\r\n\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      isInitializing: this.isInitializing,\r\n      hasFailed: this.hasFailed,\r\n      duration,\r\n      retryCount: this.state.retryCount,\r\n      error: this.state.error?.message || null,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 日志输出\r\n   */\r\n  private log(message: string): void {\r\n    if (this.options.enableLogging) {\r\n      console.log(`[InitializationManager] ${message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁管理器实例\r\n   */\r\n  public destroy(): void {\r\n    this.clearTimeout();\r\n    this.initializationPromise = null;\r\n    InitializationManager.instance = null;\r\n  }\r\n}\r\n\r\n// 导出默认实例\r\nexport const initializationManager = InitializationManager.getInstance();","/**\r\n * 状态验证器\r\n * 检测和防止React组件状态更新的无限循环\r\n */\r\n\r\nexport interface StateUpdate {\r\n  timestamp: number;\r\n  statePath: string;\r\n  prevValue: any;\r\n  nextValue: any;\r\n  componentName?: string | undefined;\r\n  stackTrace?: string | undefined;\r\n}\r\n\r\nexport interface SuspiciousPattern {\r\n  type: 'rapid_updates' | 'circular_dependency' | 'infinite_loop';\r\n  detectedAt: number;\r\n  affectedPaths: string[];\r\n  severity: 'low' | 'medium' | 'high';\r\n  description: string;\r\n  updateCount: number;\r\n}\r\n\r\nexport interface StateValidationOptions {\r\n  maxHistorySize?: number;\r\n  rapidUpdateThreshold?: number;\r\n  rapidUpdateWindow?: number;\r\n  circularDependencyDepth?: number;\r\n  enableStackTrace?: boolean;\r\n  enableLogging?: boolean;\r\n}\r\n\r\n/**\r\n * 状态验证器类\r\n * 监控状态更新，检测潜在的无限循环模式\r\n */\r\nexport class StateValidator {\r\n  private updateHistory: StateUpdate[] = [];\r\n  private suspiciousPatterns: SuspiciousPattern[] = [];\r\n  private options: Required<StateValidationOptions>;\r\n  private warningCallbacks: Array<(pattern: SuspiciousPattern) => void> = [];\r\n\r\n  constructor(options: StateValidationOptions = {}) {\r\n    this.options = {\r\n      maxHistorySize: options.maxHistorySize ?? 100,\r\n      rapidUpdateThreshold: options.rapidUpdateThreshold ?? 10,\r\n      rapidUpdateWindow: options.rapidUpdateWindow ?? 1000, // 1秒\r\n      circularDependencyDepth: options.circularDependencyDepth ?? 5,\r\n      enableStackTrace: options.enableStackTrace ?? false,\r\n      enableLogging: options.enableLogging ?? true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 验证状态更新\r\n   * 在状态更新前调用此方法进行验证\r\n   */\r\n  public validateStateUpdate(\r\n    statePath: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    componentName?: string\r\n  ): boolean {\r\n    // 如果值没有实际变化，建议跳过更新\r\n    if (this.isValueEqual(prevValue, nextValue)) {\r\n      this.log(`状态路径 ${statePath} 的值没有变化，建议跳过更新`);\r\n      return false;\r\n    }\r\n\r\n    // 记录状态更新\r\n    const update: StateUpdate = {\r\n      timestamp: Date.now(),\r\n      statePath,\r\n      prevValue: this.cloneValue(prevValue),\r\n      nextValue: this.cloneValue(nextValue),\r\n      componentName,\r\n      stackTrace: this.options.enableStackTrace ? this.getStackTrace() : undefined,\r\n    };\r\n\r\n    this.recordUpdate(update);\r\n\r\n    // 检测可疑模式\r\n    this.detectSuspiciousPatterns();\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 检测无限循环\r\n   * 分析更新历史，查找循环模式\r\n   */\r\n  public detectInfiniteLoop(updateHistory?: StateUpdate[]): boolean {\r\n    const history = updateHistory || this.updateHistory;\r\n    \r\n    if (history.length < 3) {\r\n      return false;\r\n    }\r\n\r\n    // 检查最近的更新是否形成循环\r\n    const recentUpdates = history.slice(-10); // 检查最近10次更新\r\n    const pathCounts = new Map<string, number>();\r\n\r\n    for (const update of recentUpdates) {\r\n      const count = pathCounts.get(update.statePath) || 0;\r\n      pathCounts.set(update.statePath, count + 1);\r\n    }\r\n\r\n    // 如果同一个状态路径在短时间内更新过多次，可能是无限循环\r\n    for (const [path, count] of pathCounts) {\r\n      if (count >= this.options.rapidUpdateThreshold) {\r\n        this.log(`检测到潜在无限循环: ${path} 在短时间内更新了 ${count} 次`);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 记录可疑的状态更新\r\n   */\r\n  public logSuspiciousUpdates(updates: StateUpdate[]): void {\r\n    if (updates.length === 0) return;\r\n\r\n    this.log('=== 可疑状态更新报告 ===');\r\n    updates.forEach((update, index) => {\r\n      this.log(`${index + 1}. ${update.statePath} (${update.componentName || 'Unknown'})`);\r\n      this.log(`   时间: ${new Date(update.timestamp).toISOString()}`);\r\n      this.log(`   前值: ${JSON.stringify(update.prevValue)}`);\r\n      this.log(`   后值: ${JSON.stringify(update.nextValue)}`);\r\n      if (update.stackTrace) {\r\n        this.log(`   调用栈: ${update.stackTrace}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取状态更新历史\r\n   */\r\n  public getUpdateHistory(): StateUpdate[] {\r\n    return [...this.updateHistory];\r\n  }\r\n\r\n  /**\r\n   * 获取可疑模式列表\r\n   */\r\n  public getSuspiciousPatterns(): SuspiciousPattern[] {\r\n    return [...this.suspiciousPatterns];\r\n  }\r\n\r\n  /**\r\n   * 清除历史记录\r\n   */\r\n  public clearHistory(): void {\r\n    this.updateHistory = [];\r\n    this.suspiciousPatterns = [];\r\n    this.log('状态更新历史已清除');\r\n  }\r\n\r\n  /**\r\n   * 添加警告回调\r\n   */\r\n  public onWarning(callback: (pattern: SuspiciousPattern) => void): void {\r\n    this.warningCallbacks.push(callback);\r\n  }\r\n\r\n  /**\r\n   * 移除警告回调\r\n   */\r\n  public removeWarning(callback: (pattern: SuspiciousPattern) => void): void {\r\n    const index = this.warningCallbacks.indexOf(callback);\r\n    if (index > -1) {\r\n      this.warningCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成状态验证报告\r\n   */\r\n  public generateReport(): {\r\n    totalUpdates: number;\r\n    suspiciousPatterns: number;\r\n    recentUpdates: StateUpdate[];\r\n    recommendations: string[];\r\n  } {\r\n    const recentUpdates = this.updateHistory.slice(-10);\r\n    const recommendations: string[] = [];\r\n\r\n    // 分析并生成建议\r\n    if (this.suspiciousPatterns.length > 0) {\r\n      recommendations.push('检测到可疑的状态更新模式，建议检查组件的useEffect依赖');\r\n    }\r\n\r\n    const rapidUpdates = this.suspiciousPatterns.filter(p => p.type === 'rapid_updates');\r\n    if (rapidUpdates.length > 0) {\r\n      recommendations.push('检测到快速连续更新，建议使用防抖或批量更新');\r\n    }\r\n\r\n    const circularDeps = this.suspiciousPatterns.filter(p => p.type === 'circular_dependency');\r\n    if (circularDeps.length > 0) {\r\n      recommendations.push('检测到循环依赖，建议重新设计状态结构');\r\n    }\r\n\r\n    return {\r\n      totalUpdates: this.updateHistory.length,\r\n      suspiciousPatterns: this.suspiciousPatterns.length,\r\n      recentUpdates,\r\n      recommendations,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 记录状态更新\r\n   */\r\n  private recordUpdate(update: StateUpdate): void {\r\n    this.updateHistory.push(update);\r\n\r\n    // 限制历史记录大小\r\n    if (this.updateHistory.length > this.options.maxHistorySize) {\r\n      this.updateHistory = this.updateHistory.slice(-this.options.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测可疑模式\r\n   */\r\n  private detectSuspiciousPatterns(): void {\r\n    this.detectRapidUpdates();\r\n    this.detectCircularDependencies();\r\n    this.detectInfiniteLoopPattern();\r\n  }\r\n\r\n  /**\r\n   * 检测快速连续更新\r\n   */\r\n  private detectRapidUpdates(): void {\r\n    const now = Date.now();\r\n    const windowStart = now - this.options.rapidUpdateWindow;\r\n    \r\n    const recentUpdates = this.updateHistory.filter(\r\n      update => update.timestamp >= windowStart\r\n    );\r\n\r\n    if (recentUpdates.length >= this.options.rapidUpdateThreshold) {\r\n      const pathCounts = new Map<string, number>();\r\n      recentUpdates.forEach(update => {\r\n        const count = pathCounts.get(update.statePath) || 0;\r\n        pathCounts.set(update.statePath, count + 1);\r\n      });\r\n\r\n      for (const [path, count] of pathCounts) {\r\n        if (count >= this.options.rapidUpdateThreshold) {\r\n          const pattern: SuspiciousPattern = {\r\n            type: 'rapid_updates',\r\n            detectedAt: now,\r\n            affectedPaths: [path],\r\n            severity: count > 20 ? 'high' : count > 15 ? 'medium' : 'low',\r\n            description: `状态路径 ${path} 在 ${this.options.rapidUpdateWindow}ms 内更新了 ${count} 次`,\r\n            updateCount: count,\r\n          };\r\n\r\n          this.addSuspiciousPattern(pattern);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测循环依赖\r\n   */\r\n  private detectCircularDependencies(): void {\r\n    if (this.updateHistory.length < this.options.circularDependencyDepth) {\r\n      return;\r\n    }\r\n\r\n    const recentUpdates = this.updateHistory.slice(-this.options.circularDependencyDepth);\r\n    const pathSequence = recentUpdates.map(update => update.statePath);\r\n\r\n    // 检查是否有重复的路径序列\r\n    for (let i = 0; i < pathSequence.length - 1; i++) {\r\n      for (let j = i + 1; j < pathSequence.length; j++) {\r\n        if (pathSequence[i] === pathSequence[j]) {\r\n          const cyclePaths = pathSequence.slice(i, j);\r\n          \r\n          const pattern: SuspiciousPattern = {\r\n            type: 'circular_dependency',\r\n            detectedAt: Date.now(),\r\n            affectedPaths: cyclePaths,\r\n            severity: 'medium',\r\n            description: `检测到循环依赖: ${cyclePaths.join(' -> ')}`,\r\n            updateCount: cyclePaths.length,\r\n          };\r\n\r\n          this.addSuspiciousPattern(pattern);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测无限循环模式\r\n   */\r\n  private detectInfiniteLoopPattern(): void {\r\n    if (this.detectInfiniteLoop()) {\r\n      const pattern: SuspiciousPattern = {\r\n        type: 'infinite_loop',\r\n        detectedAt: Date.now(),\r\n        affectedPaths: Array.from(new Set(this.updateHistory.slice(-10).map(u => u.statePath))),\r\n        severity: 'high',\r\n        description: '检测到潜在的无限循环模式',\r\n        updateCount: this.updateHistory.length,\r\n      };\r\n\r\n      this.addSuspiciousPattern(pattern);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加可疑模式\r\n   */\r\n  private addSuspiciousPattern(pattern: SuspiciousPattern): void {\r\n    // 避免重复添加相同的模式\r\n    const exists = this.suspiciousPatterns.some(\r\n      existing => \r\n        existing.type === pattern.type &&\r\n        existing.affectedPaths.join(',') === pattern.affectedPaths.join(',') &&\r\n        (Date.now() - existing.detectedAt) < 5000 // 5秒内不重复报告\r\n    );\r\n\r\n    if (!exists) {\r\n      this.suspiciousPatterns.push(pattern);\r\n      this.log(`检测到可疑模式: ${pattern.description}`);\r\n      \r\n      // 触发警告回调\r\n      this.warningCallbacks.forEach(callback => {\r\n        try {\r\n          callback(pattern);\r\n        } catch (error) {\r\n          console.error('警告回调执行失败:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 比较两个值是否相等\r\n   */\r\n  private isValueEqual(a: any, b: any): boolean {\r\n    if (a === b) return true;\r\n    \r\n    if (a == null || b == null) return a === b;\r\n    \r\n    if (typeof a !== typeof b) return false;\r\n    \r\n    if (typeof a === 'object') {\r\n      try {\r\n        return JSON.stringify(a) === JSON.stringify(b);\r\n      } catch {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 克隆值（用于历史记录）\r\n   */\r\n  private cloneValue(value: any): any {\r\n    if (value == null || typeof value !== 'object') {\r\n      return value;\r\n    }\r\n    \r\n    try {\r\n      return JSON.parse(JSON.stringify(value));\r\n    } catch {\r\n      return '[无法序列化的对象]';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取调用栈\r\n   */\r\n  private getStackTrace(): string {\r\n    try {\r\n      throw new Error();\r\n    } catch (error) {\r\n      if (error instanceof Error && error.stack) {\r\n        return error.stack.split('\\n').slice(2, 5).join('\\n'); // 只保留前几行\r\n      }\r\n      return '无法获取调用栈';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 日志输出\r\n   */\r\n  private log(message: string): void {\r\n    if (this.options.enableLogging) {\r\n      console.log(`[StateValidator] ${message}`);\r\n    }\r\n  }\r\n}\r\n\r\n// 导出默认实例\r\nexport const stateValidator = new StateValidator();","/**\r\n * 调试日志工具\r\n * 帮助开发时定位React无限循环和状态更新问题\r\n */\r\n\r\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\nexport interface LogEntry {\r\n  timestamp: number;\r\n  level: LogLevel;\r\n  category: string;\r\n  message: string;\r\n  data?: any;\r\n  stackTrace?: string | undefined;\r\n  componentName?: string | undefined;\r\n}\r\n\r\nexport interface DebugLoggerOptions {\r\n  enableConsoleOutput?: boolean;\r\n  enableStackTrace?: boolean;\r\n  maxLogEntries?: number;\r\n  logLevel?: LogLevel;\r\n  categories?: string[];\r\n  enableTimestamp?: boolean;\r\n  enableComponentTracking?: boolean;\r\n}\r\n\r\n/**\r\n * 调试日志工具类\r\n * 提供结构化的日志记录和分析功能\r\n */\r\nexport class DebugLogger {\r\n  private static instance: DebugLogger | null = null;\r\n  private logEntries: LogEntry[] = [];\r\n  private options: Required<DebugLoggerOptions>;\r\n  private logLevelPriority: Record<LogLevel, number> = {\r\n    debug: 0,\r\n    info: 1,\r\n    warn: 2,\r\n    error: 3,\r\n  };\r\n\r\n  private constructor(options: DebugLoggerOptions = {}) {\r\n    this.options = {\r\n      enableConsoleOutput: options.enableConsoleOutput ?? true,\r\n      enableStackTrace: options.enableStackTrace ?? false,\r\n      maxLogEntries: options.maxLogEntries ?? 1000,\r\n      logLevel: options.logLevel ?? 'debug',\r\n      categories: options.categories ?? [],\r\n      enableTimestamp: options.enableTimestamp ?? true,\r\n      enableComponentTracking: options.enableComponentTracking ?? true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取单例实例\r\n   */\r\n  public static getInstance(options?: DebugLoggerOptions): DebugLogger {\r\n    if (!DebugLogger.instance) {\r\n      DebugLogger.instance = new DebugLogger(options);\r\n    }\r\n    return DebugLogger.instance;\r\n  }\r\n\r\n  /**\r\n   * 记录调试信息\r\n   */\r\n  public debug(category: string, message: string, data?: any, componentName?: string): void {\r\n    this.log('debug', category, message, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录一般信息\r\n   */\r\n  public info(category: string, message: string, data?: any, componentName?: string): void {\r\n    this.log('info', category, message, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录警告信息\r\n   */\r\n  public warn(category: string, message: string, data?: any, componentName?: string): void {\r\n    this.log('warn', category, message, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录错误信息\r\n   */\r\n  public error(category: string, message: string, data?: any, componentName?: string): void {\r\n    this.log('error', category, message, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录React组件相关的日志\r\n   */\r\n  public logComponent(\r\n    componentName: string,\r\n    action: string,\r\n    details?: any,\r\n    level: LogLevel = 'debug'\r\n  ): void {\r\n    this.log(level, 'component', `${componentName}: ${action}`, details, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录状态更新相关的日志\r\n   */\r\n  public logStateUpdate(\r\n    statePath: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    componentName?: string\r\n  ): void {\r\n    const data = {\r\n      statePath,\r\n      prevValue: this.sanitizeValue(prevValue),\r\n      nextValue: this.sanitizeValue(nextValue),\r\n      hasChanged: !this.isValueEqual(prevValue, nextValue),\r\n    };\r\n\r\n    this.log('debug', 'state', `状态更新: ${statePath}`, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录useEffect相关的日志\r\n   */\r\n  public logEffect(\r\n    componentName: string,\r\n    effectName: string,\r\n    dependencies: any[],\r\n    action: 'mount' | 'update' | 'cleanup'\r\n  ): void {\r\n    const data = {\r\n      effectName,\r\n      dependencies: dependencies.map(dep => this.sanitizeValue(dep)),\r\n      dependencyCount: dependencies.length,\r\n      action,\r\n    };\r\n\r\n    this.log('debug', 'effect', `${componentName} useEffect: ${effectName}`, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录渲染相关的日志\r\n   */\r\n  public logRender(\r\n    componentName: string,\r\n    renderCount: number,\r\n    props?: any,\r\n    reason?: string\r\n  ): void {\r\n    const data = {\r\n      renderCount,\r\n      props: props ? this.sanitizeValue(props) : undefined,\r\n      reason,\r\n    };\r\n\r\n    this.log('debug', 'render', `${componentName} 渲染 #${renderCount}`, data, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录性能相关的日志\r\n   */\r\n  public logPerformance(\r\n    operation: string,\r\n    duration: number,\r\n    details?: any\r\n  ): void {\r\n    const data = {\r\n      operation,\r\n      duration,\r\n      ...details,\r\n    };\r\n\r\n    const level: LogLevel = duration > 100 ? 'warn' : 'debug';\r\n    this.log(level, 'performance', `${operation} 耗时 ${duration}ms`, data);\r\n  }\r\n\r\n  /**\r\n   * 记录无限循环检测结果\r\n   */\r\n  public logInfiniteLoopDetection(\r\n    detected: boolean,\r\n    details: {\r\n      componentName?: string;\r\n      statePath?: string;\r\n      updateCount?: number;\r\n      timeWindow?: number;\r\n    }\r\n  ): void {\r\n    const level: LogLevel = detected ? 'error' : 'debug';\r\n    const message = detected \r\n      ? `检测到潜在无限循环: ${details.componentName || 'Unknown'}`\r\n      : '无限循环检测通过';\r\n\r\n    this.log(level, 'infinite-loop', message, details, details.componentName);\r\n  }\r\n\r\n  /**\r\n   * 获取日志条目\r\n   */\r\n  public getLogEntries(\r\n    category?: string,\r\n    level?: LogLevel,\r\n    componentName?: string,\r\n    limit?: number\r\n  ): LogEntry[] {\r\n    let entries = [...this.logEntries];\r\n\r\n    // 按类别过滤\r\n    if (category) {\r\n      entries = entries.filter(entry => entry.category === category);\r\n    }\r\n\r\n    // 按级别过滤\r\n    if (level) {\r\n      const minPriority = this.logLevelPriority[level];\r\n      entries = entries.filter(entry => this.logLevelPriority[entry.level] >= minPriority);\r\n    }\r\n\r\n    // 按组件名过滤\r\n    if (componentName) {\r\n      entries = entries.filter(entry => entry.componentName === componentName);\r\n    }\r\n\r\n    // 限制数量\r\n    if (limit && limit > 0) {\r\n      entries = entries.slice(-limit);\r\n    }\r\n\r\n    return entries;\r\n  }\r\n\r\n  /**\r\n   * 清除日志\r\n   */\r\n  public clearLogs(): void {\r\n    this.logEntries = [];\r\n    if (this.options.enableConsoleOutput) {\r\n      console.log('[DebugLogger] 日志已清除');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 导出日志为文本\r\n   */\r\n  public exportLogs(category?: string, level?: LogLevel): string {\r\n    const entries = this.getLogEntries(category, level);\r\n    const lines: string[] = [];\r\n\r\n    lines.push('=== Debug Logger 导出日志 ===');\r\n    lines.push(`导出时间: ${new Date().toISOString()}`);\r\n    lines.push(`总条目数: ${entries.length}`);\r\n    lines.push('');\r\n\r\n    entries.forEach((entry, index) => {\r\n      const timestamp = new Date(entry.timestamp).toISOString();\r\n      const component = entry.componentName ? ` [${entry.componentName}]` : '';\r\n      \r\n      lines.push(`${index + 1}. [${entry.level.toUpperCase()}] ${timestamp}${component}`);\r\n      lines.push(`   类别: ${entry.category}`);\r\n      lines.push(`   消息: ${entry.message}`);\r\n      \r\n      if (entry.data) {\r\n        lines.push(`   数据: ${JSON.stringify(entry.data, null, 2)}`);\r\n      }\r\n      \r\n      if (entry.stackTrace) {\r\n        lines.push(`   调用栈: ${entry.stackTrace}`);\r\n      }\r\n      \r\n      lines.push('');\r\n    });\r\n\r\n    return lines.join('\\n');\r\n  }\r\n\r\n  /**\r\n   * 生成日志统计报告\r\n   */\r\n  public generateStats(): {\r\n    totalEntries: number;\r\n    entriesByLevel: Record<LogLevel, number>;\r\n    entriesByCategory: Record<string, number>;\r\n    entriesByComponent: Record<string, number>;\r\n    recentErrors: LogEntry[];\r\n    performanceIssues: LogEntry[];\r\n  } {\r\n    const stats = {\r\n      totalEntries: this.logEntries.length,\r\n      entriesByLevel: { debug: 0, info: 0, warn: 0, error: 0 } as Record<LogLevel, number>,\r\n      entriesByCategory: {} as Record<string, number>,\r\n      entriesByComponent: {} as Record<string, number>,\r\n      recentErrors: [] as LogEntry[],\r\n      performanceIssues: [] as LogEntry[],\r\n    };\r\n\r\n    this.logEntries.forEach(entry => {\r\n      // 按级别统计\r\n      stats.entriesByLevel[entry.level]++;\r\n\r\n      // 按类别统计\r\n      stats.entriesByCategory[entry.category] = (stats.entriesByCategory[entry.category] || 0) + 1;\r\n\r\n      // 按组件统计\r\n      if (entry.componentName) {\r\n        stats.entriesByComponent[entry.componentName] = \r\n          (stats.entriesByComponent[entry.componentName] || 0) + 1;\r\n      }\r\n\r\n      // 收集最近的错误\r\n      if (entry.level === 'error' && stats.recentErrors.length < 10) {\r\n        stats.recentErrors.push(entry);\r\n      }\r\n\r\n      // 收集性能问题\r\n      if (entry.category === 'performance' && entry.data?.duration > 100) {\r\n        stats.performanceIssues.push(entry);\r\n      }\r\n    });\r\n\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * 设置日志选项\r\n   */\r\n  public setOptions(options: Partial<DebugLoggerOptions>): void {\r\n    this.options = { ...this.options, ...options };\r\n  }\r\n\r\n  /**\r\n   * 核心日志记录方法\r\n   */\r\n  private log(\r\n    level: LogLevel,\r\n    category: string,\r\n    message: string,\r\n    data?: any,\r\n    componentName?: string\r\n  ): void {\r\n    // 检查日志级别\r\n    if (this.logLevelPriority[level] < this.logLevelPriority[this.options.logLevel]) {\r\n      return;\r\n    }\r\n\r\n    // 检查类别过滤\r\n    if (this.options.categories.length > 0 && !this.options.categories.includes(category)) {\r\n      return;\r\n    }\r\n\r\n    // 创建日志条目\r\n    const entry: LogEntry = {\r\n      timestamp: Date.now(),\r\n      level,\r\n      category,\r\n      message,\r\n      data: data ? this.sanitizeValue(data) : undefined,\r\n      stackTrace: this.options.enableStackTrace ? this.getStackTrace() : undefined,\r\n      componentName: this.options.enableComponentTracking ? componentName : undefined,\r\n    };\r\n\r\n    // 添加到日志列表\r\n    this.logEntries.push(entry);\r\n\r\n    // 限制日志条目数量\r\n    if (this.logEntries.length > this.options.maxLogEntries) {\r\n      this.logEntries = this.logEntries.slice(-this.options.maxLogEntries);\r\n    }\r\n\r\n    // 控制台输出\r\n    if (this.options.enableConsoleOutput) {\r\n      this.outputToConsole(entry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 输出到控制台\r\n   */\r\n  private outputToConsole(entry: LogEntry): void {\r\n    const timestamp = this.options.enableTimestamp \r\n      ? `[${new Date(entry.timestamp).toISOString()}] `\r\n      : '';\r\n    \r\n    const component = entry.componentName ? ` [${entry.componentName}]` : '';\r\n    const prefix = `${timestamp}[${entry.category.toUpperCase()}]${component}`;\r\n    const message = `${prefix} ${entry.message}`;\r\n\r\n    switch (entry.level) {\r\n      case 'debug':\r\n        console.debug(message, entry.data || '');\r\n        break;\r\n      case 'info':\r\n        console.info(message, entry.data || '');\r\n        break;\r\n      case 'warn':\r\n        console.warn(message, entry.data || '');\r\n        break;\r\n      case 'error':\r\n        console.error(message, entry.data || '');\r\n        if (entry.stackTrace) {\r\n          console.error('调用栈:', entry.stackTrace);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理敏感数据\r\n   */\r\n  private sanitizeValue(value: any): any {\r\n    if (value == null) return value;\r\n    \r\n    if (typeof value === 'function') {\r\n      return '[Function]';\r\n    }\r\n    \r\n    if (typeof value === 'object') {\r\n      try {\r\n        // 限制对象深度，避免循环引用\r\n        return JSON.parse(JSON.stringify(value, null, 0));\r\n      } catch {\r\n        return '[无法序列化的对象]';\r\n      }\r\n    }\r\n    \r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * 比较两个值是否相等\r\n   */\r\n  private isValueEqual(a: any, b: any): boolean {\r\n    if (a === b) return true;\r\n    \r\n    if (a == null || b == null) return a === b;\r\n    \r\n    if (typeof a !== typeof b) return false;\r\n    \r\n    if (typeof a === 'object') {\r\n      try {\r\n        return JSON.stringify(a) === JSON.stringify(b);\r\n      } catch {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 获取调用栈\r\n   */\r\n  private getStackTrace(): string {\r\n    try {\r\n      throw new Error();\r\n    } catch (error) {\r\n      if (error instanceof Error && error.stack) {\r\n        return error.stack.split('\\n').slice(3, 8).join('\\n'); // 跳过前几行，只保留相关部分\r\n      }\r\n      return '无法获取调用栈';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁实例\r\n   */\r\n  public destroy(): void {\r\n    this.clearLogs();\r\n    DebugLogger.instance = null;\r\n  }\r\n}\r\n\r\n// 导出默认实例\r\nexport const debugLogger = DebugLogger.getInstance();\r\n\r\n// 导出便捷方法\r\nexport const logComponent = (componentName: string, action: string, details?: any, level?: LogLevel) => {\r\n  debugLogger.logComponent(componentName, action, details, level);\r\n};\r\n\r\nexport const logStateUpdate = (statePath: string, prevValue: any, nextValue: any, componentName?: string) => {\r\n  debugLogger.logStateUpdate(statePath, prevValue, nextValue, componentName);\r\n};\r\n\r\nexport const logEffect = (componentName: string, effectName: string, dependencies: any[], action: 'mount' | 'update' | 'cleanup') => {\r\n  debugLogger.logEffect(componentName, effectName, dependencies, action);\r\n};\r\n\r\nexport const logRender = (componentName: string, renderCount: number, props?: any, reason?: string) => {\r\n  debugLogger.logRender(componentName, renderCount, props, reason);\r\n};\r\n\r\nexport const logInfiniteLoop = (detected: boolean, details: any) => {\r\n  debugLogger.logInfiniteLoopDetection(detected, details);\r\n};","/**\r\n * React无限循环修复工具集\r\n * 集成InitializationManager、StateValidator和DebugLogger\r\n */\r\n\r\nimport { InitializationManager, initializationManager } from './InitializationManager';\r\nimport { StateValidator, stateValidator as defaultStateValidator, SuspiciousPattern } from './StateValidator';\r\nimport { DebugLogger, debugLogger as defaultDebugLogger } from './DebugLogger';\r\n\r\nexport { InitializationManager, initializationManager } from './InitializationManager';\r\nexport { StateValidator, stateValidator } from './StateValidator';\r\nexport { \r\n  DebugLogger, \r\n  debugLogger, \r\n  logComponent, \r\n  logStateUpdate, \r\n  logEffect, \r\n  logRender, \r\n  logInfiniteLoop \r\n} from './DebugLogger';\r\n\r\nexport type { InitializationState, InitializationOptions } from './InitializationManager';\r\nexport type { StateUpdate, SuspiciousPattern, StateValidationOptions } from './StateValidator';\r\nexport type { LogLevel, LogEntry, DebugLoggerOptions } from './DebugLogger';\r\n\r\n/**\r\n * React无限循环修复工具集合\r\n * 提供统一的接口来使用所有修复工具\r\n */\r\nexport class ReactLoopFixToolkit {\r\n  private static instance: ReactLoopFixToolkit | null = null;\r\n\r\n  private constructor(\r\n    public readonly initManager: InitializationManager = initializationManager,\r\n    public readonly stateValidator: StateValidator = defaultStateValidator,\r\n    public readonly debugLogger: DebugLogger = defaultDebugLogger\r\n  ) {\r\n    // 设置状态验证器的警告回调\r\n    this.stateValidator.onWarning((pattern: SuspiciousPattern) => {\r\n      this.debugLogger.warn(\r\n        'state-validation',\r\n        `检测到可疑状态更新模式: ${pattern.type}`,\r\n        pattern\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取工具集实例\r\n   */\r\n  public static getInstance(): ReactLoopFixToolkit {\r\n    if (!ReactLoopFixToolkit.instance) {\r\n      ReactLoopFixToolkit.instance = new ReactLoopFixToolkit();\r\n    }\r\n    return ReactLoopFixToolkit.instance;\r\n  }\r\n\r\n  /**\r\n   * 初始化应用（只执行一次）\r\n   */\r\n  public async initializeAppOnce(initFunction: () => Promise<void>): Promise<void> {\r\n    this.debugLogger.info('app', '开始应用初始化...');\r\n    \r\n    try {\r\n      await this.initManager.initializeOnce(initFunction);\r\n      this.debugLogger.info('app', '应用初始化完成');\r\n    } catch (error) {\r\n      this.debugLogger.error('app', '应用初始化失败', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证状态更新\r\n   */\r\n  public validateStateUpdate(\r\n    statePath: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    componentName?: string\r\n  ): boolean {\r\n    // 记录状态更新日志\r\n    this.debugLogger.logStateUpdate(statePath, prevValue, nextValue, componentName);\r\n    \r\n    // 验证状态更新\r\n    return this.stateValidator.validateStateUpdate(statePath, prevValue, nextValue, componentName);\r\n  }\r\n\r\n  /**\r\n   * 记录组件渲染\r\n   */\r\n  public logComponentRender(\r\n    componentName: string,\r\n    renderCount: number,\r\n    props?: any,\r\n    reason?: string\r\n  ): void {\r\n    this.debugLogger.logRender(componentName, renderCount, props, reason);\r\n  }\r\n\r\n  /**\r\n   * 记录useEffect执行\r\n   */\r\n  public logEffectExecution(\r\n    componentName: string,\r\n    effectName: string,\r\n    dependencies: any[],\r\n    action: 'mount' | 'update' | 'cleanup'\r\n  ): void {\r\n    this.debugLogger.logEffect(componentName, effectName, dependencies, action);\r\n  }\r\n\r\n  /**\r\n   * 检测无限循环\r\n   */\r\n  public detectInfiniteLoop(): boolean {\r\n    const detected = this.stateValidator.detectInfiniteLoop();\r\n    this.debugLogger.logInfiniteLoopDetection(detected, {\r\n      updateCount: this.stateValidator.getUpdateHistory().length,\r\n    });\r\n    return detected;\r\n  }\r\n\r\n  /**\r\n   * 生成诊断报告\r\n   */\r\n  public generateDiagnosticReport(): {\r\n    initialization: ReturnType<InitializationManager['getStats']>;\r\n    stateValidation: ReturnType<StateValidator['generateReport']>;\r\n    logging: ReturnType<DebugLogger['generateStats']>;\r\n  } {\r\n    return {\r\n      initialization: this.initManager.getStats(),\r\n      stateValidation: this.stateValidator.generateReport(),\r\n      logging: this.debugLogger.generateStats(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 清除所有历史数据\r\n   */\r\n  public clearAllHistory(): void {\r\n    this.stateValidator.clearHistory();\r\n    this.debugLogger.clearLogs();\r\n    this.debugLogger.info('toolkit', '所有历史数据已清除');\r\n  }\r\n\r\n  /**\r\n   * 重置所有工具\r\n   */\r\n  public resetAll(): void {\r\n    this.initManager.reset();\r\n    this.stateValidator.clearHistory();\r\n    this.debugLogger.clearLogs();\r\n    this.debugLogger.info('toolkit', '所有工具已重置');\r\n  }\r\n\r\n  /**\r\n   * 销毁工具集\r\n   */\r\n  public destroy(): void {\r\n    this.initManager.destroy();\r\n    this.debugLogger.destroy();\r\n    ReactLoopFixToolkit.instance = null;\r\n  }\r\n}\r\n\r\n// 导出默认工具集实例\r\nexport const reactLoopFixToolkit = ReactLoopFixToolkit.getInstance();","import { create } from 'zustand';\r\nimport { devtools } from 'zustand/middleware';\r\nimport { CanvasElement } from '../types/canvas';\r\nimport { reactLoopFixToolkit } from '../utils/ReactLoopFix';\r\n\r\ntype AppPage = 'home' | 'editor' | 'settings';\r\n\r\ninterface AppState {\r\n  // App info\r\n  version: string;\r\n  platform: string;\r\n  \r\n  // Initialization state\r\n  isInitialized: boolean;\r\n  isInitializing: boolean;\r\n  initializationError: string | null;\r\n  \r\n  // Navigation state\r\n  currentPage: AppPage;\r\n  isFirstTime: boolean;\r\n  \r\n  // UI state\r\n  sidebarCollapsed: boolean;\r\n  toolbarCollapsed: boolean;\r\n  propertiesPanelCollapsed: boolean;\r\n  activeTool: string;\r\n  isLoading: boolean;\r\n  \r\n  // Canvas state\r\n  canvasZoom: number;\r\n  canvasX: number;\r\n  canvasY: number;\r\n  showGrid: boolean;\r\n  showRulers: boolean;\r\n  \r\n  // Element state\r\n  elements: Record<string, CanvasElement>;\r\n  selectedElements: string[];\r\n  selectedElement: CanvasElement | null;\r\n  \r\n  // Project state\r\n  currentProject: any | null;\r\n  hasUnsavedChanges: boolean;\r\n  \r\n  // Actions\r\n  initializeApp: () => Promise<void>;\r\n  initializeAppOnce: () => Promise<void>;\r\n  batchUpdate: (updates: Partial<AppState>) => void;\r\n  setAppVersion: (version: string) => void;\r\n  setPlatform: (platform: string) => void;\r\n  \r\n  // Navigation Actions\r\n  setCurrentPage: (page: AppPage) => void;\r\n  setFirstTime: (isFirstTime: boolean) => void;\r\n  \r\n  // UI Actions\r\n  setSidebarCollapsed: (collapsed: boolean) => void;\r\n  setToolbarCollapsed: (collapsed: boolean) => void;\r\n  setPropertiesPanelCollapsed: (collapsed: boolean) => void;\r\n  setActiveTool: (tool: string) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  \r\n  // Canvas Actions\r\n  setCanvasZoom: (zoom: number) => void;\r\n  setCanvasPosition: (x: number, y: number) => void;\r\n  setShowGrid: (show: boolean) => void;\r\n  setShowRulers: (show: boolean) => void;\r\n  \r\n  // Element Actions\r\n  addElement: (element: CanvasElement) => void;\r\n  updateElement: (id: string, updates: Partial<CanvasElement>) => void;\r\n  deleteElement: (id: string) => void;\r\n  selectElements: (elementIds: string[]) => void;\r\n  clearSelection: () => void;\r\n  \r\n  // Project Actions\r\n  setCurrentProject: (project: Record<string, unknown> | null) => void;\r\n  setHasUnsavedChanges: (hasChanges: boolean) => void;\r\n}\r\n\r\nexport const useAppStore = create<AppState>()(\r\n  devtools(\r\n    (set, get) => ({\r\n      // Initial state\r\n      version: '1.0.0',\r\n      platform: 'unknown',\r\n      \r\n      // Initialization initial state\r\n      isInitialized: false,\r\n      isInitializing: false,\r\n      initializationError: null,\r\n      \r\n      // Navigation initial state\r\n      currentPage: 'editor' as AppPage,\r\n      isFirstTime: true,\r\n      \r\n      // UI initial state\r\n      sidebarCollapsed: false,\r\n      toolbarCollapsed: false,\r\n      propertiesPanelCollapsed: false,\r\n      activeTool: 'select',\r\n      isLoading: false,\r\n      \r\n      // Canvas initial state\r\n      canvasZoom: 1,\r\n      canvasX: 0,\r\n      canvasY: 0,\r\n      showGrid: true,\r\n      showRulers: true,\r\n      \r\n      // Element initial state\r\n      elements: {},\r\n      selectedElements: [],\r\n      selectedElement: null,\r\n      \r\n      // Project initial state\r\n      currentProject: null,\r\n      hasUnsavedChanges: false,\r\n\r\n      // Actions\r\n      initializeApp: async () => {\r\n        const state = get();\r\n        \r\n        // 记录初始化开始\r\n        reactLoopFixToolkit.debugLogger.info(\r\n          'app-store',\r\n          '开始应用初始化',\r\n          { isInitialized: state.isInitialized },\r\n          'AppStore'\r\n        );\r\n\r\n        try {\r\n          // 设置初始化状态\r\n          set({ isInitializing: true, initializationError: null });\r\n\r\n          // 检查是否首次使用\r\n          const hasUsedBefore = localStorage.getItem('g-asset-forge-used');\r\n          const isFirstTime = !hasUsedBefore;\r\n          \r\n          // 记录首次使用状态\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            `首次使用检测: ${isFirstTime}`,\r\n            { hasUsedBefore: !!hasUsedBefore },\r\n            'AppStore'\r\n          );\r\n          \r\n          // Initialize app-level configurations\r\n          console.log('GAF App initialized');\r\n          \r\n          // 添加一些示例元素\r\n          const sampleElements: Record<string, CanvasElement> = {\r\n            'rect1': {\r\n              id: 'rect1',\r\n              type: 'rectangle',\r\n              name: '矩形 1',\r\n              x: 100,\r\n              y: 100,\r\n              width: 200,\r\n              height: 100,\r\n              fill: '#3b82f6',\r\n              stroke: '#e5e7eb',\r\n              strokeWidth: 1,\r\n              borderRadius: 4,\r\n              opacity: 1,\r\n              visible: true,\r\n              locked: false\r\n            },\r\n            'text1': {\r\n              id: 'text1',\r\n              type: 'text',\r\n              name: '文本框',\r\n              x: 150,\r\n              y: 250,\r\n              width: 100,\r\n              height: 30,\r\n              fill: '#1f2937',\r\n              opacity: 1,\r\n              visible: true,\r\n              locked: false,\r\n              text: 'Sample Text',\r\n              fontSize: 14,\r\n              fontFamily: 'Arial',\r\n              fontWeight: 400,\r\n              textAlign: 'left'\r\n            }\r\n          };\r\n          \r\n          // 批量更新状态\r\n          set({ \r\n            elements: sampleElements,\r\n            isFirstTime,\r\n            isInitialized: true,\r\n            isInitializing: false\r\n          });\r\n\r\n          // 标记已使用\r\n          if (isFirstTime) {\r\n            localStorage.setItem('g-asset-forge-used', 'true');\r\n          }\r\n\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            '应用初始化完成',\r\n            { elementsCount: Object.keys(sampleElements).length },\r\n            'AppStore'\r\n          );\r\n          \r\n        } catch (error) {\r\n          const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n          \r\n          set({ \r\n            isInitializing: false,\r\n            initializationError: errorMessage\r\n          });\r\n\r\n          reactLoopFixToolkit.debugLogger.error(\r\n            'app-store',\r\n            '应用初始化失败',\r\n            { error: errorMessage },\r\n            'AppStore'\r\n          );\r\n          \r\n          console.error('Failed to initialize app:', error);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // 使用InitializationManager确保只初始化一次\r\n      initializeAppOnce: async () => {\r\n        const state = get();\r\n        \r\n        // 如果已经初始化，直接返回\r\n        if (state.isInitialized) {\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            '应用已初始化，跳过重复初始化',\r\n            { isInitialized: state.isInitialized },\r\n            'AppStore'\r\n          );\r\n          return;\r\n        }\r\n\r\n        // 使用InitializationManager确保只初始化一次\r\n        await reactLoopFixToolkit.initializeAppOnce(async () => {\r\n          await get().initializeApp();\r\n        });\r\n      },\r\n\r\n      // 批量状态更新方法\r\n      batchUpdate: (updates: Partial<AppState>) => {\r\n        const state = get();\r\n        \r\n        // 验证每个状态更新\r\n        const validatedUpdates: Partial<AppState> = {};\r\n        let hasValidUpdates = false;\r\n\r\n        for (const [key, value] of Object.entries(updates)) {\r\n          const currentValue = (state as any)[key];\r\n          const shouldUpdate = reactLoopFixToolkit.validateStateUpdate(\r\n            `appStore.${key}`,\r\n            currentValue,\r\n            value,\r\n            'AppStore'\r\n          );\r\n\r\n          if (shouldUpdate) {\r\n            (validatedUpdates as any)[key] = value;\r\n            hasValidUpdates = true;\r\n          }\r\n        }\r\n\r\n        // 只有在有有效更新时才执行set\r\n        if (hasValidUpdates) {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            '批量状态更新',\r\n            { \r\n              updatedKeys: Object.keys(validatedUpdates),\r\n              totalUpdates: Object.keys(validatedUpdates).length\r\n            },\r\n            'AppStore'\r\n          );\r\n\r\n          set(validatedUpdates);\r\n        } else {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            '批量更新被跳过，没有有效的状态变化',\r\n            { requestedKeys: Object.keys(updates) },\r\n            'AppStore'\r\n          );\r\n        }\r\n      },\r\n\r\n      // Basic setters with validation\r\n      setAppVersion: (version: string) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.version', state.version, version, 'AppStore')) {\r\n          set({ version });\r\n        }\r\n      },\r\n      \r\n      setPlatform: (platform: string) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.platform', state.platform, platform, 'AppStore')) {\r\n          set({ platform });\r\n        }\r\n      },\r\n      \r\n      // Navigation Actions with validation\r\n      setCurrentPage: (page: AppPage) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.currentPage', state.currentPage, page, 'AppStore')) {\r\n          set({ currentPage: page });\r\n        }\r\n      },\r\n      \r\n      setFirstTime: (isFirstTime: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.isFirstTime', state.isFirstTime, isFirstTime, 'AppStore')) {\r\n          set({ isFirstTime });\r\n        }\r\n      },\r\n      \r\n      // UI Actions with validation\r\n      setSidebarCollapsed: (collapsed: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.sidebarCollapsed', state.sidebarCollapsed, collapsed, 'AppStore')) {\r\n          set({ sidebarCollapsed: collapsed });\r\n        }\r\n      },\r\n      \r\n      setToolbarCollapsed: (collapsed: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.toolbarCollapsed', state.toolbarCollapsed, collapsed, 'AppStore')) {\r\n          set({ toolbarCollapsed: collapsed });\r\n        }\r\n      },\r\n      \r\n      setPropertiesPanelCollapsed: (collapsed: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.propertiesPanelCollapsed', state.propertiesPanelCollapsed, collapsed, 'AppStore')) {\r\n          set({ propertiesPanelCollapsed: collapsed });\r\n        }\r\n      },\r\n      \r\n      setActiveTool: (tool: string) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.activeTool', state.activeTool, tool, 'AppStore')) {\r\n          set({ activeTool: tool });\r\n        }\r\n      },\r\n      \r\n      setLoading: (loading: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.isLoading', state.isLoading, loading, 'AppStore')) {\r\n          set({ isLoading: loading });\r\n        }\r\n      },\r\n      \r\n      // Canvas Actions with validation\r\n      setCanvasZoom: (zoom: number) => {\r\n        const state = get();\r\n        const clampedZoom = Math.max(0.1, Math.min(10, zoom));\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.canvasZoom', state.canvasZoom, clampedZoom, 'AppStore')) {\r\n          set({ canvasZoom: clampedZoom });\r\n        }\r\n      },\r\n      \r\n      setCanvasPosition: (x: number, y: number) => {\r\n        const state = get();\r\n        const newPosition = { x, y };\r\n        const currentPosition = { x: state.canvasX, y: state.canvasY };\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.canvasPosition', currentPosition, newPosition, 'AppStore')) {\r\n          set({ canvasX: x, canvasY: y });\r\n        }\r\n      },\r\n      \r\n      setShowGrid: (show: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.showGrid', state.showGrid, show, 'AppStore')) {\r\n          set({ showGrid: show });\r\n        }\r\n      },\r\n      \r\n      setShowRulers: (show: boolean) => {\r\n        const state = get();\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.showRulers', state.showRulers, show, 'AppStore')) {\r\n          set({ showRulers: show });\r\n        }\r\n      },\r\n      \r\n      // Element Actions with validation\r\n      addElement: (element: CanvasElement) => {\r\n        const state = get();\r\n        const newElements = { ...state.elements, [element.id]: element };\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.elements', state.elements, newElements, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            `添加元素: ${element.id}`,\r\n            { elementType: element.type, elementName: element.name },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({\r\n            elements: newElements,\r\n            hasUnsavedChanges: true\r\n          });\r\n        }\r\n      },\r\n      \r\n      updateElement: (id: string, updates: Partial<CanvasElement>) => {\r\n        const state = get();\r\n        const element = state.elements[id];\r\n        \r\n        if (!element) {\r\n          reactLoopFixToolkit.debugLogger.warn(\r\n            'app-store',\r\n            `尝试更新不存在的元素: ${id}`,\r\n            { updates },\r\n            'AppStore'\r\n          );\r\n          return;\r\n        }\r\n        \r\n        const updatedElement = { ...element, ...updates };\r\n        const newElements = { ...state.elements, [id]: updatedElement };\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate(`appStore.elements.${id}`, element, updatedElement, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            `更新元素: ${id}`,\r\n            { updatedKeys: Object.keys(updates) },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({\r\n            elements: newElements,\r\n            hasUnsavedChanges: true\r\n          });\r\n        }\r\n      },\r\n      \r\n      deleteElement: (id: string) => {\r\n        const state = get();\r\n        const element = state.elements[id];\r\n        \r\n        if (!element) {\r\n          reactLoopFixToolkit.debugLogger.warn(\r\n            'app-store',\r\n            `尝试删除不存在的元素: ${id}`,\r\n            {},\r\n            'AppStore'\r\n          );\r\n          return;\r\n        }\r\n        \r\n        const newElements = { ...state.elements };\r\n        delete newElements[id];\r\n        \r\n        const newSelectedElements = state.selectedElements.filter(selectedId => selectedId !== id);\r\n        const newSelectedElement = state.selectedElement?.id === id ? null : state.selectedElement;\r\n        \r\n        // 验证元素删除\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.elements', state.elements, newElements, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            `删除元素: ${id}`,\r\n            { elementType: element.type, elementName: element.name },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({\r\n            elements: newElements,\r\n            selectedElements: newSelectedElements,\r\n            selectedElement: newSelectedElement,\r\n            hasUnsavedChanges: true\r\n          });\r\n        }\r\n      },\r\n      \r\n      selectElements: (elementIds: string[]) => {\r\n        const state = get();\r\n        const { elements } = state;\r\n        \r\n        // 验证选择的元素是否存在\r\n        const validElementIds = elementIds.filter(id => elements[id]);\r\n        if (validElementIds.length !== elementIds.length) {\r\n          const invalidIds = elementIds.filter(id => !elements[id]);\r\n          reactLoopFixToolkit.debugLogger.warn(\r\n            'app-store',\r\n            '尝试选择不存在的元素',\r\n            { invalidIds },\r\n            'AppStore'\r\n          );\r\n        }\r\n        \r\n        const selectedElement = validElementIds.length === 1 && validElementIds[0] \r\n          ? elements[validElementIds[0]] || null \r\n          : null;\r\n        \r\n        // 验证选择状态更新\r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.selectedElements', state.selectedElements, validElementIds, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            '选择元素',\r\n            { selectedCount: validElementIds.length, elementIds: validElementIds },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({\r\n            selectedElements: validElementIds,\r\n            selectedElement\r\n          });\r\n        }\r\n      },\r\n      \r\n      clearSelection: () => {\r\n        const state = get();\r\n        const emptySelection: string[] = [];\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.selectedElements', state.selectedElements, emptySelection, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            '清除选择',\r\n            { previousCount: state.selectedElements.length },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({ \r\n            selectedElements: emptySelection, \r\n            selectedElement: null \r\n          });\r\n        }\r\n      },\r\n      \r\n      // Project Actions with validation\r\n      setCurrentProject: (project: Record<string, unknown> | null) => {\r\n        const state = get();\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.currentProject', state.currentProject, project, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.info(\r\n            'app-store',\r\n            '设置当前项目',\r\n            { hasProject: !!project },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({ \r\n            currentProject: project,\r\n            hasUnsavedChanges: false \r\n          });\r\n        }\r\n      },\r\n      \r\n      setHasUnsavedChanges: (hasChanges: boolean) => {\r\n        const state = get();\r\n        \r\n        if (reactLoopFixToolkit.validateStateUpdate('appStore.hasUnsavedChanges', state.hasUnsavedChanges, hasChanges, 'AppStore')) {\r\n          reactLoopFixToolkit.debugLogger.debug(\r\n            'app-store',\r\n            '设置未保存更改状态',\r\n            { hasChanges },\r\n            'AppStore'\r\n          );\r\n          \r\n          set({ hasUnsavedChanges: hasChanges });\r\n        }\r\n      },\r\n    }),\r\n    {\r\n      name: 'gaf-app-store',\r\n    }\r\n  )\r\n);\r\n","/**\r\n * 应用主容器 - 重构版本，解决useEffect依赖问题\r\n * 管理应用的整体状态和布局结构，防止无限循环\r\n */\r\n\r\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeProvider } from '../../ui/theme/ThemeProvider';\r\nimport { GlobalStyles } from '../../ui/styles/GlobalStyles';\r\nimport { MainLayout } from '../Layout/MainLayout';\r\nimport { WelcomeScreen } from '../Welcome/WelcomeScreen';\r\nimport { useAppStore } from '../../stores/appStore';\r\nimport { useAppInitialization } from '../../hooks/useAppInitialization';\r\nimport { useRenderCounter } from '../../hooks/useRenderCounter';\r\nimport { reactLoopFixToolkit } from '../../utils/ReactLoopFix';\r\n\r\n// 窗口控制 Hook - 使用useCallback稳定化函数引用\r\nconst useWindowControl = () => {\r\n  const originalSizeRef = useRef<{ width: number; height: number } | null>(null);\r\n\r\n  const setWelcomeMode = useCallback(async () => {\r\n    try {\r\n      reactLoopFixToolkit.debugLogger.debug(\r\n        'window-control',\r\n        '设置欢迎模式窗口',\r\n        {},\r\n        'useWindowControl'\r\n      );\r\n\r\n      // 保存原始窗口大小和设置\r\n      const sizeResult = await window.electronAPI.window.getSize();\r\n      if (sizeResult.success && sizeResult.data) {\r\n        originalSizeRef.current = sizeResult.data;\r\n      }\r\n\r\n      // 设置欢迎页面的固定大小 (600x450)\r\n      await window.electronAPI.window.setSize(600, 450, true);\r\n      await window.electronAPI.window.setResizable(false);\r\n      await window.electronAPI.window.center();\r\n      \r\n      reactLoopFixToolkit.debugLogger.info(\r\n        'window-control',\r\n        '窗口已设置为欢迎模式: 600x450, 固定大小',\r\n        { width: 600, height: 450 },\r\n        'useWindowControl'\r\n      );\r\n    } catch (error) {\r\n      reactLoopFixToolkit.debugLogger.error(\r\n        'window-control',\r\n        '设置欢迎模式失败',\r\n        { error: error instanceof Error ? error.message : String(error) },\r\n        'useWindowControl'\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const restoreNormalMode = useCallback(async () => {\r\n    try {\r\n      reactLoopFixToolkit.debugLogger.debug(\r\n        'window-control',\r\n        '恢复正常模式窗口',\r\n        {},\r\n        'useWindowControl'\r\n      );\r\n\r\n      // 恢复窗口可调整大小\r\n      await window.electronAPI.window.setResizable(true);\r\n      \r\n      // 恢复原始大小（如果有的话）\r\n      if (originalSizeRef.current) {\r\n        await window.electronAPI.window.setSize(\r\n          originalSizeRef.current.width,\r\n          originalSizeRef.current.height,\r\n          true\r\n        );\r\n      } else {\r\n        // 默认主界面大小\r\n        await window.electronAPI.window.setSize(1200, 800, true);\r\n      }\r\n      \r\n      await window.electronAPI.window.center();\r\n      \r\n      reactLoopFixToolkit.debugLogger.info(\r\n        'window-control',\r\n        '窗口已恢复正常模式',\r\n        { \r\n          width: originalSizeRef.current?.width || 1200, \r\n          height: originalSizeRef.current?.height || 800 \r\n        },\r\n        'useWindowControl'\r\n      );\r\n    } catch (error) {\r\n      reactLoopFixToolkit.debugLogger.error(\r\n        'window-control',\r\n        '恢复正常模式失败',\r\n        { error: error instanceof Error ? error.message : String(error) },\r\n        'useWindowControl'\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return useMemo(() => ({ setWelcomeMode, restoreNormalMode }), [setWelcomeMode, restoreNormalMode]);\r\n};\r\n\r\n\r\nconst AppWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n`;\r\n\r\nconst LoadingScreen = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ErrorScreen = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.error || '#ff6b6b'};\r\n  text-align: center;\r\n  padding: 20px;\r\n\r\n  h2 {\r\n    margin-bottom: 16px;\r\n    font-size: 24px;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 16px;\r\n    font-size: 14px;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst RetryButton = styled.button`\r\n  padding: 8px 16px;\r\n  background: ${({ theme }) => theme.colors.primary || '#3b82f6'};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  \r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(1px);\r\n  }\r\n`;\r\n\r\nexport const AppContainer: React.FC = () => {\r\n  // 从store获取状态，但不直接使用initializeApp\r\n  const { isFirstTime } = useAppStore();\r\n  \r\n  // 本地状态管理\r\n  const [showWelcome, setShowWelcome] = useState(true);\r\n  const [hasSetWelcomeMode, setHasSetWelcomeMode] = useState(false);\r\n  \r\n  // 窗口控制\r\n  const { setWelcomeMode, restoreNormalMode } = useWindowControl();\r\n  \r\n  // 使用优化的初始化Hook\r\n  const {\r\n    isInitialized,\r\n    isInitializing,\r\n    initializationError,\r\n    hasError,\r\n    manualInit,\r\n  } = useAppInitialization({\r\n    enableAutoInit: true,\r\n    onInitialized: useCallback(() => {\r\n      reactLoopFixToolkit.debugLogger.info(\r\n        'app-container',\r\n        '应用初始化完成',\r\n        { isFirstTime },\r\n        'AppContainer'\r\n      );\r\n    }, [isFirstTime]),\r\n    onError: useCallback((error: Error) => {\r\n      reactLoopFixToolkit.debugLogger.error(\r\n        'app-container',\r\n        '应用初始化失败',\r\n        { error: error.message },\r\n        'AppContainer'\r\n      );\r\n    }, []),\r\n  });\r\n\r\n  // 稳定化的欢迎完成处理函数\r\n  const handleWelcomeComplete = useCallback(() => {\r\n    reactLoopFixToolkit.debugLogger.info(\r\n      'app-container',\r\n      '欢迎页面完成',\r\n      {},\r\n      'AppContainer'\r\n    );\r\n\r\n    setShowWelcome(false);\r\n    restoreNormalMode();\r\n  }, [restoreNormalMode]);\r\n\r\n  // 稳定化的重试初始化函数\r\n  const handleRetryInit = useCallback(async () => {\r\n    try {\r\n      reactLoopFixToolkit.debugLogger.info(\r\n        'app-container',\r\n        '重试应用初始化',\r\n        {},\r\n        'AppContainer'\r\n      );\r\n      await manualInit();\r\n    } catch (error) {\r\n      reactLoopFixToolkit.debugLogger.error(\r\n        'app-container',\r\n        '重试初始化失败',\r\n        { error: error instanceof Error ? error.message : String(error) },\r\n        'AppContainer'\r\n      );\r\n    }\r\n  }, [manualInit]);\r\n\r\n  // 分离的窗口模式设置逻辑 - 只在初始化完成且是首次使用时执行一次\r\n  useEffect(() => {\r\n    if (isInitialized && isFirstTime && !hasSetWelcomeMode) {\r\n      reactLoopFixToolkit.debugLogger.debug(\r\n        'app-container',\r\n        '设置首次使用的欢迎模式',\r\n        { isFirstTime, hasSetWelcomeMode },\r\n        'AppContainer'\r\n      );\r\n\r\n      setWelcomeMode();\r\n      setHasSetWelcomeMode(true);\r\n      setShowWelcome(true);\r\n    } else if (isInitialized && !isFirstTime) {\r\n      reactLoopFixToolkit.debugLogger.debug(\r\n        'app-container',\r\n        '非首次使用，直接进入主界面',\r\n        { isFirstTime },\r\n        'AppContainer'\r\n      );\r\n\r\n      setShowWelcome(false);\r\n    }\r\n  }, [isInitialized, isFirstTime, hasSetWelcomeMode, setWelcomeMode]);\r\n\r\n  // 计算渲染状态 - 使用useMemo优化\r\n  const renderState = useMemo(() => {\r\n    if (hasError) {\r\n      return 'error';\r\n    }\r\n    if (isInitializing) {\r\n      return 'loading';\r\n    }\r\n    if (!isInitialized) {\r\n      return 'loading';\r\n    }\r\n    if (showWelcome && isFirstTime) {\r\n      return 'welcome';\r\n    }\r\n    return 'main';\r\n  }, [hasError, isInitializing, isInitialized, showWelcome, isFirstTime]);\r\n\r\n  // 使用渲染计数Hook\r\n  useRenderCounter(\r\n    {\r\n      componentName: 'AppContainer',\r\n      enableLogging: process.env['NODE_ENV'] === 'development',\r\n      logProps: true,\r\n      maxRenderWarning: 15,\r\n    },\r\n    { renderState, isInitialized, isFirstTime, showWelcome },\r\n    `render state: ${renderState}`\r\n  );\r\n\r\n  // 渲染内容\r\n  const renderContent = () => {\r\n    switch (renderState) {\r\n      case 'error':\r\n        return (\r\n          <ErrorScreen>\r\n            <h2>应用初始化失败</h2>\r\n            <p>{initializationError}</p>\r\n            <RetryButton onClick={handleRetryInit}>\r\n              重试\r\n            </RetryButton>\r\n          </ErrorScreen>\r\n        );\r\n\r\n      case 'loading':\r\n        return (\r\n          <LoadingScreen>\r\n            正在初始化应用...\r\n          </LoadingScreen>\r\n        );\r\n\r\n      case 'welcome':\r\n        return <WelcomeScreen onComplete={handleWelcomeComplete} />;\r\n\r\n      case 'main':\r\n        return <MainLayout />;\r\n\r\n      default:\r\n        return (\r\n          <LoadingScreen>\r\n            加载中...\r\n          </LoadingScreen>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <GlobalStyles />\r\n      <AppWrapper>\r\n        {renderContent()}\r\n      </AppWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","/**\r\n * 应用初始化Hook\r\n * 提供安全的应用初始化功能，防止重复初始化\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useAppStore } from '../stores/appStore';\r\nimport { reactLoopFixToolkit } from '../utils/ReactLoopFix';\r\n\r\nexport interface UseAppInitializationOptions {\r\n  enableAutoInit?: boolean;\r\n  onInitialized?: () => void;\r\n  onError?: (error: Error) => void;\r\n}\r\n\r\nexport function useAppInitialization(options: UseAppInitializationOptions = {}) {\r\n  const {\r\n    enableAutoInit = true,\r\n    onInitialized,\r\n    onError\r\n  } = options;\r\n\r\n  const {\r\n    isInitialized,\r\n    isInitializing,\r\n    initializationError,\r\n    initializeAppOnce\r\n  } = useAppStore();\r\n\r\n  const [hasAttemptedInit, setHasAttemptedInit] = useState(false);\r\n\r\n  // 自动初始化\r\n  useEffect(() => {\r\n    if (!enableAutoInit || hasAttemptedInit || isInitialized || isInitializing) {\r\n      return;\r\n    }\r\n\r\n    const performInitialization = async () => {\r\n      try {\r\n        setHasAttemptedInit(true);\r\n        \r\n        reactLoopFixToolkit.debugLogger.info(\r\n          'app-init',\r\n          '开始自动初始化应用',\r\n          { enableAutoInit },\r\n          'useAppInitialization'\r\n        );\r\n\r\n        await initializeAppOnce();\r\n\r\n        if (onInitialized) {\r\n          onInitialized();\r\n        }\r\n\r\n        reactLoopFixToolkit.debugLogger.info(\r\n          'app-init',\r\n          '应用自动初始化完成',\r\n          {},\r\n          'useAppInitialization'\r\n        );\r\n\r\n      } catch (error) {\r\n        const err = error instanceof Error ? error : new Error(String(error));\r\n        \r\n        reactLoopFixToolkit.debugLogger.error(\r\n          'app-init',\r\n          '应用自动初始化失败',\r\n          { error: err.message },\r\n          'useAppInitialization'\r\n        );\r\n\r\n        if (onError) {\r\n          onError(err);\r\n        }\r\n      }\r\n    };\r\n\r\n    performInitialization();\r\n  }, [enableAutoInit, hasAttemptedInit, isInitialized, isInitializing, initializeAppOnce, onInitialized, onError]);\r\n\r\n  // 手动初始化方法\r\n  const manualInit = async () => {\r\n    if (isInitialized || isInitializing) {\r\n      reactLoopFixToolkit.debugLogger.warn(\r\n        'app-init',\r\n        '尝试手动初始化已初始化的应用',\r\n        { isInitialized, isInitializing },\r\n        'useAppInitialization'\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      reactLoopFixToolkit.debugLogger.info(\r\n        'app-init',\r\n        '开始手动初始化应用',\r\n        {},\r\n        'useAppInitialization'\r\n      );\r\n\r\n      await initializeAppOnce();\r\n\r\n      if (onInitialized) {\r\n        onInitialized();\r\n      }\r\n\r\n    } catch (error) {\r\n      const err = error instanceof Error ? error : new Error(String(error));\r\n      \r\n      reactLoopFixToolkit.debugLogger.error(\r\n        'app-init',\r\n        '应用手动初始化失败',\r\n        { error: err.message },\r\n        'useAppInitialization'\r\n      );\r\n\r\n      if (onError) {\r\n        onError(err);\r\n      }\r\n      \r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // 重置初始化状态（主要用于测试）\r\n  const resetInitialization = () => {\r\n    setHasAttemptedInit(false);\r\n    reactLoopFixToolkit.debugLogger.info(\r\n      'app-init',\r\n      '重置初始化状态',\r\n      {},\r\n      'useAppInitialization'\r\n    );\r\n  };\r\n\r\n  return {\r\n    // 状态\r\n    isInitialized,\r\n    isInitializing,\r\n    initializationError,\r\n    hasAttemptedInit,\r\n    \r\n    // 方法\r\n    manualInit,\r\n    resetInitialization,\r\n    \r\n    // 计算属性\r\n    canInitialize: !isInitialized && !isInitializing,\r\n    hasError: !!initializationError,\r\n  };\r\n}","/**\r\n * 渲染计数Hook\r\n * 跟踪组件的渲染次数，用于性能监控和调试\r\n */\r\n\r\nimport { useRef, useEffect } from 'react';\r\nimport { reactLoopFixToolkit } from '../utils/ReactLoopFix';\r\n\r\nexport interface UseRenderCounterOptions {\r\n  componentName: string;\r\n  enableLogging?: boolean;\r\n  logProps?: boolean;\r\n  logReason?: boolean;\r\n  maxRenderWarning?: number;\r\n}\r\n\r\nexport function useRenderCounter(\r\n  options: UseRenderCounterOptions,\r\n  props?: any,\r\n  reason?: string\r\n) {\r\n  const {\r\n    componentName,\r\n    enableLogging = true,\r\n    logProps = false,\r\n    logReason = true,\r\n    maxRenderWarning = 20,\r\n  } = options;\r\n\r\n  const renderCountRef = useRef(0);\r\n  const lastPropsRef = useRef(props);\r\n  const renderTimesRef = useRef<number[]>([]);\r\n\r\n  // 增加渲染计数\r\n  renderCountRef.current += 1;\r\n  const currentRenderCount = renderCountRef.current;\r\n\r\n  // 记录渲染时间\r\n  const now = Date.now();\r\n  renderTimesRef.current.push(now);\r\n  \r\n  // 只保留最近10次渲染时间\r\n  if (renderTimesRef.current.length > 10) {\r\n    renderTimesRef.current = renderTimesRef.current.slice(-10);\r\n  }\r\n\r\n  // 计算渲染间隔\r\n  const renderInterval = renderTimesRef.current.length > 1\r\n    ? now - (renderTimesRef.current[renderTimesRef.current.length - 2] || 0)\r\n    : 0;\r\n\r\n  // 检测props变化\r\n  const propsChanged = JSON.stringify(props) !== JSON.stringify(lastPropsRef.current);\r\n  lastPropsRef.current = props;\r\n\r\n  // 记录渲染日志\r\n  useEffect(() => {\r\n    if (enableLogging) {\r\n      const logData: any = {\r\n        renderCount: currentRenderCount,\r\n        renderInterval,\r\n        propsChanged,\r\n      };\r\n\r\n      if (logProps && props) {\r\n        logData.props = props;\r\n      }\r\n\r\n      if (logReason && reason) {\r\n        logData.reason = reason;\r\n      }\r\n\r\n      reactLoopFixToolkit.debugLogger.logRender(\r\n        componentName,\r\n        currentRenderCount,\r\n        logData,\r\n        reason\r\n      );\r\n    }\r\n\r\n    // 检查是否渲染过多\r\n    if (currentRenderCount > maxRenderWarning) {\r\n      reactLoopFixToolkit.debugLogger.warn(\r\n        'render-counter',\r\n        `${componentName} 渲染次数过多: ${currentRenderCount}`,\r\n        {\r\n          renderCount: currentRenderCount,\r\n          maxWarning: maxRenderWarning,\r\n          averageInterval: renderTimesRef.current.length > 1\r\n            ? (now - (renderTimesRef.current[0] || 0)) / (renderTimesRef.current.length - 1)\r\n            : 0,\r\n        },\r\n        componentName\r\n      );\r\n    }\r\n\r\n    // 检查渲染频率是否过高\r\n    if (renderInterval > 0 && renderInterval < 16) {\r\n      reactLoopFixToolkit.debugLogger.warn(\r\n        'render-counter',\r\n        `${componentName} 渲染频率过高: ${renderInterval}ms`,\r\n        {\r\n          renderInterval,\r\n          renderCount: currentRenderCount,\r\n        },\r\n        componentName\r\n      );\r\n    }\r\n  });\r\n\r\n  // 返回渲染统计信息\r\n  return {\r\n    renderCount: currentRenderCount,\r\n    renderInterval,\r\n    propsChanged,\r\n    averageRenderInterval: renderTimesRef.current.length > 1\r\n      ? (now - (renderTimesRef.current[0] || 0)) / (renderTimesRef.current.length - 1)\r\n      : 0,\r\n    isRenderingTooMuch: currentRenderCount > maxRenderWarning,\r\n    isRenderingTooFast: renderInterval > 0 && renderInterval < 16,\r\n  };\r\n}","import React from 'react';\r\nimport { AppContainer } from './components/App/AppContainer';\r\n\r\ninterface AppProps {\r\n  onReady?: () => void;\r\n}\r\n\r\nconst App: React.FC<AppProps> = () => {\r\n  return <AppContainer />;\r\n};\r\n\r\nexport default App;\r\n","import { Component, ErrorInfo, ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  errorInfo?: ErrorInfo;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  override componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  override render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{ \r\n          height: '100vh', \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          padding: '20px',\r\n          background: '#fff',\r\n          fontFamily: 'system-ui, -apple-system, sans-serif'\r\n        }}>\r\n          <div style={{\r\n            textAlign: 'center',\r\n            maxWidth: '600px'\r\n          }}>\r\n            <h1 style={{ \r\n              color: '#d32f2f', \r\n              marginBottom: '16px',\r\n              fontSize: '24px' \r\n            }}>\r\n              应用程序出现错误\r\n            </h1>\r\n            \r\n            <p style={{ \r\n              color: '#666', \r\n              marginBottom: '20px',\r\n              fontSize: '16px'\r\n            }}>\r\n              {this.state.error?.message || '未知错误'}\r\n            </p>\r\n            \r\n            <div style={{ marginBottom: '20px' }}>\r\n              <button \r\n                style={{\r\n                  background: '#1976d2',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  padding: '8px 16px',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  marginRight: '8px'\r\n                }}\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                重新加载\r\n              </button>\r\n              \r\n              <button \r\n                style={{\r\n                  background: 'transparent',\r\n                  color: '#1976d2',\r\n                  border: '1px solid #1976d2',\r\n                  padding: '8px 16px',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer'\r\n                }}\r\n                onClick={() => {\r\n                  console.log('Error details:', this.state.error);\r\n                  console.log('Error info:', this.state.errorInfo);\r\n                }}\r\n              >\r\n                查看详情\r\n              </button>\r\n            </div>\r\n\r\n            <details style={{ textAlign: 'left' }}>\r\n              <summary style={{ cursor: 'pointer', marginBottom: '10px' }}>\r\n                错误堆栈\r\n              </summary>\r\n              <pre style={{ \r\n                background: '#f5f5f5', \r\n                padding: '10px', \r\n                borderRadius: '4px',\r\n                fontSize: '12px',\r\n                overflow: 'auto',\r\n                maxHeight: '200px',\r\n                border: '1px solid #ddd'\r\n              }}>\r\n                {this.state.error?.stack}\r\n              </pre>\r\n            </details>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\n// import AppTest from './App-test';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { ThemeProvider } from './ui/theme/ThemeProvider';\r\nimport { GlobalStyles } from './ui/styles/GlobalStyles';\r\n\r\n// 在 Electron 中设置 global 对象\r\ndeclare global {\r\n  var global: typeof globalThis;\r\n}\r\n\r\nif (typeof global === 'undefined') {\r\n  (globalThis as any).global = globalThis || window;\r\n}\r\n\r\n// 隐藏加载屏幕\r\nconst hideLoadingScreen = () => {\r\n  const loadingScreen = document.getElementById('loading-screen');\r\n  if (loadingScreen) {\r\n    loadingScreen.style.opacity = '0';\r\n    loadingScreen.style.transition = 'opacity 0.3s ease-out';\r\n    setTimeout(() => {\r\n      loadingScreen.remove();\r\n    }, 300);\r\n  }\r\n};\r\n\r\n// 初始化 React 应用\r\nconst container = document.getElementById('root');\r\nif (!container) {\r\n  throw new Error('Root container not found');\r\n}\r\n\r\nconst root = createRoot(container);\r\n\r\ntry {\r\n  root.render(\r\n    <React.StrictMode>\r\n      <ErrorBoundary>\r\n        <ThemeProvider>\r\n          <GlobalStyles />\r\n          <App onReady={hideLoadingScreen} />\r\n        </ThemeProvider>\r\n      </ErrorBoundary>\r\n    </React.StrictMode>\r\n  );\r\n  console.log('React app rendered successfully');\r\n} catch (error) {\r\n  console.error('Failed to render React app:', error);\r\n  // 简单的fallback界面\r\n  document.body.innerHTML = `\r\n    <div style=\"height: 100vh; display: flex; align-items: center; justify-content: center; font-family: system-ui;\">\r\n      <div style=\"text-align: center; color: #d32f2f;\">\r\n        <h1>渲染失败</h1>\r\n        <p>React 应用无法启动</p>\r\n        <button onclick=\"location.reload()\" style=\"padding: 8px 16px; background: #1976d2; color: white; border: none; border-radius: 4px;\">\r\n          重新加载\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 792;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = global[\"webpackChunkg_asset_forge\"] = global[\"webpackChunkg_asset_forge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(5828)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","colors","typography","fontFamily","sans","join","mono","fontSize","xs","sm","base","lg","xl","fontWeight","normal","medium","semibold","bold","lineHeight","tight","relaxed","lightTheme","primary","secondary","accent","success","warning","error","info","background","surface","overlay","text","tertiary","disabled","inverse","border","default","focus","hover","shadow","small","large","canvas","grid","selection","selectionBg","guide","spacing","md","borderRadius","none","full","shadows","inner","animation","duration","fast","slow","easing","ease","easeIn","easeOut","easeInOut","zIndex","hide","auto","docked","dropdown","sticky","banner","modal","popover","skipLink","toast","tooltip","darkTheme","ThemeContext","createContext","undefined","ThemeProvider","children","mode","setMode","useState","currentTheme","contextValue","theme","toggleTheme","prevMode","setTheme","newMode","Provider","value","GlobalStyles","StyledButton","button","$variant","variant","getVariantStyles","$size","size","getSizeStyles","$fullWidth","LoadingSpinner","div","IconWrapper","span","$position","Button","loading","icon","iconPosition","fullWidth","props","ref","displayName","StyledIconButton","IconButton","slideUpAndFade","slideRightAndFade","slideDownAndFade","slideLeftAndFade","DropdownContent","DropdownItemStyled","$destructive","Dropdown","trigger","align","side","asChild","sideOffset","DropdownItem","onSelect","destructive","StyledBadge","$dot","dot","Badge","className","ToolbarContainer","ToolbarSection","ToolbarDivider","AppLogo","LogoIcon","AppName","CenterSection","ProjectInfo","ProjectName","ZoomControl","ZoomValue","TopToolbar","onToggleLeftPanel","onToggleRightPanel","leftPanelCollapsed","rightPanelCollapsed","handleFileAction","action","console","log","handleEditAction","handleZoomChange","delta","onClick","TooltipContainer","TooltipContent","$side","Tooltip","content","ToolPanelContainer","ToolSection","SectionDivider","ToolButton","$active","PanelSwitcher","LeftToolPanel","activePanel","onSwitchPanel","activeTool","setActiveTool","id","name","shortcut","map","tool","handleToolSelect","toolId","WorkspaceContainer","CanvasToolbar","InfiniteCanvasArea","$showGrid","$gridSize","$panX","$panY","$zoom","InfiniteCanvas","CanvasObject","$x","$y","$width","$height","$selected","WelcomeArea","TemplateGrid","TemplateCard","OverviewNavigator","$visible","ViewportIndicator","FloatingControls","ZoomControls","ZoomDisplay","ModeSelector","ModeButton","CanvasInfo","CanvasWorkspace","viewport","setViewport","x","y","zoom","hasError","setHasError","showGrid","setShowGrid","gridSize","snapToGrid","setSnapToGrid","showGuides","setShowGuides","guides","objects","setObjects","selectedObjectId","setSelectedObjectId","showOverview","setShowOverview","containerSize","setContainerSize","width","height","isDragging","setIsDragging","dragStart","setDragStart","lastPan","setLastPan","isDraggingObject","setIsDraggingObject","draggedObjectId","setDraggedObjectId","draggedObjectStart","setDraggedObjectStart","canvasRef","useRef","useCallback","centerPoint","prev","newZoom","Math","max","min","zoomRatio","handleFitToContent","length","bounds","reduce","acc","obj","left","worldX","top","worldY","right","bottom","Infinity","current","canvasRect","getBoundingClientRect","contentWidth","contentHeight","scaleX","scaleY","centerX","centerY","newX","newY","handleMouseDown","e","clientX","clientY","handleObjectMouseDown","objectId","stopPropagation","preventDefault","rect","handleObjectMouseUp","handleMouseMove","currentX","currentY","deltaX","deltaY","safeZoom","worldDeltaX","worldDeltaY","newWorldX","newWorldY","alignedScreenPos","threshold","forEach","guideScreenPos","position","type","abs","worldPoint","snappedWorld","round","safeZoomForConversion","handleMouseUp","handleWheel","mouseX","mouseY","handleDoubleClick","handleCreateTemplate","template","worldPosition","screenPosition","safeZoomForGrid","alignedWorldPosition","newObject","Date","now","handleObjectClick","useEffect","updateContainerSize","handleResize","window","addEventListener","removeEventListener","visibleObjects","useMemo","filter","screenLeft","screenTop","screenRight","screenBottom","isFinite","handleKeyDown","target","HTMLInputElement","HTMLTextAreaElement","ctrlKey","metaKey","key","handleError","style","display","alignItems","justifyContent","flexDirection","gap","title","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onWheel","onDoubleClick","color","opacity","marginBottom","margin","category","emoji","padding","borderBottom","flex","InputContainer","Label","label","InputWrapper","StyledInput","input","$hasLeftIcon","$hasRightIcon","$error","HelperText","Input","forwardRef","helperText","leftIcon","rightIcon","SliderContainer","SliderLabel","SliderRoot","SliderTrack","SliderRange","SliderThumb","Slider","onValueChange","step","SwitchContainer","SwitchContent","SwitchLabel","SwitchDescription","p","SwitchRoot","$checked","SwitchThumb","SwitchWrapper","Switch","checked","onCheckedChange","description","PanelContainer","PanelSection","SectionHeader","SectionTitle","h4","SectionContent","$collapsed","PropertyRow","PropertyLabel","PropertyControl","ColorPicker","ColorSwatch","$color","ColorPresets","PresetColor","NoSelection","NoSelectionIcon","RightPropertiesPanel","selectedTool","selectedObject","collapsedSections","setCollapsedSections","properties","setProperties","rotation","fillColor","strokeColor","strokeWidth","textAlign","visible","locked","toggleSection","sectionId","includes","updateProperty","updateNestedProperty","parent","onChange","Number","placeholder","getVariantColor","indeterminateAnimation","StatusBarContainer","$indeterminate","$value","StatusSection","StatusItem","PerformanceIndicator","$level","Divider","StatusBar","getPerformanceLevel","thresholds","memoryLevel","cpuLevel","PanelHeader","PanelTitle","h3","SearchInput","LayersList","LayerItem","LayerIcon","$expanded","LayerTypeIcon","LayerName","LayerControls","PanelFooter","LayersPanel","searchTerm","setSearchTerm","selectedLayers","setSelectedLayers","layers","setLayers","expanded","getTypeIcon","renderLayer","layer","level","isSelected","layerId","multiSelect","selectLayer","updateLayer","toggleLayerExpansion","toggleLayerVisibility","toggleLayerLock","child","filteredLayers","toLowerCase","SearchSection","CategoryTabs","CategoryTab","AssetsGrid","AssetItem","AssetThumbnail","$bgColor","AssetInfo","AssetName","AssetOverlay","FavoriteButton","StatsSection","AssetsPanel","activeCategory","setActiveCategory","setSortBy","mockAssets","thumbnail","format","tags","favorite","filteredAssets","asset","matchesSearch","some","tag","matchesCategory","count","a","handleAssetClick","assetId","LayoutContainer","TopSection","MainSection","LeftSection","ToolPanel","SidePanel","RightSection","BottomSection","MainLayout","setLeftPanelCollapsed","setRightPanelCollapsed","activeLeftPanel","setActiveLeftPanel","panel","WelcomeContainer","WelcomeContent","WelcomeHeader","WelcomeTitle","h1","WelcomeSubtitle","ActionButtons","WelcomeScreen","onComplete","selectedOption","localStorage","setItem","InitializationManager","options","initializationPromise","timeoutId","this","maxRetries","timeout","enableLogging","state","status","startTime","completedTime","retryCount","getInstance","instance","getState","isInitialized","isInitializing","hasFailed","initializeOnce","initFunction","Error","performInitialization","updateState","setupTimeout","clearTimeout","String","message","setTimeout","updates","reset","forceReinitialize","getStats","destroy","initializationManager","constructor","updateHistory","suspiciousPatterns","warningCallbacks","maxHistorySize","rapidUpdateThreshold","rapidUpdateWindow","circularDependencyDepth","enableStackTrace","validateStateUpdate","statePath","prevValue","nextValue","componentName","isValueEqual","update","timestamp","cloneValue","stackTrace","getStackTrace","recordUpdate","detectSuspiciousPatterns","detectInfiniteLoop","history","recentUpdates","slice","pathCounts","Map","get","set","path","logSuspiciousUpdates","index","toISOString","JSON","stringify","getUpdateHistory","getSuspiciousPatterns","clearHistory","onWarning","callback","push","removeWarning","indexOf","splice","generateReport","recommendations","totalUpdates","detectRapidUpdates","detectCircularDependencies","detectInfiniteLoopPattern","windowStart","pattern","detectedAt","affectedPaths","severity","updateCount","addSuspiciousPattern","pathSequence","i","j","cyclePaths","Array","from","Set","u","existing","b","parse","stack","split","DebugLogger","logEntries","logLevelPriority","debug","warn","enableConsoleOutput","maxLogEntries","logLevel","categories","enableTimestamp","enableComponentTracking","data","logComponent","details","logStateUpdate","sanitizeValue","hasChanged","logEffect","effectName","dependencies","dep","dependencyCount","logRender","renderCount","reason","logPerformance","operation","logInfiniteLoopDetection","detected","getLogEntries","limit","entries","entry","minPriority","clearLogs","exportLogs","lines","component","toUpperCase","generateStats","stats","totalEntries","entriesByLevel","entriesByCategory","entriesByComponent","recentErrors","performanceIssues","setOptions","outputToConsole","ReactLoopFixToolkit","initManager","stateValidator","debugLogger","initializeAppOnce","logComponentRender","logEffectExecution","generateDiagnosticReport","initialization","stateValidation","logging","clearAllHistory","resetAll","reactLoopFixToolkit","useAppStore","version","platform","initializationError","currentPage","isFirstTime","sidebarCollapsed","toolbarCollapsed","propertiesPanelCollapsed","isLoading","canvasZoom","canvasX","canvasY","showRulers","elements","selectedElements","selectedElement","currentProject","hasUnsavedChanges","initializeApp","async","hasUsedBefore","getItem","sampleElements","fill","stroke","elementsCount","Object","keys","errorMessage","batchUpdate","validatedUpdates","hasValidUpdates","currentValue","updatedKeys","requestedKeys","setAppVersion","setPlatform","setCurrentPage","page","setFirstTime","setSidebarCollapsed","collapsed","setToolbarCollapsed","setPropertiesPanelCollapsed","setLoading","setCanvasZoom","clampedZoom","setCanvasPosition","newPosition","currentPosition","show","setShowRulers","addElement","element","newElements","elementType","elementName","updateElement","updatedElement","deleteElement","newSelectedElements","selectedId","newSelectedElement","selectElements","elementIds","validElementIds","invalidIds","selectedCount","clearSelection","emptySelection","previousCount","setCurrentProject","project","hasProject","setHasUnsavedChanges","hasChanges","AppWrapper","LoadingScreen","ErrorScreen","RetryButton","AppContainer","showWelcome","setShowWelcome","hasSetWelcomeMode","setHasSetWelcomeMode","setWelcomeMode","restoreNormalMode","originalSizeRef","sizeResult","electronAPI","getSize","setSize","setResizable","center","useWindowControl","manualInit","enableAutoInit","onInitialized","onError","hasAttemptedInit","setHasAttemptedInit","err","resetInitialization","canInitialize","useAppInitialization","handleWelcomeComplete","handleRetryInit","renderState","logProps","logReason","maxRenderWarning","renderCountRef","lastPropsRef","renderTimesRef","currentRenderCount","renderInterval","propsChanged","logData","maxWarning","averageInterval","useRenderCounter","renderContent","ErrorBoundary","Component","super","getDerivedStateFromError","componentDidCatch","errorInfo","setState","render","maxWidth","cursor","marginRight","location","reload","overflow","maxHeight","globalThis","global","hideLoadingScreen","loadingScreen","document","getElementById","transition","remove","container","root","onReady","body","innerHTML","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","every","r","n","getter","__esModule","d","getPrototypeOf","t","then","ns","create","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","nc","__webpack_exports__"],"sourceRoot":""}